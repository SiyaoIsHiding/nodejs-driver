{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.52.2",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "cassandra-driver!",
  "docComment": "",
  "name": "cassandra-driver",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "cassandra-driver!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!addressResolution:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$a: "
            },
            {
              "kind": "Content",
              "text": "{\n    AddressTranslator: typeof "
            },
            {
              "kind": "Reference",
              "text": "AddressTranslator",
              "canonicalReference": "cassandra-driver!~AddressTranslator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    EC2MultiRegionTranslator: typeof "
            },
            {
              "kind": "Reference",
              "text": "EC2MultiRegionTranslator",
              "canonicalReference": "cassandra-driver!~EC2MultiRegionTranslator:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "addressResolution",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!ArgumentError:class",
          "docComment": "/**\n * Represents an error that is raised when one of the arguments provided to a method is not valid\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ArgumentError extends "
            },
            {
              "kind": "Reference",
              "text": "DriverError",
              "canonicalReference": "cassandra-driver!DriverError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ArgumentError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!ArgumentError:constructor(1)",
              "docComment": "/**\n * Represents an error that is raised when one of the arguments provided to a method is not valid\n *\n * @param message -  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!auth:var",
          "docComment": "/**\n * DSE Authentication module. <p> Contains the classes used for connecting to a DSE cluster secured with DseAuthenticator. </p>  @module auth\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$f: "
            },
            {
              "kind": "Content",
              "text": "{\n    Authenticator: typeof "
            },
            {
              "kind": "Reference",
              "text": "Authenticator",
              "canonicalReference": "cassandra-driver!Authenticator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    AuthProvider: typeof "
            },
            {
              "kind": "Reference",
              "text": "AuthProvider",
              "canonicalReference": "cassandra-driver!AuthProvider:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DseGssapiAuthProvider: typeof "
            },
            {
              "kind": "Reference",
              "text": "DseGssapiAuthProvider",
              "canonicalReference": "cassandra-driver!DseGssapiAuthProvider:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DsePlainTextAuthProvider: typeof "
            },
            {
              "kind": "Reference",
              "text": "DsePlainTextAuthProvider",
              "canonicalReference": "cassandra-driver!DsePlainTextAuthProvider:class"
            },
            {
              "kind": "Content",
              "text": ";\n    NoAuthProvider: typeof "
            },
            {
              "kind": "Reference",
              "text": "NoAuthProvider",
              "canonicalReference": "cassandra-driver!NoAuthProvider:class"
            },
            {
              "kind": "Content",
              "text": ";\n    PlainTextAuthProvider: typeof "
            },
            {
              "kind": "Reference",
              "text": "PlainTextAuthProvider",
              "canonicalReference": "cassandra-driver!PlainTextAuthProvider:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "auth",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!AuthenticationError:class",
          "docComment": "/**\n * Represents an error when trying to authenticate with auth-enabled host\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class AuthenticationError extends "
            },
            {
              "kind": "Reference",
              "text": "DriverError",
              "canonicalReference": "cassandra-driver!DriverError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "AuthenticationError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!AuthenticationError:constructor(1)",
              "docComment": "/**\n * Represents an error when trying to authenticate with auth-enabled host\n *\n * @param message -  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!AuthenticationError#additionalInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "additionalInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseError",
                  "canonicalReference": "cassandra-driver!ResponseError:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "additionalInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Authenticator:class",
          "docComment": "/**\n * Handles SASL authentication with Cassandra servers. Each time a new connection is created and the server requires authentication, a new instance of this class will be created by the corresponding.  @alias module:auth~Authenticator\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Authenticator "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Authenticator",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Authenticator#evaluateChallenge:member(1)",
              "docComment": "/**\n * Evaluates a challenge received from the Server. Generally, this method should callback with no error and no additional params when authentication is complete from the client perspective.\n *\n * @param challenge - \n *\n * @param callback - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "evaluateChallenge(challenge: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "challenge",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "evaluateChallenge"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Authenticator#initialResponse:member(1)",
              "docComment": "/**\n * Obtain an initial response token for initializing the SASL handshake.\n *\n * @param callback - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialResponse(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initialResponse"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Authenticator#onAuthenticationSuccess:member(1)",
              "docComment": "/**\n * Called when authentication is successful with the last information optionally sent by the server.\n *\n * @param token - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onAuthenticationSuccess(token?: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "token",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onAuthenticationSuccess"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!AuthProvider:class",
          "docComment": "/**\n * Provides [Authenticator]{@link module:auth~Authenticator} instances to be used when connecting to a host.  @abstract  @alias module:auth~AuthProvider\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class AuthProvider "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "AuthProvider",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!AuthProvider#newAuthenticator:member(1)",
              "docComment": "/**\n * Returns an [Authenticator]{@link module:auth~Authenticator} instance to be used when connecting to a host.\n *\n * @param endpoint - The ip address and port number in the format ip:port\n *\n * @param name - Authenticator name  @abstract\n *\n * @returns {Authenticator}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newAuthenticator(endpoint: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Authenticator",
                  "canonicalReference": "cassandra-driver!Authenticator:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "endpoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "newAuthenticator"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!BigDecimal:class",
          "docComment": "/**\n * A <code>BigDecimal</code> consists of an [arbitrary precision integer]{@link module:types~Integer} <i>unscaled value</i> and a 32-bit integer <i>scale</i>. If zero or positive, the scale is the number of digits to the right of the decimal point. If negative, the unscaled value of the number is multiplied by ten to the power of the negation of the scale. The value of the number represented by the <code>BigDecimal</code> is therefore <tt>(unscaledValue &times; 10<sup>-scale</sup>)</tt>.  @class  @classdesc The <code>BigDecimal</code> class provides operations for arithmetic, scale manipulation, rounding, comparison and format conversion. The {@link #toString} method provides a canonical representation of a <code>BigDecimal</code>.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class BigDecimal "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BigDecimal",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!BigDecimal:constructor(1)",
              "docComment": "/**\n * Constructs an immutable arbitrary-precision signed decimal number. A <code>BigDecimal</code> consists of an [arbitrary precision integer]{@link module:types~Integer} <i>unscaled value</i> and a 32-bit integer <i>scale</i>. If zero or positive, the scale is the number of digits to the right of the decimal point. If negative, the unscaled value of the number is multiplied by ten to the power of the negation of the scale. The value of the number represented by the <code>BigDecimal</code> is therefore <tt>(unscaledValue &times; 10<sup>-scale</sup>)</tt>.\n *\n * @param unscaledValue - The integer part of the decimal.\n *\n * @param scale - The scale of the decimal.  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(unscaledValue: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", scale: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "unscaledValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "scale",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal#add:member(1)",
              "docComment": "/**\n * Returns the sum of this and the given <code>BigDecimal</code>.\n *\n * @param other - The BigDecimal to sum to this.  @return {!BigDecimal} The BigDecimal result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(other: "
                },
                {
                  "kind": "Reference",
                  "text": "BigDecimal",
                  "canonicalReference": "cassandra-driver!BigDecimal:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BigDecimal",
                  "canonicalReference": "cassandra-driver!BigDecimal:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal#compare:member(1)",
              "docComment": "/**\n * Compares this BigDecimal with the given one.\n *\n * @param other - Integer to compare against.  @return {number} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compare(other: "
                },
                {
                  "kind": "Reference",
                  "text": "BigDecimal",
                  "canonicalReference": "cassandra-driver!BigDecimal:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "compare"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal#equals:member(1)",
              "docComment": "/**\n * Returns true if the value of the BigDecimal instance and other are the same\n *\n * @param other - \n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "BigDecimal",
                  "canonicalReference": "cassandra-driver!BigDecimal:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal.fromBuffer:member(1)",
              "docComment": "/**\n * Returns the BigDecimal representation of a buffer composed of the scale (int32BE) and the unsigned value (varint BE)\n *\n * @param buf - \n *\n * @returns {BigDecimal}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromBuffer(buf: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BigDecimal",
                  "canonicalReference": "cassandra-driver!BigDecimal:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "buf",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal.fromNumber:member(1)",
              "docComment": "/**\n * Returns a BigDecimal representation of the Number\n *\n * @param value - \n *\n * @returns {BigDecimal}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromNumber(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BigDecimal",
                  "canonicalReference": "cassandra-driver!BigDecimal:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromNumber"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal.fromString:member(1)",
              "docComment": "/**\n * Returns a BigDecimal representation of the string\n *\n * @param value - \n *\n * @returns {BigDecimal}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BigDecimal",
                  "canonicalReference": "cassandra-driver!BigDecimal:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal#greaterThan:member(1)",
              "docComment": "/**\n * Returns true if the current instance is greater than the other\n *\n * @param other - \n *\n * @returns {boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "greaterThan(other: "
                },
                {
                  "kind": "Reference",
                  "text": "BigDecimal",
                  "canonicalReference": "cassandra-driver!BigDecimal:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "greaterThan"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal#isNegative:member(1)",
              "docComment": "/**\n * @return {boolean} Whether this value is negative.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isNegative(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isNegative"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal#isZero:member(1)",
              "docComment": "/**\n * @return {boolean} Whether this value is zero.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isZero(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isZero"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal#notEquals:member(1)",
              "docComment": "/**\n * @param other - \n *\n * @returns {boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notEquals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "BigDecimal",
                  "canonicalReference": "cassandra-driver!BigDecimal:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "notEquals"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal#subtract:member(1)",
              "docComment": "/**\n * Returns the difference of this and the given BigDecimal.\n *\n * @param other - The BigDecimal to subtract from this.  @return {!BigDecimal} The BigDecimal result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subtract(other: "
                },
                {
                  "kind": "Reference",
                  "text": "BigDecimal",
                  "canonicalReference": "cassandra-driver!BigDecimal:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BigDecimal",
                  "canonicalReference": "cassandra-driver!BigDecimal:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "subtract"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal.toBuffer:member(1)",
              "docComment": "/**\n * Returns a buffer representation composed of the scale as a BE int 32 and the unsigned value as a BE varint\n *\n * @param value - \n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static toBuffer(value: "
                },
                {
                  "kind": "Reference",
                  "text": "BigDecimal",
                  "canonicalReference": "cassandra-driver!BigDecimal:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal#toJSON:member(1)",
              "docComment": "/**\n * Returns the string representation. Method used by the native JSON.stringify() to serialize this instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal#toNumber:member(1)",
              "docComment": "/**\n * Returns a Number representation of this <code>BigDecimal</code>.\n *\n * @returns {Number}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toNumber(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toNumber"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!BigDecimal#toString:member(1)",
              "docComment": "/**\n * Returns the string representation of this <code>BigDecimal</code>\n *\n * @returns {string}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!BusyConnectionError:class",
          "docComment": "/**\n * Represents a client-side error indicating that all connections to a certain host have reached the maximum amount of in-flight requests supported.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class BusyConnectionError extends "
            },
            {
              "kind": "Reference",
              "text": "DriverError",
              "canonicalReference": "cassandra-driver!DriverError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BusyConnectionError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!BusyConnectionError:constructor(1)",
              "docComment": "/**\n * Represents a client-side error indicating that all connections to a certain host have reached the maximum amount of in-flight requests supported.\n *\n * @param address - \n *\n * @param maxRequestsPerConnection - \n *\n * @param connectionLength -  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", maxRequestsPerConnection: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", connectionLength: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "maxRequestsPerConnection",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "connectionLength",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Client:class",
          "docComment": "/**\n * Creates a new instance of {@link Client}.  @classdesc Represents a database client that maintains multiple connections to the cluster nodes, providing methods to execute CQL statements. <p> The <code>Client</code> uses [policies]{@link module:policies} to decide which nodes to connect to, which node to use per each query execution, when it should retry failed or timed-out executions and how reconnection to down nodes should be made. </p>  @extends EventEmitter\n *\n * @param options - The options for this instance.\n *\n * @example\n *\n * <caption>Creating a new client instance</caption> const client = new Client({ contactPoints: ['10.0.1.101', '10.0.1.102'], localDataCenter: 'datacenter1' });\n *\n * @example\n *\n * <caption>Executing a query</caption> const result = await client.connect(); console.log(`Connected to ${client.hosts.length} nodes in the cluster: ${client.hosts.keys().join(', ')}`);\n *\n * @example\n *\n * <caption>Executing a query</caption> const result = await client.execute('SELECT key FROM system.local'); const row = result.first(); console.log(row['key']);\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Client extends "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter.EventEmitter",
              "canonicalReference": "!\"\\\"events\\\"\".EventEmitter.EventEmitter"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Client",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!Client:constructor(1)",
              "docComment": "/**\n * Creates a new instance of {@link Client}. Represents a database client that maintains multiple connections to the cluster nodes, providing methods to execute CQL statements. <p> The <code>Client</code> uses [policies]{@link module:policies} to decide which nodes to connect to, which node to use per each query execution, when it should retry failed or timed-out executions and how reconnection to down nodes should be made. </p>\n *\n * @param options - The options for this instance.\n *\n * @example\n *\n * <caption>Creating a new client instance</caption> const client = new Client({ contactPoints: ['10.0.1.101', '10.0.1.102'], localDataCenter: 'datacenter1' });\n *\n * @example\n *\n * <caption>Executing a query</caption> const result = await client.connect(); console.log(`Connected to ${client.hosts.length} nodes in the cluster: ${client.hosts.keys().join(', ')}`);\n *\n * @example\n *\n * <caption>Executing a query</caption> const result = await client.execute('SELECT key FROM system.local'); const row = result.first(); console.log(row['key']);  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Reference",
                  "text": "DseClientOptions",
                  "canonicalReference": "cassandra-driver!~DseClientOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#batch:member(1)",
              "docComment": "/**\n * Executes batch of queries on an available connection to a host. <p>It returns a <code>Promise</code> when a <code>callback</code> is not provided.</p>\n *\n * @param queries - The queries to execute as an Array of strings or as an array of object containing the query and params\n *\n * @param options - The query options.\n *\n * @param callback - Executes callback(err, result) when the batch was executed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batch(queries: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | {\n        query: string;\n        params?: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayOrObject",
                  "canonicalReference": "cassandra-driver!~ArrayOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "QueryOptions",
                  "canonicalReference": "cassandra-driver!QueryOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResultSet",
                  "canonicalReference": "cassandra-driver!ResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "queries",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "batch"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#batch:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batch(queries: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | {\n        query: string;\n        params?: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayOrObject",
                  "canonicalReference": "cassandra-driver!~ArrayOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "QueryOptions",
                  "canonicalReference": "cassandra-driver!QueryOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResultSet",
                  "canonicalReference": "cassandra-driver!ResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "queries",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "batch"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#batch:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batch(queries: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | {\n        query: string;\n        params?: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayOrObject",
                  "canonicalReference": "cassandra-driver!~ArrayOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResultSet",
                  "canonicalReference": "cassandra-driver!ResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "queries",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "batch"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#connect:member(1)",
              "docComment": "/**\n * Attempts to connect to one of the [contactPoints]{@link ClientOptions} and discovers the rest the nodes of the cluster. <p>When the {@link Client} is already connected, it resolves immediately.</p> <p>It returns a <code>Promise</code> when a <code>callback</code> is not provided.</p>\n *\n * @param callback - The optional callback that is invoked when the pool is connected or it failed to connect.\n *\n * @example\n *\n * <caption>Usage example</caption> await client.connect();\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connect(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#connect:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connect(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "EmptyCallback",
                  "canonicalReference": "cassandra-driver!~EmptyCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#eachRow:member(1)",
              "docComment": "/**\n * Executes the query and calls <code>rowCallback</code> for each row as soon as they are received. Calls the final <code>callback</code> after all rows have been sent, or when there is an error. <p> The query can be prepared (recommended) or not depending on the [prepare]{@linkcode QueryOptions} flag. </p>\n *\n * @param query - The query to execute\n *\n * @param params - Array of parameter values or an associative array (object) containing parameter names as keys and its value.\n *\n * @param options - The query options.\n *\n * @param rowCallback - Executes <code>rowCallback(n, row)</code> per each row received, where n is the row index and row is the current Row.\n *\n * @param callback - Executes <code>callback(err, result)</code> after all rows have been received. <p> When dealing with paged results, [ResultSet#nextPage()]{@link module:types~ResultSet#nextPage} method can be used to retrieve the following page. In that case, <code>rowCallback()</code> will be again called for each row and the final callback will be invoked when all rows in the following page has been retrieved. </p>\n *\n * @example\n *\n * <caption>Using per-row callback and arrow functions</caption> client.eachRow(query, params, { prepare: true }, (n, row) => console.log(n, row), err => console.error(err));\n *\n * @example\n *\n * <caption>Overloads</caption> client.eachRow(query, rowCallback); client.eachRow(query, params, rowCallback); client.eachRow(query, params, options, rowCallback); client.eachRow(query, params, rowCallback, callback); client.eachRow(query, params, options, rowCallback, callback);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eachRow(query: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", params: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayOrObject",
                  "canonicalReference": "cassandra-driver!~ArrayOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "QueryOptions",
                  "canonicalReference": "cassandra-driver!QueryOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", rowCallback: "
                },
                {
                  "kind": "Content",
                  "text": "(n: number, row: "
                },
                {
                  "kind": "Reference",
                  "text": "Row",
                  "canonicalReference": "cassandra-driver!Row:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResultSet",
                  "canonicalReference": "cassandra-driver!ResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "rowCallback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 15
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "eachRow"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#eachRow:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eachRow(query: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", params: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayOrObject",
                  "canonicalReference": "cassandra-driver!~ArrayOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": ", rowCallback: "
                },
                {
                  "kind": "Content",
                  "text": "(n: number, row: "
                },
                {
                  "kind": "Reference",
                  "text": "Row",
                  "canonicalReference": "cassandra-driver!Row:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResultSet",
                  "canonicalReference": "cassandra-driver!ResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "rowCallback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "eachRow"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#eachRow:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eachRow(query: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", rowCallback: "
                },
                {
                  "kind": "Content",
                  "text": "(n: number, row: "
                },
                {
                  "kind": "Reference",
                  "text": "Row",
                  "canonicalReference": "cassandra-driver!Row:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "rowCallback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "eachRow"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#execute:member(1)",
              "docComment": "/**\n * Executes a query on an available connection. <p>The query can be prepared (recommended) or not depending on the [prepare]{@linkcode QueryOptions} flag.</p> <p> Some execution failures can be handled transparently by the driver, according to the [RetryPolicy]{@linkcode module:policies/retry~RetryPolicy} or the [SpeculativeExecutionPolicy]{@linkcode module:policies/speculativeExecution} used. </p> <p>It returns a <code>Promise</code> when a <code>callback</code> is not provided.</p>\n *\n * @param query - The query to execute.\n *\n * @param params - Array of parameter values or an associative array (object) containing parameter names as keys and its value.\n *\n * @param options - The query options for the execution.\n *\n * @param callback - Executes callback(err, result) when execution completed. When not defined, the method will return a promise.\n *\n * @example\n *\n * <caption>Promise-based API, using async/await</caption> const query = 'SELECT name, email FROM users WHERE id = ?'; const result = await client.execute(query, [ id ], { prepare: true }); const row = result.first(); console.log('%s: %s', row['name'], row['email']);\n *\n * @example\n *\n * <caption>Callback-based API</caption> const query = 'SELECT name, email FROM users WHERE id = ?'; client.execute(query, [ id ], { prepare: true }, function (err, result) { assert.ifError(err); const row = result.first(); console.log('%s: %s', row['name'], row['email']); });\n *\n * @see\n *\n * {@link ExecutionProfile} to reuse a set of options across different query executions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "execute(query: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayOrObject",
                  "canonicalReference": "cassandra-driver!~ArrayOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "QueryOptions",
                  "canonicalReference": "cassandra-driver!QueryOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResultSet",
                  "canonicalReference": "cassandra-driver!ResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "execute"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#execute:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "execute(query: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", params: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayOrObject",
                  "canonicalReference": "cassandra-driver!~ArrayOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "QueryOptions",
                  "canonicalReference": "cassandra-driver!QueryOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResultSet",
                  "canonicalReference": "cassandra-driver!ResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "execute"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#execute:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "execute(query: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", params: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayOrObject",
                  "canonicalReference": "cassandra-driver!~ArrayOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResultSet",
                  "canonicalReference": "cassandra-driver!ResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "execute"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#execute:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "execute(query: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResultSet",
                  "canonicalReference": "cassandra-driver!ResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "execute"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#executeGraph:member(1)",
              "docComment": "/**\n * Executes a graph query. <p>It returns a <code>Promise</code> when a <code>callback</code> is not provided.</p>\n *\n * @param query - The gremlin query.\n *\n * @param parameters - An associative array containing the key and values of the parameters.\n *\n * @param options - The graph query options.\n *\n * @param callback - Function to execute when the response is retrieved, taking two arguments: <code>err</code> and <code>result</code>. When not defined, the method will return a promise.\n *\n * @example\n *\n * <caption>Promise-based API, using async/await</caption> const result = await client.executeGraph('g.V()'); // Get the first item (vertex, edge, scalar value, ...) const vertex = result.first(); console.log(vertex.label);\n *\n * @example\n *\n * <caption>Callback-based API</caption> client.executeGraph('g.V()', (err, result) => { const vertex = result.first(); console.log(vertex.label); });\n *\n * @example\n *\n * <caption>Iterating through the results</caption> const result = await client.executeGraph('g.E()'); for (let edge of result) { console.log(edge.label); // created });\n *\n * @example\n *\n * <caption>Using result.forEach()</caption> const result = await client.executeGraph('g.V().hasLabel(\"person\")'); result.forEach(function(vertex) { console.log(vertex.type); // vertex console.log(vertex.label); // person });\n *\n * @see\n *\n * {@link ExecutionProfile} to reuse a set of options across different query executions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "executeGraph(traversal: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", parameters: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [name: string]: any;\n    } | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "GraphQueryOptions",
                  "canonicalReference": "cassandra-driver!~GraphQueryOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GraphResultSet",
                  "canonicalReference": "cassandra-driver!~GraphResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "traversal",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parameters",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "executeGraph"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#executeGraph:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "executeGraph(traversal: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", parameters: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [name: string]: any;\n    } | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GraphResultSet",
                  "canonicalReference": "cassandra-driver!~GraphResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "traversal",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parameters",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "executeGraph"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#executeGraph:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "executeGraph(traversal: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GraphResultSet",
                  "canonicalReference": "cassandra-driver!~GraphResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "traversal",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "executeGraph"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#executeGraph:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "executeGraph(traversal: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", parameters?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [name: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GraphQueryOptions",
                  "canonicalReference": "cassandra-driver!~GraphQueryOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GraphResultSet",
                  "canonicalReference": "cassandra-driver!~GraphResultSet:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "traversal",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parameters",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "executeGraph"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#getReplicas:member(1)",
              "docComment": "/**\n * Gets the host that are replicas of a given token.\n *\n * @param keyspace - \n *\n * @param token - \n *\n * @returns {Array<Host>}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getReplicas(keyspace: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", token: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Host",
                  "canonicalReference": "cassandra-driver!~Host:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "keyspace",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "token",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getReplicas"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#getState:member(1)",
              "docComment": "/**\n * Gets a snapshot containing information on the connections pools held by this Client at the current time. <p> The information provided in the returned object only represents the state at the moment this method was called and it's not maintained in sync with the driver metadata. </p>\n *\n * @returns {ClientState} A [ClientState]{@linkcode module:metadata~ClientState} instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getState(): "
                },
                {
                  "kind": "Reference",
                  "text": "ClientState",
                  "canonicalReference": "cassandra-driver!~ClientState:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getState"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Client#hosts:member",
              "docComment": "/**\n * Gets an associative array of cluster hosts.  @type {HostMap}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hosts: "
                },
                {
                  "kind": "Reference",
                  "text": "HostMap",
                  "canonicalReference": "cassandra-driver!~HostMap:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hosts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Client#keyspace:member",
              "docComment": "/**\n * Gets the name of the active keyspace.  @type {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyspace: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "keyspace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Client#metadata:member",
              "docComment": "/**\n * Gets the schema and cluster metadata information.  @type {Metadata}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata: "
                },
                {
                  "kind": "Reference",
                  "text": "Metadata",
                  "canonicalReference": "cassandra-driver!~Metadata:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Client#metrics:member",
              "docComment": "/**\n * The [ClientMetrics]{@link module:metrics~ClientMetrics} instance used to expose measurements of its internal behavior and of the server as seen from the driver side. <p>By default, a [DefaultMetrics]{@link module:metrics~DefaultMetrics} instance is used.</p>  @type {ClientMetrics}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metrics: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientMetrics",
                  "canonicalReference": "cassandra-driver!ClientMetrics:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "metrics",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#shutdown:member(1)",
              "docComment": "/**\n * Closes all connections to all hosts. <p>It returns a <code>Promise</code> when a <code>callback</code> is not provided.</p>\n *\n * @param callback - Optional callback to be invoked when finished closing all connections.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shutdown(callback?: "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "shutdown"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Client#stream:member(1)",
              "docComment": "/**\n * Executes the query and pushes the rows to the result stream as soon as they received. <p> The stream is a [ReadableStream]{@linkcode https://nodejs.org/api/stream.html#stream_class_stream_readable} object that emits rows. It can be piped downstream and provides automatic pause/resume logic (it buffers when not read). </p> <p> The query can be prepared (recommended) or not depending on {@link QueryOptions}.prepare flag. Retries on multiple hosts if needed. </p>\n *\n * @param query - The query to prepare and execute.\n *\n * @param params - Array of parameter values or an associative array (object) containing parameter names as keys and its value\n *\n * @param options - The query options.\n *\n * @param callback - executes callback(err) after all rows have been received or if there is an error\n *\n * @returns {ResultStream}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stream(query: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayOrObject",
                  "canonicalReference": "cassandra-driver!~ArrayOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "QueryOptions",
                  "canonicalReference": "cassandra-driver!QueryOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Reference",
                  "text": "EmptyCallback",
                  "canonicalReference": "cassandra-driver!~EmptyCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ResultStream",
                  "canonicalReference": "cassandra-driver!ResultStream:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "stream"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!ClientMetrics:class",
          "docComment": "/**\n * Represents a base class that is used to measure events from the server and the client as seen by the driver.  @alias module:metrics~ClientMetrics  @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ClientMetrics "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ClientMetrics",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onAuthenticationError:member(1)",
              "docComment": "/**\n * Method invoked when an authentication error is obtained from the server.\n *\n * @param e - The error encountered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onAuthenticationError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "AuthenticationError",
                  "canonicalReference": "cassandra-driver!AuthenticationError:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onAuthenticationError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onClientTimeoutError:member(1)",
              "docComment": "/**\n * Method invoked when an error (different than a server or client timeout, authentication or connection error) is encountered when executing a request.\n *\n * @param e - The timeout error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClientTimeoutError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "OperationTimedOutError",
                  "canonicalReference": "cassandra-driver!OperationTimedOutError:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onClientTimeoutError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onClientTimeoutRetry:member(1)",
              "docComment": "/**\n * Method invoked when an execution is retried as a result of a client-level timeout.\n *\n * @param e - The error that caused the retry.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClientTimeoutRetry(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onClientTimeoutRetry"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onConnectionError:member(1)",
              "docComment": "/**\n * Method invoked when there is a connection error.\n *\n * @param e - The error encountered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onConnectionError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onConnectionError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onIgnoreError:member(1)",
              "docComment": "/**\n * Method invoked when an error is marked as ignored by the retry policy.\n *\n * @param e - The error that was ignored by the retry policy.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onIgnoreError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onIgnoreError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onOtherError:member(1)",
              "docComment": "/**\n * Method invoked when an error (different than a server or client timeout, authentication or connection error) is encountered when executing a request.\n *\n * @param e - The error encountered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onOtherError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onOtherError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onOtherErrorRetry:member(1)",
              "docComment": "/**\n * Method invoked when an error (other than a server or client timeout) is retried.\n *\n * @param e - The error that caused the retry.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onOtherErrorRetry(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onOtherErrorRetry"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onReadTimeoutError:member(1)",
              "docComment": "/**\n * Method invoked when a read timeout error is obtained from the server.\n *\n * @param e - The error encountered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onReadTimeoutError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseError",
                  "canonicalReference": "cassandra-driver!ResponseError:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onReadTimeoutError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onReadTimeoutRetry:member(1)",
              "docComment": "/**\n * Method invoked when an execution is retried as a result of a read timeout from the server (coordinator to replica).\n *\n * @param e - The error that caused the retry.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onReadTimeoutRetry(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onReadTimeoutRetry"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onResponse:member(1)",
              "docComment": "/**\n * Method invoked when any response is obtained, the response can be the result of a successful execution or a server-side error.\n *\n * @param latency - The latency represented in a <code>[seconds, nanoseconds]</code> tuple Array, where nanoseconds is the remaining part of the real time that can't be represented in second precision.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onResponse(latency: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "latency",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onResponse"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onSpeculativeExecution:member(1)",
              "docComment": "/**\n * Method invoked when a speculative execution is started.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSpeculativeExecution(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "onSpeculativeExecution"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onSuccessfulResponse:member(1)",
              "docComment": "/**\n * Method invoked when a response is obtained successfully.\n *\n * @param latency - The latency represented in a <code>[seconds, nanoseconds]</code> tuple Array, where nanoseconds is the remaining part of the real time that can't be represented in second precision.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSuccessfulResponse(latency: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "latency",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onSuccessfulResponse"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onUnavailableError:member(1)",
              "docComment": "/**\n * Method invoked when an unavailable error is obtained from the server.\n *\n * @param e - The error encountered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onUnavailableError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseError",
                  "canonicalReference": "cassandra-driver!ResponseError:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onUnavailableError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onUnavailableRetry:member(1)",
              "docComment": "/**\n * Method invoked when an execution is retried as a result of an unavailable error from the server.\n *\n * @param e - The error that caused the retry.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onUnavailableRetry(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onUnavailableRetry"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onWriteTimeoutError:member(1)",
              "docComment": "/**\n * Method invoked when a write timeout error is obtained from the server.\n *\n * @param e - The error encountered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onWriteTimeoutError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseError",
                  "canonicalReference": "cassandra-driver!ResponseError:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onWriteTimeoutError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ClientMetrics#onWriteTimeoutRetry:member(1)",
              "docComment": "/**\n * Method invoked when an execution is retried as a result of a write timeout from the server (coordinator to replica).\n *\n * @param e - The error that caused the retry.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onWriteTimeoutRetry(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onWriteTimeoutRetry"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "cassandra-driver!ClientOptions:interface",
          "docComment": "/**\n * Client options. <p>While the driver provides lots of extensibility points and configurability, few client options are required.</p> <p>Default values for all settings are designed to be suitable for the majority of use cases, you should avoid fine tuning it when not needed.</p> <p>See [Client constructor]{@link Client} documentation for recommended options.</p>  @typedef {Object} ClientOptions  @property {Array.<string>} contactPoints Array of addresses or host names of the nodes to add as contact points. <p> Contact points are addresses of Cassandra nodes that the driver uses to discover the cluster topology. </p> <p> Only one contact point is required (the driver will retrieve the address of the other nodes automatically), but it is usually a good idea to provide more than one contact point, because if that single contact point is unavailable, the driver will not be able to initialize correctly. </p>  @property {String} [localDataCenter] The local data center to use. <p> If using DCAwareRoundRobinPolicy (default), this option is required and only hosts from this data center are connected to and used in query plans. </p>  @property {String} [keyspace] The logged keyspace for all the connections created within the {@link Client} instance.  @property {Object} [credentials] An object containing the username and password for plain-text authentication. It configures the authentication provider to be used against Apache Cassandra's PasswordAuthenticator or DSE's DseAuthenticator, when default auth scheme is plain-text. <p> Note that you should configure either <code>credentials</code> or <code>authProvider</code> to connect to an auth-enabled cluster, but not both. </p>  @property {String} [credentials.username] The username to use for plain-text authentication.  @property {String} [credentials.password] The password to use for plain-text authentication.  @property {Uuid} [id] A unique identifier assigned to a {@link Client} object, that will be communicated to the server (DSE 6.0+) to identify the client instance created with this options. When not defined, the driver will generate a random identifier.  @property {String} [applicationName] An optional setting identifying the name of the application using the {@link Client} instance. <p>This value is passed to DSE and is useful as metadata for describing a client connection on the server side.</p>  @property {String} [applicationVersion] An optional setting identifying the version of the application using the {@link Client} instance. <p>This value is passed to DSE and is useful as metadata for describing a client connection on the server side.</p>  @property {Object} [monitorReporting] Options for reporting mechanism from the client to the DSE server, for versions that support it.  @property {Boolean} [monitorReporting.enabled=true] Determines whether the reporting mechanism is enabled. Defaults to <code>true</code>.  @property {Object} [cloud] The options to connect to a cloud instance.  @property {String|URL} cloud.secureConnectBundle Determines the file path for the credentials file bundle.  @property {Number} [refreshSchemaDelay] The default window size in milliseconds used to debounce node list and schema refresh metadata requests. Default: 1000.  @property {Boolean} [isMetadataSyncEnabled] Determines whether client-side schema metadata retrieval and update is enabled. <p>Setting this value to <code>false</code> will cause keyspace information not to be automatically loaded, affecting replica calculation per token in the different keyspaces. When disabling metadata synchronization, use [Metadata.refreshKeyspaces()]{@link module:metadata~Metadata#refreshKeyspaces} to keep keyspace information up to date or token-awareness will not work correctly.</p> Default: <code>true</code>.  @property {Boolean} [prepareOnAllHosts] Determines if the driver should prepare queries on all hosts in the cluster. Default: <code>true</code>.  @property {Boolean} [rePrepareOnUp] Determines if the driver should re-prepare all cached prepared queries on a host when it marks it back up. Default: <code>true</code>.  @property {Number} [maxPrepared] Determines the maximum amount of different prepared queries before evicting items from the internal cache. Reaching a high threshold hints that the queries are not being reused, like when hard-coding parameter values inside the queries. Default: <code>500</code>.  @property {Object} [policies]  @property {LoadBalancingPolicy} [policies.loadBalancing] The load balancing policy instance to be used to determine the coordinator per query.  @property {RetryPolicy} [policies.retry] The retry policy.  @property {ReconnectionPolicy} [policies.reconnection] The reconnection policy to be used.  @property {AddressTranslator} [policies.addressResolution] The address resolution policy.  @property {SpeculativeExecutionPolicy} [policies.speculativeExecution] The <code>SpeculativeExecutionPolicy</code> instance to be used to determine if the client should send speculative queries when the selected host takes more time than expected. <p> Default: <code>[NoSpeculativeExecutionPolicy]{@link module:policies/speculativeExecution~NoSpeculativeExecutionPolicy}</code> </p>  @property {TimestampGenerator} [policies.timestampGeneration] The client-side [query timestamp generator]{@link module:policies/timestampGeneration~TimestampGenerator}. <p> Default: <code>[MonotonicTimestampGenerator]{@link module:policies/timestampGeneration~MonotonicTimestampGenerator} </code> </p> <p>Use <code>null</code> to disable client-side timestamp generation.</p>  @property {QueryOptions} [queryOptions] Default options for all queries.  @property {Object} [pooling] Pooling options.  @property {Number} [pooling.heartBeatInterval] The amount of idle time in milliseconds that has to pass before the driver issues a request on an active connection to avoid idle time disconnections. Default: 30000.  @property {Object} [pooling.coreConnectionsPerHost] Associative array containing amount of connections per host distance.  @property {Number} [pooling.maxRequestsPerConnection] The maximum number of requests per connection. The default value is: <ul> <li>For modern protocol versions (v3 and above): 2048</li> <li>For older protocol versions (v1 and v2): 128</li> </ul>  @property {Boolean} [pooling.warmup] Determines if all connections to hosts in the local datacenter must be opened on connect. Default: true.  @property {Object} [protocolOptions]  @property {Number} [protocolOptions.port] The port to use to connect to the Cassandra host. If not set through this method, the default port (9042) will be used instead.  @property {Number} [protocolOptions.maxSchemaAgreementWaitSeconds] The maximum time in seconds to wait for schema agreement between nodes before returning from a DDL query. Default: 10.  @property {Number} [protocolOptions.maxVersion] When set, it limits the maximum protocol version used to connect to the nodes. Useful for using the driver against a cluster that contains nodes with different major/minor versions of Cassandra.  @property {Boolean} [protocolOptions.noCompact] When set to true, enables the NO_COMPACT startup option. <p> When this option is supplied <code>SELECT</code>, <code>UPDATE</code>, <code>DELETE</code>, and <code>BATCH</code> statements on <code>COMPACT STORAGE</code> tables function in \"compatibility\" mode which allows seeing these tables as if they were \"regular\" CQL tables. </p> <p> This option only effects interactions with interactions with tables using <code>COMPACT STORAGE</code> and is only supported by C* 3.0.16+, 3.11.2+, 4.0+ and DSE 6.0+. </p>  @property {Object} [socketOptions]  @property {Number} [socketOptions.connectTimeout] Connection timeout in milliseconds. Default: 5000.  @property {Number} [socketOptions.defunctReadTimeoutThreshold] Determines the amount of requests that simultaneously have to timeout before closing the connection. Default: 64.  @property {Boolean} [socketOptions.keepAlive] Whether to enable TCP keep-alive on the socket. Default: true.  @property {Number} [socketOptions.keepAliveDelay] TCP keep-alive delay in milliseconds. Default: 0.  @property {Number} [socketOptions.readTimeout] Per-host read timeout in milliseconds. <p> Please note that this is not the maximum time a call to {@link Client#execute} may have to wait; this is the maximum time that call will wait for one particular Cassandra host, but other hosts will be tried if one of them timeout. In other words, a {@link Client#execute} call may theoretically wait up to <code>readTimeout * number_of_cassandra_hosts</code> (though the total number of hosts tried for a given query also depends on the LoadBalancingPolicy in use). <p>When setting this value, keep in mind the following:</p> <ul> <li>the timeout settings used on the Cassandra side (*_request_timeout_in_ms in cassandra.yaml) should be taken into account when picking a value for this read timeout. You should pick a value a couple of seconds greater than the Cassandra timeout settings. </li> <li> the read timeout is only approximate and only control the timeout to one Cassandra host, not the full query. </li> </ul> Setting a value of 0 disables read timeouts. Default: <code>12000</code>.  @property {Boolean} [socketOptions.tcpNoDelay] When set to true, it disables the Nagle algorithm. Default: true.  @property {Number} [socketOptions.coalescingThreshold] Buffer length in bytes use by the write queue before flushing the frames. Default: 8000.  @property {AuthProvider} [authProvider] Provider to be used to authenticate to an auth-enabled cluster.  @property {RequestTracker} [requestTracker] The instance of RequestTracker used to monitor or log requests executed with this instance.  @property {Object} [sslOptions] Client-to-node ssl options. When set the driver will use the secure layer. You can specify cert, ca, ... options named after the Node.js <code>tls.connect()</code> options. <p> It uses the same default values as Node.js <code>tls.connect()</code> except for <code>rejectUnauthorized</code> which is set to <code>false</code> by default (for historical reasons). This setting is likely to change in upcoming versions to enable validation by default. </p>  @property {Object} [encoding] Encoding options.  @property {Function} [encoding.map] Map constructor to use for Cassandra map<k,v> type encoding and decoding. If not set, it will default to Javascript Object with map keys as property names.  @property {Function} [encoding.set] Set constructor to use for Cassandra set<k> type encoding and decoding. If not set, it will default to Javascript Array.  @property {Boolean} [encoding.copyBuffer] Determines if the network buffer should be copied for buffer based data types (blob, uuid, timeuuid and inet). <p> Setting it to true will cause that the network buffer is copied for each row value of those types, causing additional allocations but freeing the network buffer to be reused. Setting it to true is a good choice for cases where the Row and ResultSet returned by the queries are long-lived objects. </p> <p> Setting it to false will cause less overhead and the reference of the network buffer to be maintained until the row / result set are de-referenced. Default: true. </p>  @property {Boolean} [encoding.useUndefinedAsUnset] Valid for Cassandra 2.2 and above. Determines that, if a parameter is set to <code>undefined</code> it should be encoded as <code>unset</code>. <p> By default, ECMAScript <code>undefined</code> is encoded as <code>null</code> in the driver. Cassandra 2.2 introduced the concept of unset. At driver level, you can set a parameter to unset using the field <code>types.unset</code>. Setting this flag to true allows you to use ECMAScript undefined as Cassandra <code>unset</code>. </p> <p> Default: true. </p>  @property {Boolean} [encoding.useBigIntAsLong] Use [BigInt ECMAScript type](https://tc39.github.io/proposal-bigint/) to represent CQL bigint and counter data types.  @property {Boolean} [encoding.useBigIntAsVarint] Use [BigInt ECMAScript type](https://tc39.github.io/proposal-bigint/) to represent CQL varint data type.  @property {Array.<ExecutionProfile>} [profiles] The array of [execution profiles]{@link ExecutionProfile}.  @property {Function} [promiseFactory] Function to be used to create a <code>Promise</code> from a callback-style function. <p> Promise libraries often provide different methods to create a promise. For example, you can use Bluebird's <code>Promise.fromCallback()</code> method. </p> <p> By default, the driver will use the [Promise constructor]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise}. </p>\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface ClientOptions "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "ClientOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#authProvider:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authProvider?: "
                },
                {
                  "kind": "Reference",
                  "text": "AuthProvider",
                  "canonicalReference": "cassandra-driver!AuthProvider:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authProvider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#cloud:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cloud?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        secureConnectBundle: string | "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!\"\\\"url\\\"\".__global.URL:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cloud",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#contactPoints:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contactPoints?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contactPoints",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#credentials:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "credentials?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        username: string;\n        password: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "credentials",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#encoding:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "encoding?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        map?: "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        set?: "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        copyBuffer?: boolean;\n        useUndefinedAsUnset?: boolean;\n        useBigIntAsLong?: boolean;\n        useBigIntAsVarint?: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "encoding",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#isMetadataSyncEnabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isMetadataSyncEnabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isMetadataSyncEnabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#keyspace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyspace?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keyspace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#localDataCenter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "localDataCenter?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "localDataCenter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#maxPrepared:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxPrepared?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxPrepared",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#metrics:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metrics?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientMetrics",
                  "canonicalReference": "cassandra-driver!ClientMetrics:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metrics",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#policies:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "policies?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        addressResolution?: "
                },
                {
                  "kind": "Reference",
                  "text": "AddressTranslator",
                  "canonicalReference": "cassandra-driver!~AddressTranslator:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        loadBalancing?: "
                },
                {
                  "kind": "Reference",
                  "text": "LoadBalancingPolicy",
                  "canonicalReference": "cassandra-driver!~LoadBalancingPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        reconnection?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReconnectionPolicy",
                  "canonicalReference": "cassandra-driver!~ReconnectionPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        retry?: "
                },
                {
                  "kind": "Reference",
                  "text": "RetryPolicy",
                  "canonicalReference": "cassandra-driver!~RetryPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        speculativeExecution?: "
                },
                {
                  "kind": "Reference",
                  "text": "SpeculativeExecutionPolicy",
                  "canonicalReference": "cassandra-driver!~SpeculativeExecutionPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        timestampGeneration?: "
                },
                {
                  "kind": "Reference",
                  "text": "TimestampGenerator",
                  "canonicalReference": "cassandra-driver!~TimestampGenerator:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "policies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 14
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#pooling:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pooling?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        coreConnectionsPerHost?: {\n            [key: number]: number;\n        };\n        heartBeatInterval?: number;\n        maxRequestsPerConnection?: number;\n        warmup?: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pooling",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#prepareOnAllHosts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prepareOnAllHosts?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prepareOnAllHosts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#profiles:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "profiles?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionProfile",
                  "canonicalReference": "cassandra-driver!ExecutionProfile:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "profiles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#promiseFactory:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "promiseFactory?: "
                },
                {
                  "kind": "Content",
                  "text": "(handler: (callback: (err: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ", result?: any) => void) => void) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "promiseFactory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#protocolOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protocolOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        maxSchemaAgreementWaitSeconds?: number;\n        maxVersion?: number;\n        noCompact?: boolean;\n        port?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "protocolOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#queryOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "queryOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "QueryOptions",
                  "canonicalReference": "cassandra-driver!QueryOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "queryOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#refreshSchemaDelay:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refreshSchemaDelay?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "refreshSchemaDelay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#rePrepareOnUp:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rePrepareOnUp?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "rePrepareOnUp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#requestTracker:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestTracker?: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestTracker",
                  "canonicalReference": "cassandra-driver!RequestTracker:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "requestTracker",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#socketOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "socketOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        coalescingThreshold?: number;\n        connectTimeout?: number;\n        defunctReadTimeoutThreshold?: number;\n        keepAlive?: boolean;\n        keepAliveDelay?: number;\n        readTimeout?: number;\n        tcpNoDelay?: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "socketOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ClientOptions#sslOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sslOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "ConnectionOptions",
                  "canonicalReference": "!\"\\\"tls\\\"\".ConnectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sslOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "cassandra-driver!ColumnInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface ColumnInfo "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "ColumnInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ColumnInfo#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ColumnInfo#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "DataTypeInfo",
                  "canonicalReference": "cassandra-driver!~DataTypeInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!concurrent:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$2: "
            },
            {
              "kind": "Content",
              "text": "{\n    executeConcurrent: typeof "
            },
            {
              "kind": "Reference",
              "text": "executeConcurrent",
              "canonicalReference": "cassandra-driver!executeConcurrent:function"
            },
            {
              "kind": "Content",
              "text": ";\n    ResultSetGroup: typeof "
            },
            {
              "kind": "Reference",
              "text": "ResultSetGroup",
              "canonicalReference": "cassandra-driver!ResultSetGroup:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "concurrent",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "cassandra-driver!consistencies:enum",
          "docComment": "/**\n * Consistency levels  @type {Object}  @property {Number} any Writing: A write must be written to at least one node. If all replica nodes for the given row key are down, the write can still succeed after a hinted handoff has been written. If all replica nodes are down at write time, an ANY write is not readable until the replica nodes for that row have recovered.  @property {Number} one Returns a response from the closest replica, as determined by the snitch.  @property {Number} two Returns the most recent data from two of the closest replicas.  @property {Number} three Returns the most recent data from three of the closest replicas.  @property {Number} quorum Reading: Returns the record with the most recent timestamp after a quorum of replicas has responded regardless of data center. Writing: A write must be written to the commit log and memory table on a quorum of replica nodes.  @property {Number} all Reading: Returns the record with the most recent timestamp after all replicas have responded. The read operation will fail if a replica does not respond. Writing: A write must be written to the commit log and memory table on all replica nodes in the cluster for that row.  @property {Number} localQuorum Reading: Returns the record with the most recent timestamp once a quorum of replicas in the current data center as the coordinator node has reported. Writing: A write must be written to the commit log and memory table on a quorum of replica nodes in the same data center as the coordinator node. Avoids latency of inter-data center communication.  @property {Number} eachQuorum Reading: Returns the record once a quorum of replicas in each data center of the cluster has responded. Writing: Strong consistency. A write must be written to the commit log and memtable on a quorum of replica nodes in all data centers.  @property {Number} serial Achieves linearizable consistency for lightweight transactions by preventing unconditional updates.  @property {Number} localSerial Same as serial but confined to the data center. A write must be written conditionally to the commit log and memtable on a quorum of replica nodes in the same data center.  @property {Number} localOne Similar to One but only within the DC the coordinator is in.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare enum consistencies "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "consistencies",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!consistencies.all:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "all = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "all"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!consistencies.any:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "any = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "any"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!consistencies.eachQuorum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eachQuorum = "
                },
                {
                  "kind": "Content",
                  "text": "7"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "eachQuorum"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!consistencies.localOne:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "localOne = "
                },
                {
                  "kind": "Content",
                  "text": "10"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "localOne"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!consistencies.localQuorum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "localQuorum = "
                },
                {
                  "kind": "Content",
                  "text": "6"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "localQuorum"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!consistencies.localSerial:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "localSerial = "
                },
                {
                  "kind": "Content",
                  "text": "9"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "localSerial"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!consistencies.one:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "one = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "one"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!consistencies.quorum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "quorum = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "quorum"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!consistencies.serial:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serial = "
                },
                {
                  "kind": "Content",
                  "text": "8"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "serial"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!consistencies.three:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "three = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "three"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!consistencies.two:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "two = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "two"
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!consistencyToString:var",
          "docComment": "/**\n * Mapping of consistency level codes to their string representation.  @type {Object}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "consistencyToString: "
            },
            {
              "kind": "Content",
              "text": "{}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "consistencyToString",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!datastax:var",
          "docComment": "/**\n * DataStax module. <p> Contains modules and classes to represent functionality that is specific to DataStax products. </p>  @module datastax\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default: "
            },
            {
              "kind": "Content",
              "text": "{\n    graph: {\n        Edge: typeof "
            },
            {
              "kind": "Reference",
              "text": "Edge",
              "canonicalReference": "cassandra-driver!~Edge:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Element: typeof "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "cassandra-driver!~Element:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Path: typeof "
            },
            {
              "kind": "Reference",
              "text": "Path",
              "canonicalReference": "cassandra-driver!~Path:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Property: typeof "
            },
            {
              "kind": "Reference",
              "text": "Property",
              "canonicalReference": "cassandra-driver!~Property:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Vertex: typeof "
            },
            {
              "kind": "Reference",
              "text": "Vertex",
              "canonicalReference": "cassandra-driver!~Vertex:class"
            },
            {
              "kind": "Content",
              "text": ";\n        VertexProperty: typeof "
            },
            {
              "kind": "Reference",
              "text": "VertexProperty",
              "canonicalReference": "cassandra-driver!~VertexProperty:class"
            },
            {
              "kind": "Content",
              "text": ";\n        asInt: typeof "
            },
            {
              "kind": "Reference",
              "text": "asInt",
              "canonicalReference": "cassandra-driver!~asInt:function"
            },
            {
              "kind": "Content",
              "text": ";\n        asDouble: typeof "
            },
            {
              "kind": "Reference",
              "text": "asDouble",
              "canonicalReference": "cassandra-driver!~asDouble:function"
            },
            {
              "kind": "Content",
              "text": ";\n        asFloat: typeof "
            },
            {
              "kind": "Reference",
              "text": "asFloat",
              "canonicalReference": "cassandra-driver!~asFloat:function"
            },
            {
              "kind": "Content",
              "text": ";\n        asTimestamp: typeof "
            },
            {
              "kind": "Reference",
              "text": "asTimestamp",
              "canonicalReference": "cassandra-driver!~asTimestamp:function"
            },
            {
              "kind": "Content",
              "text": ";\n        asUdt: typeof "
            },
            {
              "kind": "Reference",
              "text": "asUdt",
              "canonicalReference": "cassandra-driver!~asUdt:function"
            },
            {
              "kind": "Content",
              "text": ";\n        direction: {\n            both: {\n                typeName: any;\n                elementName: any;\n                toString(): any;\n            };\n            in: {\n                typeName: any;\n                elementName: any;\n                toString(): any;\n            };\n            out: {\n                typeName: any;\n                elementName: any;\n                toString(): any;\n            };\n            in_: {\n                typeName: any;\n                elementName: any;\n                toString(): any;\n            };\n        };\n        getCustomTypeSerializers: typeof "
            },
            {
              "kind": "Reference",
              "text": "getCustomSerializers",
              "canonicalReference": "cassandra-driver!~getCustomSerializers:function"
            },
            {
              "kind": "Content",
              "text": ";\n        GraphResultSet: typeof "
            },
            {
              "kind": "Reference",
              "text": "GraphResultSet",
              "canonicalReference": "cassandra-driver!~GraphResultSet:class"
            },
            {
              "kind": "Content",
              "text": ";\n        GraphTypeWrapper: typeof "
            },
            {
              "kind": "Reference",
              "text": "GraphTypeWrapper",
              "canonicalReference": "cassandra-driver!~GraphTypeWrapper:class"
            },
            {
              "kind": "Content",
              "text": ";\n        t: {\n            id: {\n                typeName: any;\n                elementName: any;\n                toString(): any;\n            };\n            key: {\n                typeName: any;\n                elementName: any;\n                toString(): any;\n            };\n            label: {\n                typeName: any;\n                elementName: any;\n                toString(): any;\n            };\n            value: {\n                typeName: any;\n                elementName: any;\n                toString(): any;\n            };\n        };\n        UdtGraphWrapper: typeof "
            },
            {
              "kind": "Reference",
              "text": "UdtGraphWrapper",
              "canonicalReference": "cassandra-driver!~UdtGraphWrapper:class"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    DateRange: typeof "
            },
            {
              "kind": "Reference",
              "text": "DateRange",
              "canonicalReference": "cassandra-driver!DateRange:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "datastax",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 34
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "cassandra-driver!dataTypes:enum",
          "docComment": "/**\n * CQL data types  @type {Object}  @property {Number} custom A custom type.  @property {Number} ascii ASCII character string.  @property {Number} bigint 64-bit signed long.  @property {Number} blob Arbitrary bytes (no validation).  @property {Number} boolean true or false.  @property {Number} counter Counter column (64-bit signed value).  @property {Number} decimal Variable-precision decimal.  @property {Number} double 64-bit IEEE-754 floating point.  @property {Number} float 32-bit IEEE-754 floating point.  @property {Number} int 32-bit signed integer.  @property {Number} text UTF8 encoded string.  @property {Number} timestamp A timestamp.  @property {Number} uuid Type 1 or type 4 UUID.  @property {Number} varchar UTF8 encoded string.  @property {Number} varint Arbitrary-precision integer.  @property {Number} timeuuid Type 1 UUID.  @property {Number} inet An IP address. It can be either 4 bytes long (IPv4) or 16 bytes long (IPv6).  @property {Number} date A date without a time-zone in the ISO-8601 calendar system.  @property {Number} time A value representing the time portion of the day.  @property {Number} smallint 16-bit two's complement integer.  @property {Number} tinyint 8-bit two's complement integer.  @property {Number} list A collection of elements.  @property {Number} map Key/value pairs.  @property {Number} set A collection that contains no duplicate elements.  @property {Number} udt User-defined type.  @property {Number} tuple A sequence of values.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare enum dataTypes "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "dataTypes",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.ascii:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ascii = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ascii"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.bigint:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bigint = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "bigint"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.blob:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blob = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "blob"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.boolean:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "boolean = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "boolean"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.counter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "counter = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "counter"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.custom:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "custom = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "custom"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.date:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "date = "
                },
                {
                  "kind": "Content",
                  "text": "17"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "date"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.decimal:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decimal = "
                },
                {
                  "kind": "Content",
                  "text": "6"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "decimal"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.double:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "double = "
                },
                {
                  "kind": "Content",
                  "text": "7"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "double"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.duration:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duration = "
                },
                {
                  "kind": "Content",
                  "text": "21"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "duration"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.float:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "float = "
                },
                {
                  "kind": "Content",
                  "text": "8"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "float"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.inet:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inet = "
                },
                {
                  "kind": "Content",
                  "text": "16"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "inet"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.int:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "int = "
                },
                {
                  "kind": "Content",
                  "text": "9"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "int"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.list:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "list = "
                },
                {
                  "kind": "Content",
                  "text": "32"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "list"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.map:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "map = "
                },
                {
                  "kind": "Content",
                  "text": "33"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "map"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.set:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set = "
                },
                {
                  "kind": "Content",
                  "text": "34"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "set"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.smallint:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "smallint = "
                },
                {
                  "kind": "Content",
                  "text": "19"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "smallint"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.text:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "text = "
                },
                {
                  "kind": "Content",
                  "text": "10"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "text"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.time:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "time = "
                },
                {
                  "kind": "Content",
                  "text": "18"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "time"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.timestamp:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timestamp = "
                },
                {
                  "kind": "Content",
                  "text": "11"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "timestamp"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.timeuuid:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeuuid = "
                },
                {
                  "kind": "Content",
                  "text": "15"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "timeuuid"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.tinyint:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tinyint = "
                },
                {
                  "kind": "Content",
                  "text": "20"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "tinyint"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.tuple:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tuple = "
                },
                {
                  "kind": "Content",
                  "text": "49"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "tuple"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.udt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "udt = "
                },
                {
                  "kind": "Content",
                  "text": "48"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "udt"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.uuid:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uuid = "
                },
                {
                  "kind": "Content",
                  "text": "12"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "uuid"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.varchar:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "varchar = "
                },
                {
                  "kind": "Content",
                  "text": "13"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "varchar"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!dataTypes.varint:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "varint = "
                },
                {
                  "kind": "Content",
                  "text": "14"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "varint"
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "cassandra-driver!dataTypes:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace dataTypes "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "dataTypes",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "cassandra-driver!dataTypes.getByName:function(1)",
              "docComment": "/**\n * Returns the typeInfo of a given type name\n *\n * @param name - \n *\n * @returns {DateTypeInfo}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function getByName(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DataTypeInfo",
                  "canonicalReference": "cassandra-driver!~DataTypeInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getByName"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!DateRange:class",
          "docComment": "/**\n * @classdesc Represents a range of dates, corresponding to the Apache Solr type <a href=\"https://cwiki.apache.org/confluence/display/solr/Working+with+Dates\"><code>DateRangeField</code></a>. <p> A date range can have one or two bounds, namely lower bound and upper bound, to represent an interval of time. Date range bounds are both inclusive. For example: </p> <ul> <li><code>2015 TO 2016-10</code> represents from the first day of 2015 to the last day of October 2016</li> <li><code>2015</code> represents during the course of the year 2015.</li> <li><code>2017 TO *</code> represents any date greater or equals to the first day of the year 2017.</li> </ul> <p> Note that this JavaScript representation of <code>DateRangeField</code> does not support Dates outside of the range supported by ECMAScript Date: –100,000,000 days to 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. Being <code>-271821-04-20T00:00:00.000Z</code> the minimum lower boundary and <code>275760-09-13T00:00:00.000Z</code> the maximum higher boundary. <p>  @memberOf module:datastax/search\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class DateRange "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DateRange",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!DateRange:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DateRange` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(lowerBound: "
                },
                {
                  "kind": "Reference",
                  "text": "DateRangeBound",
                  "canonicalReference": "cassandra-driver!~DateRangeBound:class"
                },
                {
                  "kind": "Content",
                  "text": ", upperBound?: "
                },
                {
                  "kind": "Reference",
                  "text": "DateRangeBound",
                  "canonicalReference": "cassandra-driver!~DateRangeBound:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "lowerBound",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "upperBound",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DateRange#equals:member(1)",
              "docComment": "/**\n * Returns true if the value of this DateRange instance and other are the same.\n *\n * @param other - \n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "DateRange",
                  "canonicalReference": "cassandra-driver!DateRange:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DateRange.fromBuffer:member(1)",
              "docComment": "/**\n * Deserializes the buffer into a <code>DateRange</code>\n *\n * @param buffer -  @return {DateRange}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromBuffer(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DateRange",
                  "canonicalReference": "cassandra-driver!DateRange:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DateRange.fromString:member(1)",
              "docComment": "/**\n * Returns the <code>DateRange</code> representation of a given string. <p>String representations of dates are always expressed in Coordinated Universal Time (UTC)</p>\n *\n * @param dateRangeString - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(dateRangeString: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DateRange",
                  "canonicalReference": "cassandra-driver!DateRange:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dateRangeString",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromString"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!DateRange#lowerBound:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lowerBound: "
                },
                {
                  "kind": "Reference",
                  "text": "DateRangeBound",
                  "canonicalReference": "cassandra-driver!~DateRangeBound:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lowerBound",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DateRange#toBuffer:member(1)",
              "docComment": "/**\n * @intenal\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toBuffer(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DateRange#toString:member(1)",
              "docComment": "/**\n * Returns the string representation of the instance.  @return {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!DateRange#upperBound:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upperBound: "
                },
                {
                  "kind": "Reference",
                  "text": "DateRangeBound",
                  "canonicalReference": "cassandra-driver!~DateRangeBound:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "upperBound",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "cassandra-driver!defaultAddressTranslator:function(1)",
          "docComment": "/**\n * Returns a new instance of the default address translator policy used by the driver.\n *\n * @returns {AddressTranslator}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultAddressTranslator: () => "
            },
            {
              "kind": "Reference",
              "text": "AddressTranslator",
              "canonicalReference": "cassandra-driver!~AddressTranslator:class"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "defaultAddressTranslator"
        },
        {
          "kind": "Function",
          "canonicalReference": "cassandra-driver!defaultLoadBalancingPolicy:function(1)",
          "docComment": "/**\n * Returns a new instance of the default load-balancing policy used by the driver.\n *\n * @param localDc - When provided, it sets the data center that is going to be used as local for the load-balancing policy instance. <p>When localDc is undefined, the load-balancing policy instance will use the <code>localDataCenter</code> provided in the {@link ClientOptions}.</p>\n *\n * @returns {LoadBalancingPolicy}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultLoadBalancingPolicy: (localDc?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "LoadBalancingPolicy",
              "canonicalReference": "cassandra-driver!~LoadBalancingPolicy:class"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "localDc",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "defaultLoadBalancingPolicy"
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!DefaultMetrics:class",
          "docComment": "/**\n * A default implementation of [ClientMetrics]{@link module:metrics~ClientMetrics} that exposes the driver events as Node.js events. <p> An instance of [DefaultMetrics]{@link module:metrics~DefaultMetrics} is configured by default in the client, you can access this instance using [Client#metrics]{@link Client#metrics} property. </p>  @implements {module:metrics~ClientMetrics}  @alias module:metrics~DefaultMetrics\n *\n * @example\n *\n * <caption>Listening to events emitted</caption> defaultMetrics.errors.on('increment', err => totalErrors++); defaultMetrics.errors.clientTimeout.on('increment', () => clientTimeoutErrors++); defaultMetrics.speculativeRetries.on('increment', () => specExecsCount++); defaultMetrics.responses.on('increment', latency => myHistogram.record(latency));\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class DefaultMetrics extends "
            },
            {
              "kind": "Reference",
              "text": "ClientMetrics",
              "canonicalReference": "cassandra-driver!ClientMetrics:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DefaultMetrics",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!DefaultMetrics:constructor(1)",
              "docComment": "/**\n * Creates a new instance of [DefaultMetrics]{@link module:metrics~DefaultMetrics}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!DefaultMetrics#errors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errors: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        authentication: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n        clientTimeout: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n        connection: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n        other: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n        readTimeout: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n        unavailable: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n        writeTimeout: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 17
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!DefaultMetrics#ignoredErrors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ignoredErrors: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ignoredErrors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onAuthenticationError:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onAuthenticationError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "AuthenticationError",
                  "canonicalReference": "cassandra-driver!AuthenticationError:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onAuthenticationError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onClientTimeoutError:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClientTimeoutError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "OperationTimedOutError",
                  "canonicalReference": "cassandra-driver!OperationTimedOutError:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onClientTimeoutError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onClientTimeoutRetry:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClientTimeoutRetry(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onClientTimeoutRetry"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onConnectionError:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onConnectionError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onConnectionError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onIgnoreError:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onIgnoreError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onIgnoreError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onOtherError:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onOtherError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onOtherError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onOtherErrorRetry:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onOtherErrorRetry(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onOtherErrorRetry"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onReadTimeoutError:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onReadTimeoutError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseError",
                  "canonicalReference": "cassandra-driver!ResponseError:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onReadTimeoutError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onReadTimeoutRetry:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onReadTimeoutRetry(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onReadTimeoutRetry"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onResponse:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onResponse(latency: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "latency",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onResponse"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onSpeculativeExecution:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSpeculativeExecution(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "onSpeculativeExecution"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onSuccessfulResponse:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSuccessfulResponse(latency: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "latency",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onSuccessfulResponse"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onUnavailableError:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onUnavailableError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onUnavailableError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onUnavailableRetry:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onUnavailableRetry(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onUnavailableRetry"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onWriteTimeoutError:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onWriteTimeoutError(e: "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseError",
                  "canonicalReference": "cassandra-driver!ResponseError:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onWriteTimeoutError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultMetrics#onWriteTimeoutRetry:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onWriteTimeoutRetry(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onWriteTimeoutRetry"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!DefaultMetrics#responses:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "responses: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        success: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "responses",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!DefaultMetrics#retries:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retries: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        clientTimeout: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n        other: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n        readTimeout: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n        unavailable: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n        writeTimeout: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "retries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!DefaultMetrics#speculativeExecutions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "speculativeExecutions: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        increment: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitter",
                  "canonicalReference": "cassandra-driver!~EventEmitter"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "speculativeExecutions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "cassandra-driver!defaultOptions:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultOptions: () => "
            },
            {
              "kind": "Reference",
              "text": "ClientOptions",
              "canonicalReference": "cassandra-driver!ClientOptions:interface"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "defaultOptions"
        },
        {
          "kind": "Function",
          "canonicalReference": "cassandra-driver!defaultReconnectionPolicy:function(1)",
          "docComment": "/**\n * Returns a new instance of the default reconnection policy used by the driver.\n *\n * @returns {ReconnectionPolicy}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultReconnectionPolicy: () => "
            },
            {
              "kind": "Reference",
              "text": "ReconnectionPolicy",
              "canonicalReference": "cassandra-driver!~ReconnectionPolicy:class"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "defaultReconnectionPolicy"
        },
        {
          "kind": "Function",
          "canonicalReference": "cassandra-driver!defaultRetryPolicy:function(1)",
          "docComment": "/**\n * Returns a new instance of the default retry policy used by the driver.\n *\n * @returns {RetryPolicy}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultRetryPolicy: () => "
            },
            {
              "kind": "Reference",
              "text": "RetryPolicy",
              "canonicalReference": "cassandra-driver!~RetryPolicy:class"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "defaultRetryPolicy"
        },
        {
          "kind": "Function",
          "canonicalReference": "cassandra-driver!defaultSpeculativeExecutionPolicy:function(1)",
          "docComment": "/**\n * Returns a new instance of the default speculative execution policy used by the driver.\n *\n * @returns {SpeculativeExecutionPolicy}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultSpeculativeExecutionPolicy: () => "
            },
            {
              "kind": "Reference",
              "text": "SpeculativeExecutionPolicy",
              "canonicalReference": "cassandra-driver!~SpeculativeExecutionPolicy:class"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "defaultSpeculativeExecutionPolicy"
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!DefaultTableMappings:class",
          "docComment": "/**\n * Default implementation of [TableMappings]{@link module:mapping~TableMappings} that doesn't perform any conversion.  @alias module:mapping~DefaultTableMappings  @implements {module:mapping~TableMappings}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class DefaultTableMappings extends "
            },
            {
              "kind": "Reference",
              "text": "TableMappings",
              "canonicalReference": "cassandra-driver!TableMappings:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DefaultTableMappings",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!DefaultTableMappings:constructor(1)",
              "docComment": "/**\n * Creates a new instance of {@link DefaultTableMappings}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultTableMappings#getColumnName:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getColumnName(propName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "propName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getColumnName"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultTableMappings#getPropertyName:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPropertyName(columnName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "columnName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPropertyName"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DefaultTableMappings#newObjectInstance:member(1)",
              "docComment": "/**\n * Creates a new object instance, using object initializer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newObjectInstance(): "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "newObjectInstance"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "cassandra-driver!defaultTimestampGenerator:function(1)",
          "docComment": "/**\n * Returns a new instance of the default timestamp generator used by the driver.\n *\n * @returns {TimestampGenerator}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultTimestampGenerator: () => "
            },
            {
              "kind": "Reference",
              "text": "TimestampGenerator",
              "canonicalReference": "cassandra-driver!~TimestampGenerator:class"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "defaultTimestampGenerator"
        },
        {
          "kind": "Enum",
          "canonicalReference": "cassandra-driver!distance:enum",
          "docComment": "/**\n * Represents the distance of Cassandra node as assigned by a LoadBalancingPolicy relatively to the driver instance.  @type {Object}  @property {Number} local A local node.  @property {Number} remote A remote node.  @property {Number} ignored A node that is meant to be ignored.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare enum distance "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "distance",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!distance.ignored:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ignored = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ignored"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!distance.local:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "local = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "local"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!distance.remote:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remote = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "remote"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!DriverError:class",
          "docComment": "/**\n * Base Error\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class DriverError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DriverError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!DriverError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DriverError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!DriverError#info:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "info: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "info",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!DriverError#innerError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "innerError: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "innerError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!DriverError#isSocketError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSocketError: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSocketError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!DriverError#requestNotWritten:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestNotWritten?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "requestNotWritten",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!DriverInternalError:class",
          "docComment": "/**\n * Represents a bug inside the driver or in a Cassandra host.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class DriverInternalError extends "
            },
            {
              "kind": "Reference",
              "text": "DriverError",
              "canonicalReference": "cassandra-driver!DriverError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DriverInternalError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!DriverInternalError:constructor(1)",
              "docComment": "/**\n * Represents a bug inside the driver or in a Cassandra host.\n *\n * @param message -  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!DseGssapiAuthProvider:class",
          "docComment": "/**\n * @classdesc AuthProvider that provides GSSAPI authenticator instances for clients to connect to DSE clusters secured with the DseAuthenticator.\n *\n * @example\n *\n * const client = new cassandra.Client({ contactPoints: ['h1', 'h2'], authProvider: new cassandra.auth.DseGssapiAuthProvider() });  @alias module:auth~DseGssapiAuthProvider\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class DseGssapiAuthProvider extends "
            },
            {
              "kind": "Reference",
              "text": "AuthProvider",
              "canonicalReference": "cassandra-driver!AuthProvider:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DseGssapiAuthProvider",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!DseGssapiAuthProvider:constructor(1)",
              "docComment": "/**\n * Creates a new instance of <code>DseGssapiAuthProvider</code>.  @classdesc AuthProvider that provides GSSAPI authenticator instances for clients to connect to DSE clusters secured with the DseAuthenticator.\n *\n * @param gssOptions - GSSAPI authenticator options\n *\n * @param  - {String} [gssOptions.authorizationId] The optional authorization ID. Providing an authorization ID allows the currently authenticated user to act as a different user (a.k.a. proxy authentication).\n *\n * @param  - {String} [gssOptions.service] The service to use. Defaults to 'dse'.\n *\n * @param  - {Function} [gssOptions.hostNameResolver] A method to be used to resolve the name of the Cassandra node based on the IP Address. Defaults to [lookupServiceResolver]{@link module:auth~DseGssapiAuthProvider.lookupServiceResolver} which resolves the FQDN of the provided IP to generate principals in the format of <code>dse/example.com@MYREALM.COM</code>. Alternatively, you can use [reverseDnsResolver]{@link module:auth~DseGssapiAuthProvider.reverseDnsResolver} to do a reverse DNS lookup or [useIpResolver]{@link module:auth~DseGssapiAuthProvider.useIpResolver} to simply use the IP address provided.\n *\n * @param  - {String} [gssOptions.user] DEPRECATED, it will be removed in future versions. For proxy authentication, use <code>authorizationId</code> instead.\n *\n * @example\n *\n * const client = new cassandra.Client({ contactPoints: ['h1', 'h2'], authProvider: new cassandra.auth.DseGssapiAuthProvider() });  @alias module:auth~DseGssapiAuthProvider  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(gssOptions: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        authorizationId?: string;\n        service?: string;\n        hostNameResolver?: "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        user?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "gssOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DseGssapiAuthProvider#newAuthenticator:member(1)",
              "docComment": "/**\n * Returns an Authenticator instance to be used by the driver when connecting to a host.\n *\n * @param endpoint - The IP address and port number in the format ip:port.\n *\n * @param name - Authenticator name.\n *\n * @returns {Authenticator}\n *\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newAuthenticator(endpoint: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Authenticator",
                  "canonicalReference": "cassandra-driver!Authenticator:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "endpoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "newAuthenticator"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DseGssapiAuthProvider.reverseDnsResolver:member(1)",
              "docComment": "/**\n * Performs a reverse DNS query that resolves an IPv4 or IPv6 address to a hostname.\n *\n * @param ip - IP address to resolve.\n *\n * @param callback - The callback function with <code>err</code> and <code>hostname</code> arguments.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static reverseDnsResolver(ip: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ip",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "reverseDnsResolver"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DseGssapiAuthProvider.useIpResolver:member(1)",
              "docComment": "/**\n * Effectively a no op operation, returns the IP address provided.\n *\n * @param ip - IP address to use.\n *\n * @param callback - The callback function with <code>err</code> and <code>hostname</code> arguments.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static useIpResolver(ip: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ip",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "useIpResolver"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!DsePlainTextAuthProvider:class",
          "docComment": "/**\n * @classdesc AuthProvider that provides plain text authenticator instances for clients to connect to DSE clusters secured with the DseAuthenticator.  @extends AuthProvider  @alias module:auth~DsePlainTextAuthProvider\n *\n * @example\n *\n * const client = new cassandra.Client({ contactPoints: ['h1', 'h2'], authProvider: new cassandra.auth.DsePlainTextAuthProvider('user', 'p@ssword1'); });\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class DsePlainTextAuthProvider extends "
            },
            {
              "kind": "Reference",
              "text": "AuthProvider",
              "canonicalReference": "cassandra-driver!AuthProvider:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DsePlainTextAuthProvider",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!DsePlainTextAuthProvider:constructor(1)",
              "docComment": "/**\n * Creates a new instance of <code>DsePlainTextAuthProvider</code>.  @classdesc AuthProvider that provides plain text authenticator instances for clients to connect to DSE clusters secured with the DseAuthenticator.\n *\n * @param username - The username; cannot be <code>null</code>.\n *\n * @param password - The password; cannot be <code>null</code>.\n *\n * @param authorizationId - The optional authorization ID. Providing an authorization ID allows the currently authenticated user to act as a different user (a.k.a. proxy authentication).  @extends AuthProvider  @alias module:auth~DsePlainTextAuthProvider\n *\n * @example\n *\n * const client = new cassandra.Client({ contactPoints: ['h1', 'h2'], authProvider: new cassandra.auth.DsePlainTextAuthProvider('user', 'p@ssword1'); });  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", authorizationId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "password",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "authorizationId",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!DsePlainTextAuthProvider#newAuthenticator:member(1)",
              "docComment": "/**\n * Returns an Authenticator instance to be used by the driver when connecting to a host.\n *\n * @param endpoint - The IP address and port number in the format ip:port.\n *\n * @param name - Authenticator name.\n *\n * @returns {Authenticator}\n *\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newAuthenticator(endpoint: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Authenticator",
                  "canonicalReference": "cassandra-driver!Authenticator:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "endpoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "newAuthenticator"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Duration:class",
          "docComment": "/**\n * Creates a new instance of {@link Duration}.  @classdesc Represents a duration. A duration stores separately months, days, and seconds due to the fact that the number of days in a month varies, and a day can have 23 or 25 hours if a daylight saving is involved.\n *\n * @param months - The number of months.\n *\n * @param days - The number of days.\n *\n * @param nanoseconds - The number of nanoseconds.  @constructor\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Duration "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Duration",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!Duration:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Duration` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(months: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", days: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", nanoseconds: "
                },
                {
                  "kind": "Content",
                  "text": "number | "
                },
                {
                  "kind": "Reference",
                  "text": "Long",
                  "canonicalReference": "long!Long:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "months",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "days",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "nanoseconds",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Duration#equals:member(1)",
              "docComment": "/**\n * Returns true if the value of the Duration instance and other are the same\n *\n * @param other - \n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Duration",
                  "canonicalReference": "cassandra-driver!Duration:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Duration.fromBuffer:member(1)",
              "docComment": "/**\n * Creates a new {@link Duration} instance from the binary representation of the value.\n *\n * @param buffer - \n *\n * @returns {Duration}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromBuffer(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Duration",
                  "canonicalReference": "cassandra-driver!Duration:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Duration.fromString:member(1)",
              "docComment": "/**\n * Creates a new {@link Duration} instance from the string representation of the value. <p> Accepted formats: </p> <ul> <li>multiple digits followed by a time unit like: 12h30m where the time unit can be: <ul> <li>{@code y}: years</li> <li>{@code m}: months</li> <li>{@code w}: weeks</li> <li>{@code d}: days</li> <li>{@code h}: hours</li> <li>{@code m}: minutes</li> <li>{@code s}: seconds</li> <li>{@code ms}: milliseconds</li> <li>{@code us} or {@code µs}: microseconds</li> <li>{@code ns}: nanoseconds</li> </ul> </li> <li>ISO 8601 format: <code>P[n]Y[n]M[n]DT[n]H[n]M[n]S or P[n]W</code></li> <li>ISO 8601 alternative format: <code>P[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss]</code></li> </ul>\n *\n * @param input - \n *\n * @returns {Duration}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(input: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Duration",
                  "canonicalReference": "cassandra-driver!Duration:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Duration#toBuffer:member(1)",
              "docComment": "/**\n * Serializes the duration and returns the representation of the value in bytes.\n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toBuffer(): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Duration#toString:member(1)",
              "docComment": "/**\n * Returns the string representation of the value.  @return {string}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Encoder:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Encoder "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Encoder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!Encoder:constructor(1)",
              "docComment": "/**\n * Serializes and deserializes to and from a CQL type and a Javascript Type.\n *\n * @param protocolVersion - \n *\n * @param options -  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(protocolVersion: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientOptions",
                  "canonicalReference": "cassandra-driver!ClientOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "protocolVersion",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Encoder#decode:member",
              "docComment": "/**\n * Decodes Cassandra bytes into Javascript values. <p> This is part of an <b>experimental</b> API, this can be changed future releases. </p>\n *\n * @param buffer - Raw buffer to be decoded.\n *\n * @param type - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decode: "
                },
                {
                  "kind": "Content",
                  "text": "(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", type: "
                },
                {
                  "kind": "Reference",
                  "text": "DataTypeInfo",
                  "canonicalReference": "cassandra-driver!~DataTypeInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ") => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "decode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Encoder#encode:member",
              "docComment": "/**\n * Encodes Javascript types into Buffer according to the Cassandra protocol. <p> This is part of an <b>experimental</b> API, this can be changed future releases. </p>\n *\n * @param value - The value to be converted.\n *\n * @param typeInfo - The type information. <p>It can be either a:</p> <ul> <li>A <code>String</code> representing the data type.</li> <li>A <code>Number</code> with one of the values of {@link module:types~dataTypes dataTypes}.</li> <li>An <code>Object</code> containing the <code>type.code</code> as one of the values of {@link module:types~dataTypes dataTypes} and <code>type.info</code>. </li> </ul>\n *\n * @returns {Buffer}\n *\n * @throws\n *\n * {TypeError} When there is an encoding error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "encode: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any, typeInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "DataTypeInfo",
                  "canonicalReference": "cassandra-driver!~DataTypeInfo:type"
                },
                {
                  "kind": "Content",
                  "text": " | number | string) => "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "encode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Encoder#protocolVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protocolVersion: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "protocolVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!errors:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$g: "
            },
            {
              "kind": "Content",
              "text": "{\n    ArgumentError: typeof "
            },
            {
              "kind": "Reference",
              "text": "ArgumentError",
              "canonicalReference": "cassandra-driver!ArgumentError:class"
            },
            {
              "kind": "Content",
              "text": ";\n    AuthenticationError: typeof "
            },
            {
              "kind": "Reference",
              "text": "AuthenticationError",
              "canonicalReference": "cassandra-driver!AuthenticationError:class"
            },
            {
              "kind": "Content",
              "text": ";\n    BusyConnectionError: typeof "
            },
            {
              "kind": "Reference",
              "text": "BusyConnectionError",
              "canonicalReference": "cassandra-driver!BusyConnectionError:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DriverError: typeof "
            },
            {
              "kind": "Reference",
              "text": "DriverError",
              "canonicalReference": "cassandra-driver!DriverError:class"
            },
            {
              "kind": "Content",
              "text": ";\n    OperationTimedOutError: typeof "
            },
            {
              "kind": "Reference",
              "text": "OperationTimedOutError",
              "canonicalReference": "cassandra-driver!OperationTimedOutError:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DriverInternalError: typeof "
            },
            {
              "kind": "Reference",
              "text": "DriverInternalError",
              "canonicalReference": "cassandra-driver!DriverInternalError:class"
            },
            {
              "kind": "Content",
              "text": ";\n    NoHostAvailableError: typeof "
            },
            {
              "kind": "Reference",
              "text": "NoHostAvailableError",
              "canonicalReference": "cassandra-driver!NoHostAvailableError:class"
            },
            {
              "kind": "Content",
              "text": ";\n    NotSupportedError: typeof "
            },
            {
              "kind": "Reference",
              "text": "NotSupportedError",
              "canonicalReference": "cassandra-driver!NotSupportedError:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ResponseError: typeof "
            },
            {
              "kind": "Reference",
              "text": "ResponseError",
              "canonicalReference": "cassandra-driver!ResponseError:class"
            },
            {
              "kind": "Content",
              "text": ";\n    VIntOutOfRangeException: typeof "
            },
            {
              "kind": "Reference",
              "text": "VIntOutOfRangeException",
              "canonicalReference": "cassandra-driver!VIntOutOfRangeException:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "errors",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 22
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "cassandra-driver!executeConcurrent:function(1)",
          "docComment": "/**\n * Executes multiple queries concurrently at the defined concurrency level.  @static\n *\n * @param client - The {@link Client} instance.\n *\n * @param query - The query to execute per each parameter item.\n *\n * @param parameters - An {@link Array} or a readable {@link Stream} composed of {@link Array} items representing each individual set of parameters. Per each item in the {@link Array} or {@link Stream}, an execution is going to be made.\n *\n * @param options - The execution options.\n *\n * @param  - {String} [options.executionProfile] The execution profile to be used.\n *\n * @param  - {Number} [options.concurrencyLevel=100] The concurrency level to determine the maximum amount of in-flight operations at any given time\n *\n * @param  - {Boolean} [options.raiseOnFirstError=true] Determines whether execution should stop after the first failed execution and the corresponding exception will be raised.\n *\n * @param  - {Boolean} [options.collectResults=false] Determines whether each individual [ResultSet]{@link module:types~ResultSet} instance should be collected in the grouped result.\n *\n * @param  - {Number} [options.maxErrors=100] The maximum amount of errors to be collected before ignoring the rest of the error results.\n *\n * @returns {Promise<ResultSetGroup>} A <code>Promise</code> of {@link ResultSetGroup} that is resolved when all the executions completed and it's rejected when <code>raiseOnFirstError</code> is <code>true</code> and there is one or more failures.\n *\n * @example\n *\n * <caption>Using a fixed query and an Array of Arrays as parameters</caption> const query = 'INSERT INTO table1 (id, value) VALUES (?, ?)'; const parameters = [[1, 'a'], [2, 'b'], [3, 'c'], ]; // ... const result = await executeConcurrent(client, query, parameters);\n *\n * @example\n *\n * <caption>Using a fixed query and a readable stream</caption> const stream = csvStream.pipe(transformLineToArrayStream); const result = await executeConcurrent(client, query, stream);\n *\n * @example\n *\n * <caption>Using a different queries</caption> const queryAndParameters = [ { query: 'INSERT INTO videos (id, name, user_id) VALUES (?, ?, ?)', params: [ id, name, userId ] }, { query: 'INSERT INTO user_videos (user_id, id, name) VALUES (?, ?, ?)', params: [ userId, id, name ] }, { query: 'INSERT INTO latest_videos (id, name, user_id) VALUES (?, ?, ?)', params: [ id, name, userId ] }, ];\n *\n * const result = await executeConcurrent(client, queryAndParameters);\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function executeConcurrent(client: "
            },
            {
              "kind": "Reference",
              "text": "Client",
              "canonicalReference": "cassandra-driver!Client:class"
            },
            {
              "kind": "Content",
              "text": ", query: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", parameters: "
            },
            {
              "kind": "Content",
              "text": "any[][] | "
            },
            {
              "kind": "Reference",
              "text": "Readable",
              "canonicalReference": "!\"\\\"stream\\\"\".internal.Readable:class"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "Options",
              "canonicalReference": "cassandra-driver!Options:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ResultSetGroup",
              "canonicalReference": "cassandra-driver!ResultSetGroup:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "client",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "query",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "parameters",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": true
            }
          ],
          "name": "executeConcurrent"
        },
        {
          "kind": "Function",
          "canonicalReference": "cassandra-driver!executeConcurrent:function(2)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function executeConcurrent(client: "
            },
            {
              "kind": "Reference",
              "text": "Client",
              "canonicalReference": "cassandra-driver!Client:class"
            },
            {
              "kind": "Content",
              "text": ", queries: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    query: string;\n    params: any[];\n}>"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "Options",
              "canonicalReference": "cassandra-driver!Options:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ResultSetGroup",
              "canonicalReference": "cassandra-driver!ResultSetGroup:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "client",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "queries",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            }
          ],
          "name": "executeConcurrent"
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!ExecutionOptions:class",
          "docComment": "/**\n * A base class that represents a wrapper around the user provided query options with getter methods and proper default values. <p> Note that getter methods might return <code>undefined</code> when not set on the query options or default {@link Client} options. </p>\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ExecutionOptions "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ExecutionOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!ExecutionOptions:constructor(1)",
              "docComment": "/**\n * Creates a new instance of {@link ExecutionOptions}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getCaptureStackTrace:member(1)",
              "docComment": "/**\n * Determines if the stack trace before the query execution should be maintained.  @abstract\n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCaptureStackTrace(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCaptureStackTrace"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getConsistency:member(1)",
              "docComment": "/**\n * Gets the [Consistency level]{@link module:types~consistencies} to be used for the execution.  @abstract\n *\n * @returns {Number}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getConsistency(): "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getConsistency"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getCustomPayload:member(1)",
              "docComment": "/**\n * Key-value payload to be passed to the server. On the server side, implementations of QueryHandler can use this data.  @abstract\n *\n * @returns {{ [key: string]: any }}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCustomPayload(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCustomPayload"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getFetchSize:member(1)",
              "docComment": "/**\n * Gets the amount of rows to retrieve per page.  @abstract\n *\n * @returns {Number}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFetchSize(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getFetchSize"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getFixedHost:member(1)",
              "docComment": "/**\n * When a fixed host is set on the query options and the query plan for the load-balancing policy is not used, it gets the host that should handle the query.\n *\n * @returns {Host}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFixedHost(): "
                },
                {
                  "kind": "Reference",
                  "text": "Host",
                  "canonicalReference": "cassandra-driver!~Host:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getFixedHost"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getHints:member(1)",
              "docComment": "/**\n * Gets the type hints for parameters given in the query, ordered as for the parameters.  @abstract\n *\n * @returns {string[] | string[][]}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getHints(): "
                },
                {
                  "kind": "Content",
                  "text": "string[] | string[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getHints"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getKeyspace:member(1)",
              "docComment": "/**\n * Gets the keyspace for the query when set at query options level. <p> Note that this method will return <code>undefined</code> when the keyspace is not set at query options level. It will only return the keyspace name when the user provided a different keyspace than the current {@link Client} keyspace. </p>  @abstract\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getKeyspace(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeyspace"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getLoadBalancingPolicy:member(1)",
              "docComment": "/**\n * Gets the load balancing policy used for this execution.\n *\n * @returns {LoadBalancingPolicy} A <code>LoadBalancingPolicy</code> instance, it can't be <code>undefined</code>.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLoadBalancingPolicy(): "
                },
                {
                  "kind": "Reference",
                  "text": "LoadBalancingPolicy",
                  "canonicalReference": "cassandra-driver!~LoadBalancingPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getLoadBalancingPolicy"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getPageState:member(1)",
              "docComment": "/**\n * Gets the Buffer representing the paging state.  @abstract\n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPageState(): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPageState"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getRawQueryOptions:member(1)",
              "docComment": "/**\n * Gets the query options as provided to the execution method without setting the default values.\n *\n * @returns {QueryOptions}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRawQueryOptions(): "
                },
                {
                  "kind": "Reference",
                  "text": "QueryOptions",
                  "canonicalReference": "cassandra-driver!QueryOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRawQueryOptions"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getReadTimeout:member(1)",
              "docComment": "/**\n * Gets the timeout in milliseconds to be used for the execution per coordinator. <p> A value of <code>0</code> disables client side read timeout for the execution. Default: <code>undefined</code>. </p>  @abstract\n *\n * @returns {Number}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getReadTimeout(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getReadTimeout"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getRetryPolicy:member(1)",
              "docComment": "/**\n * Gets the [retry policy]{@link module:policies/retry} to be used.  @abstract\n *\n * @returns {RetryPolicy} A <code>RetryPolicy</code> instance, it can't be <code>undefined</code>.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRetryPolicy(): "
                },
                {
                  "kind": "Reference",
                  "text": "RetryPolicy",
                  "canonicalReference": "cassandra-driver!~RetryPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRetryPolicy"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getRoutingKey:member(1)",
              "docComment": "/**\n * Gets the partition key(s) to determine which coordinator should be used for the query.  @abstract\n *\n * @returns {Buffer|Array<Buffer>}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRoutingKey(): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRoutingKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getSerialConsistency:member(1)",
              "docComment": "/**\n * Gets the the consistency level to be used for the serial phase of conditional updates.  @abstract\n *\n * @returns {consistencies}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSerialConsistency(): "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSerialConsistency"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#getTimestamp:member(1)",
              "docComment": "/**\n * Gets the provided timestamp for the execution in microseconds from the unix epoch (00:00:00, January 1st, 1970). <p>When a timestamp generator is used, this method returns <code>undefined</code>.</p>  @abstract\n *\n * @returns {Number|Long|undefined|null}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTimestamp(): "
                },
                {
                  "kind": "Content",
                  "text": "number | "
                },
                {
                  "kind": "Reference",
                  "text": "Long",
                  "canonicalReference": "long!Long:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getTimestamp"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#isAutoPage:member(1)",
              "docComment": "/**\n * Determines whether the driver must retrieve the following result pages automatically. <p> This setting is only considered by the [Client#eachRow()]{@link Client#eachRow} method. </p>  @abstract\n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAutoPage(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isAutoPage"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#isBatchCounter:member(1)",
              "docComment": "/**\n * Determines whether its a counter batch. Only valid for [Client#batch()]{@link Client#batch}, it will be ignored by other methods.  @abstract\n *\n * @returns {Boolean} A <code>Boolean</code> value, it can't be <code>undefined</code>.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isBatchCounter(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isBatchCounter"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#isBatchLogged:member(1)",
              "docComment": "/**\n * Determines whether the batch should be written to the batchlog. Only valid for [Client#batch()]{@link Client#batch}, it will be ignored by other methods.  @abstract\n *\n * @returns {Boolean} A <code>Boolean</code> value, it can't be <code>undefined</code>.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isBatchLogged(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isBatchLogged"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#isIdempotent:member(1)",
              "docComment": "/**\n * Determines whether the query can be applied multiple times without changing the result beyond the initial application.  @abstract\n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIdempotent(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isIdempotent"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#isPrepared:member(1)",
              "docComment": "/**\n * Determines whether the query must be prepared beforehand.  @abstract\n *\n * @returns {Boolean} A <code>Boolean</code> value, it can't be <code>undefined</code>.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isPrepared(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isPrepared"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ExecutionOptions#isQueryTracing:member(1)",
              "docComment": "/**\n * Determines whether query tracing is enabled for the execution.  @abstract\n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isQueryTracing(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isQueryTracing"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!ExecutionProfile:class",
          "docComment": "/**\n * @classdesc Represents a set configurations to be used in a statement execution to be used for a single {@link Client} instance. <p> An {@link ExecutionProfile} instance should not be shared across different {@link Client} instances. </p>\n *\n * @example\n *\n * const { Client, ExecutionProfile } = require('cassandra-driver'); const client = new Client({ contactPoints: ['host1', 'host2'], profiles: [ new ExecutionProfile('metrics-oltp', { consistency: consistency.localQuorum, retry: myRetryPolicy }) ] });\n *\n * client.execute(query, params, { executionProfile: 'metrics-oltp' }, callback);\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ExecutionProfile "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ExecutionProfile",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!ExecutionProfile:constructor(1)",
              "docComment": "/**\n * Creates a new instance of {@link ExecutionProfile}. Represents a set configurations to be used in a statement execution to be used for a single {@link Client} instance. <p> An {@link ExecutionProfile} instance should not be shared across different {@link Client} instances. </p>\n *\n * @param name - Name of the execution profile. <p> Use <code>'default'</code> to specify that the new instance should be the default {@link ExecutionProfile} if no profile is specified in the execution. </p>\n *\n * @param options - Profile options, when any of the options is not specified the {@link Client} will the use the ones defined in the default profile.\n *\n * @param  - {Number} [options.consistency] The consistency level to use for this profile.\n *\n * @param  - {LoadBalancingPolicy} [options.loadBalancing] The load-balancing policy to use for this profile.\n *\n * @param  - {Number} [options.readTimeout] The client per-host request timeout to use for this profile.\n *\n * @param  - {RetryPolicy} [options.retry] The retry policy to use for this profile.\n *\n * @param  - {Number} [options.serialConsistency] The serial consistency level to use for this profile.\n *\n * @param  - {Object} [options.graphOptions]\n *\n * @param  - {String} [options.graphOptions.language] The graph language to use for graph queries. <p> Note that this setting should normally be <code>undefined</code> or set by a utility method and it's not expected to be defined manually by the user. </p>\n *\n * @param  - {String} [options.graphOptions.results] The protocol to use for serializing and deserializing graph results. <p> Note that this setting should normally be <code>undefined</code> or set by a utility method and it's not expected to be defined manually by the user. </p>\n *\n * @param  - {String} [options.graphOptions.name] The graph name to use for graph queries.\n *\n * @param  - {Number} [options.graphOptions.readConsistency] The consistency level to use for graph read queries.\n *\n * @param  - {String} [options.graphOptions.source] The graph traversal source name to use for graph queries.\n *\n * @param  - {Number} [options.graphOptions.writeConsistency] The consistency level to use for graph write queries.\n *\n * @param  - {LoadBalancingPolicy} [options.loadBalancing] The load-balancing policy to use for this profile.\n *\n * @param  - {Number} [options.readTimeout] The client per-host request timeout to use for this profile.\n *\n * @param  - {RetryPolicy} [options.retry] The retry policy to use for this profile.\n *\n * @param  - {Number} [options.serialConsistency] The serial consistency level to use for this profile.\n *\n * @example\n *\n * const { Client, ExecutionProfile } = require('cassandra-driver'); const client = new Client({ contactPoints: ['host1', 'host2'], profiles: [ new ExecutionProfile('metrics-oltp', { consistency: consistency.localQuorum, retry: myRetryPolicy }) ] });\n *\n * client.execute(query, params, { executionProfile: 'metrics-oltp' }, callback);  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        consistency?: "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        loadBalancing?: "
                },
                {
                  "kind": "Reference",
                  "text": "LoadBalancingPolicy",
                  "canonicalReference": "cassandra-driver!~LoadBalancingPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        readTimeout?: number;\n        retry?: "
                },
                {
                  "kind": "Reference",
                  "text": "RetryPolicy",
                  "canonicalReference": "cassandra-driver!~RetryPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        serialConsistency?: "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        graphOptions?: {\n            name?: string;\n            language?: string;\n            source?: string;\n            readConsistency?: "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n            writeConsistency?: "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 16
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ExecutionProfile#consistency:member",
              "docComment": "/**\n * Consistency level.  @type {Number}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "consistency?: "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "consistency",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ExecutionProfile#graphOptions:member",
              "docComment": "/**\n * The graph options for this profile.  @type {Object}  @property {String} language The graph language.  @property {String} name The graph name.  @property {String} readConsistency The consistency to use for graph write queries.  @property {String} source The graph traversal source.  @property {String} writeConsistency The consistency to use for graph write queries.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "graphOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        name?: string;\n        language?: string;\n        source?: string;\n        readConsistency?: "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        writeConsistency?: "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        results?: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "graphOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ExecutionProfile#loadBalancing:member",
              "docComment": "/**\n * Load-balancing policy  @type {LoadBalancingPolicy}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadBalancing?: "
                },
                {
                  "kind": "Reference",
                  "text": "LoadBalancingPolicy",
                  "canonicalReference": "cassandra-driver!~LoadBalancingPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loadBalancing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ExecutionProfile#name:member",
              "docComment": "/**\n * Name of the execution profile.  @type {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ExecutionProfile#readTimeout:member",
              "docComment": "/**\n * Client read timeout.  @type {Number}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readTimeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readTimeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ExecutionProfile#retry:member",
              "docComment": "/**\n * Retry policy.  @type {RetryPolicy}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retry?: "
                },
                {
                  "kind": "Reference",
                  "text": "RetryPolicy",
                  "canonicalReference": "cassandra-driver!~RetryPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "retry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ExecutionProfile#serialConsistency:member",
              "docComment": "/**\n * Serial consistency level.  @type {Number}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialConsistency?: "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serialConsistency",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "cassandra-driver!FindDocInfo:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type FindDocInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n    fields?: string[];\n    orderBy?: {\n        [key: string]: string;\n    };\n    limit?: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "FindDocInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Geometry:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Geometry "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Geometry",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Geometry.types:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static types: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        readonly Point2D: 1;\n        readonly LineString: 2;\n        readonly Polygon: 3;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "types",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!geometry:var",
          "docComment": "/**\n * Geometry module. <p> Contains the classes to represent the set of additional CQL types for geospatial data that come with DSE 5.0. </p>  @module geometry\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$1: "
            },
            {
              "kind": "Content",
              "text": "{\n    Point: typeof "
            },
            {
              "kind": "Reference",
              "text": "Point",
              "canonicalReference": "cassandra-driver!Point:class"
            },
            {
              "kind": "Content",
              "text": ";\n    LineString: typeof "
            },
            {
              "kind": "Reference",
              "text": "LineString",
              "canonicalReference": "cassandra-driver!LineString:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Polygon: typeof "
            },
            {
              "kind": "Reference",
              "text": "Polygon",
              "canonicalReference": "cassandra-driver!Polygon:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Geometry: typeof "
            },
            {
              "kind": "Reference",
              "text": "Geometry",
              "canonicalReference": "cassandra-driver!Geometry:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "geometry",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!graph:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$5: "
            },
            {
              "kind": "Content",
              "text": "{\n    Edge: typeof "
            },
            {
              "kind": "Reference",
              "text": "Edge",
              "canonicalReference": "cassandra-driver!~Edge:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Element: typeof "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "cassandra-driver!~Element:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Path: typeof "
            },
            {
              "kind": "Reference",
              "text": "Path",
              "canonicalReference": "cassandra-driver!~Path:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Property: typeof "
            },
            {
              "kind": "Reference",
              "text": "Property",
              "canonicalReference": "cassandra-driver!~Property:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Vertex: typeof "
            },
            {
              "kind": "Reference",
              "text": "Vertex",
              "canonicalReference": "cassandra-driver!~Vertex:class"
            },
            {
              "kind": "Content",
              "text": ";\n    VertexProperty: typeof "
            },
            {
              "kind": "Reference",
              "text": "VertexProperty",
              "canonicalReference": "cassandra-driver!~VertexProperty:class"
            },
            {
              "kind": "Content",
              "text": ";\n    asInt: typeof "
            },
            {
              "kind": "Reference",
              "text": "asInt",
              "canonicalReference": "cassandra-driver!~asInt:function"
            },
            {
              "kind": "Content",
              "text": ";\n    asDouble: typeof "
            },
            {
              "kind": "Reference",
              "text": "asDouble",
              "canonicalReference": "cassandra-driver!~asDouble:function"
            },
            {
              "kind": "Content",
              "text": ";\n    asFloat: typeof "
            },
            {
              "kind": "Reference",
              "text": "asFloat",
              "canonicalReference": "cassandra-driver!~asFloat:function"
            },
            {
              "kind": "Content",
              "text": ";\n    asTimestamp: typeof "
            },
            {
              "kind": "Reference",
              "text": "asTimestamp",
              "canonicalReference": "cassandra-driver!~asTimestamp:function"
            },
            {
              "kind": "Content",
              "text": ";\n    asUdt: typeof "
            },
            {
              "kind": "Reference",
              "text": "asUdt",
              "canonicalReference": "cassandra-driver!~asUdt:function"
            },
            {
              "kind": "Content",
              "text": ";\n    direction: {\n        both: "
            },
            {
              "kind": "Reference",
              "text": "EnumValue",
              "canonicalReference": "cassandra-driver!~EnumValue:class"
            },
            {
              "kind": "Content",
              "text": ";\n        in: "
            },
            {
              "kind": "Reference",
              "text": "EnumValue",
              "canonicalReference": "cassandra-driver!~EnumValue:class"
            },
            {
              "kind": "Content",
              "text": ";\n        out: "
            },
            {
              "kind": "Reference",
              "text": "EnumValue",
              "canonicalReference": "cassandra-driver!~EnumValue:class"
            },
            {
              "kind": "Content",
              "text": ";\n        in_: "
            },
            {
              "kind": "Reference",
              "text": "EnumValue",
              "canonicalReference": "cassandra-driver!~EnumValue:class"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    getCustomTypeSerializers: typeof "
            },
            {
              "kind": "Reference",
              "text": "getCustomSerializers",
              "canonicalReference": "cassandra-driver!~getCustomSerializers:function"
            },
            {
              "kind": "Content",
              "text": ";\n    GraphResultSet: typeof "
            },
            {
              "kind": "Reference",
              "text": "GraphResultSet",
              "canonicalReference": "cassandra-driver!~GraphResultSet:class"
            },
            {
              "kind": "Content",
              "text": ";\n    GraphTypeWrapper: typeof "
            },
            {
              "kind": "Reference",
              "text": "GraphTypeWrapper",
              "canonicalReference": "cassandra-driver!~GraphTypeWrapper:class"
            },
            {
              "kind": "Content",
              "text": ";\n    t: {\n        id: "
            },
            {
              "kind": "Reference",
              "text": "EnumValue",
              "canonicalReference": "cassandra-driver!~EnumValue:class"
            },
            {
              "kind": "Content",
              "text": ";\n        key: "
            },
            {
              "kind": "Reference",
              "text": "EnumValue",
              "canonicalReference": "cassandra-driver!~EnumValue:class"
            },
            {
              "kind": "Content",
              "text": ";\n        label: "
            },
            {
              "kind": "Reference",
              "text": "EnumValue",
              "canonicalReference": "cassandra-driver!~EnumValue:class"
            },
            {
              "kind": "Content",
              "text": ";\n        value: "
            },
            {
              "kind": "Reference",
              "text": "EnumValue",
              "canonicalReference": "cassandra-driver!~EnumValue:class"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    UdtGraphWrapper: typeof "
            },
            {
              "kind": "Reference",
              "text": "UdtGraphWrapper",
              "canonicalReference": "cassandra-driver!~UdtGraphWrapper:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "graph",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 48
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!InetAddress:class",
          "docComment": "/**\n * @class  @classdesc Represents an v4 or v6 Internet Protocol (IP) address.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class InetAddress "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "InetAddress",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!InetAddress:constructor(1)",
              "docComment": "/**\n * Creates a new instance of InetAddress\n *\n * @param buffer -  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!InetAddress#equals:member(1)",
              "docComment": "/**\n * Compares 2 addresses and returns true if the underlying bytes are the same\n *\n * @param other - \n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "InetAddress",
                  "canonicalReference": "cassandra-driver!InetAddress:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!InetAddress.fromString:member(1)",
              "docComment": "/**\n * Parses the string representation and returns an Ip address\n *\n * @param value - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InetAddress",
                  "canonicalReference": "cassandra-driver!InetAddress:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!InetAddress#getBuffer:member(1)",
              "docComment": "/**\n * Returns the underlying buffer\n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBuffer(): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getBuffer"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!InetAddress#length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!InetAddress#toJSON:member(1)",
              "docComment": "/**\n * Returns the string representation. Method used by the native JSON.stringify() to serialize this instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!InetAddress#toString:member(1)",
              "docComment": "/**\n * Returns the string representation of the IP address. <p>For v4 IP addresses, a string in the form of d.d.d.d is returned.</p> <p> For v6 IP addresses, a string in the form of x:x:x:x:x:x:x:x is returned, where the 'x's are the hexadecimal values of the eight 16-bit pieces of the address, according to rfc5952. In cases where there is more than one field of only zeros, it can be shortened. For example, 2001:0db8:0:0:0:1:0:1 will be expressed as 2001:0db8::1:0:1. </p>\n *\n * @param encoding - If set to 'hex', the hex representation of the buffer is returned.\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(encoding?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "encoding",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!InetAddress#version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "cassandra-driver!InsertDocInfo:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type InsertDocInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n    fields?: string[];\n    ttl?: number;\n    ifNotExists?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "InsertDocInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Integer:class",
          "docComment": "/**\n * A two's-complement integer an array containing bits of the integer in 32-bit (signed) pieces, given in little-endian order (i.e., lowest-order bits in the first piece), and the sign of -1 or 0.\n *\n * See the from* functions below for other convenient ways of constructing Integers.\n *\n * The internal representation of an integer is an array of 32-bit signed pieces, along with a sign (0 or -1) that indicates the contents of all the other 32-bit pieces out to infinity. We use 32-bit pieces because these are the size of integers on which Javascript performs bit-operations. For operations like addition and multiplication, we split each number into 16-bit pieces, which can easily be multiplied within Javascript's floating-point representation without overflow or change in sign.  @final\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Integer "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Integer",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!Integer:constructor(1)",
              "docComment": "/**\n * Constructs a two's-complement integer an array containing bits of the integer in 32-bit (signed) pieces, given in little-endian order (i.e., lowest-order bits in the first piece), and the sign of -1 or 0.\n *\n * See the from* functions below for other convenient ways of constructing Integers.\n *\n * The internal representation of an integer is an array of 32-bit signed pieces, along with a sign (0 or -1) that indicates the contents of all the other 32-bit pieces out to infinity. We use 32-bit pieces because these are the size of integers on which Javascript performs bit-operations. For operations like addition and multiplication, we split each number into 16-bit pieces, which can easily be multiplied within Javascript's floating-point representation without overflow or change in sign.\n *\n * @constructor\n *\n * @param bits - Array containing the bits of the number.\n *\n * @param sign - The sign of the number: -1 for negative and 0 positive.  @final\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(bits: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ", sign: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "bits",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "sign",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#abs:member(1)",
              "docComment": "/**\n * Returns a Integer whose value is the absolute value of this\n *\n * @returns {Integer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abs(): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "abs"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#add:member(1)",
              "docComment": "/**\n * Returns the sum of this and the given Integer.\n *\n * @param other - The Integer to add to this.  @return {!Integer} The Integer result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#and:member(1)",
              "docComment": "/**\n * Returns the bitwise-AND of this Integer and the given one.\n *\n * @param other - The Integer to AND with this.  @return {!Integer} The bitwise-AND of this and the other.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "and(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "and"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#compare:member(1)",
              "docComment": "/**\n * Compares this Integer with the given one.\n *\n * @param other - Integer to compare against.  @return {number} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compare(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "compare"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#divide:member(1)",
              "docComment": "/**\n * Returns this Integer divided by the given one.\n *\n * @param other - Th Integer to divide this by.  @return {!Integer} This value divided by the given one.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "divide(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "divide"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#equals:member(1)",
              "docComment": "/**\n * @param other - Integer to compare against.  @return {boolean} Whether this Integer equals the other.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer.fromBits:member(1)",
              "docComment": "/**\n * Returns a Integer representing the value that comes by concatenating the given entries, each is assumed to be 32 signed bits, given in little-endian order (lowest order bits in the lowest index), and sign-extending the highest order 32-bit value.\n *\n * @param bits - The bits of the number, in 32-bit signed pieces, in little-endian order.  @return {!Integer} The corresponding Integer value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromBits(bits: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "bits",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromBits"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer.fromBuffer:member(1)",
              "docComment": "/**\n * Returns an Integer representation of a given big endian Buffer. The internal representation of bits contains bytes in groups of 4\n *\n * @param buf - \n *\n * @returns {Integer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromBuffer(buf: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "buf",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer.fromInt:member(1)",
              "docComment": "/**\n * Returns an Integer representing the given (32-bit) integer value.\n *\n * @param value - A 32-bit integer value.  @return {!Integer} The corresponding Integer value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromInt(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromInt"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer.fromNumber:member(1)",
              "docComment": "/**\n * Returns an Integer representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @param value - The value in question.  @return {!Integer} The corresponding Integer value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromNumber(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromNumber"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer.fromString:member(1)",
              "docComment": "/**\n * Returns an Integer representation of the given string, written using the given radix.\n *\n * @param str - The textual representation of the Integer.\n *\n * @param opt_radix - The radix in which the text is written.  @return {!Integer} The corresponding Integer value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(str: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", opt_radix?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "str",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "opt_radix",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#getBits:member(1)",
              "docComment": "/**\n * Returns the index-th 32-bit (signed) piece of the Integer according to little-endian order (i.e., index 0 contains the smallest bits).\n *\n * @param index - The index in question.  @return {number} The requested 32-bits as a signed number.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBits(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getBits"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#getBitsUnsigned:member(1)",
              "docComment": "/**\n * Returns the index-th 32-bit piece as an unsigned number.\n *\n * @param index - The index in question.  @return {number} The requested 32-bits as an unsigned number.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBitsUnsigned(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getBitsUnsigned"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#getSign:member(1)",
              "docComment": "/**\n * @return {number} The sign bit of this number, -1 or 0.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSign(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSign"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#greaterThan:member(1)",
              "docComment": "/**\n * @param other - Integer to compare against.  @return {boolean} Whether this Integer is greater than the other.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "greaterThan(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "greaterThan"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#greaterThanOrEqual:member(1)",
              "docComment": "/**\n * @param other - Integer to compare against.  @return {boolean} Whether this Integer is greater than or equal to the other.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "greaterThanOrEqual(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "greaterThanOrEqual"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#isNegative:member(1)",
              "docComment": "/**\n * @return {boolean} Whether this value is negative.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isNegative(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isNegative"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#isOdd:member(1)",
              "docComment": "/**\n * @return {boolean} Whether this value is odd.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isOdd(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isOdd"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#isZero:member(1)",
              "docComment": "/**\n * @return {boolean} Whether this value is zero.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isZero(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isZero"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#lessThan:member(1)",
              "docComment": "/**\n * @param other - Integer to compare against.  @return {boolean} Whether this Integer is less than the other.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lessThan(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "lessThan"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#lessThanOrEqual:member(1)",
              "docComment": "/**\n * @param other - Integer to compare against.  @return {boolean} Whether this Integer is less than or equal to the other.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lessThanOrEqual(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "lessThanOrEqual"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#modulo:member(1)",
              "docComment": "/**\n * Returns this Integer modulo the given one.\n *\n * @param other - The Integer by which to mod.  @return {!Integer} This value modulo the given one.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "modulo(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "modulo"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#multiply:member(1)",
              "docComment": "/**\n * Returns the product of this and the given Integer.\n *\n * @param other - The Integer to multiply against this.  @return {!Integer} The product of this and the other.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiply(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiply"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#negate:member(1)",
              "docComment": "/**\n * @return {!Integer} The negation of this value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "negate(): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "negate"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#not:member(1)",
              "docComment": "/**\n * @return {!Integer} The bitwise-NOT of this value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "not(): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "not"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#notEquals:member(1)",
              "docComment": "/**\n * @param other - Integer to compare against.  @return {boolean} Whether this Integer does not equal the other.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notEquals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "notEquals"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Integer.ONE:member",
              "docComment": "/**\n * @type {!Integer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ONE: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ONE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#or:member(1)",
              "docComment": "/**\n * Returns the bitwise-OR of this Integer and the given one.\n *\n * @param other - The Integer to OR with this.  @return {!Integer} The bitwise-OR of this and the other.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "or(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "or"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#shiftLeft:member(1)",
              "docComment": "/**\n * Returns this value with bits shifted to the left by the given amount.\n *\n * @param numBits - The number of bits by which to shift.  @return {!Integer} This shifted to the left by the given amount.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shiftLeft(numBits: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "numBits",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "shiftLeft"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#shiftRight:member(1)",
              "docComment": "/**\n * Returns this value with bits shifted to the right by the given amount.\n *\n * @param numBits - The number of bits by which to shift.  @return {!Integer} This shifted to the right by the given amount.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shiftRight(numBits: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "numBits",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "shiftRight"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#shorten:member(1)",
              "docComment": "/**\n * Returns an integer with only the first numBits bits of this value, sign extended from the final bit.\n *\n * @param numBits - The number of bits by which to shift.  @return {!Integer} The shorted integer value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shorten(numBits: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "numBits",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "shorten"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#subtract:member(1)",
              "docComment": "/**\n * Returns the difference of this and the given Integer.\n *\n * @param other - The Integer to subtract from this.  @return {!Integer} The Integer result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subtract(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "subtract"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer.toBuffer:member(1)",
              "docComment": "/**\n * Returns a big endian buffer representation of an Integer. Internally the bits are represented using 4 bytes groups (numbers), in the Buffer representation there might be the case where we need less than the 4 bytes. For example: 0x00000001 -> '01', 0xFFFFFFFF -> 'FF', 0xFFFFFF01 -> 'FF01'\n *\n * @param value - \n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static toBuffer(value: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#toInt:member(1)",
              "docComment": "/**\n * Returns the value, assuming it is a 32-bit integer.  @return {number} The corresponding int value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toInt(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toInt"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#toJSON:member(1)",
              "docComment": "/**\n * Returns the string representation. Method used by the native JSON.stringify() to serialize this instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#toNumber:member(1)",
              "docComment": "/**\n * @return {number} The closest floating-point representation to this value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toNumber(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toNumber"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#toString:member(1)",
              "docComment": "/**\n * @param opt_radix - The radix in which the text should be written.  @return {string} The textual representation of this value.\n *\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(opt_radix?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "opt_radix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Integer#xor:member(1)",
              "docComment": "/**\n * Returns the bitwise-XOR of this Integer and the given one.\n *\n * @param other - The Integer to XOR with this.  @return {!Integer} The bitwise-XOR of this and the other.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xor(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "xor"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Integer.ZERO:member",
              "docComment": "/**\n * @type {!Integer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ZERO: "
                },
                {
                  "kind": "Reference",
                  "text": "Integer",
                  "canonicalReference": "cassandra-driver!Integer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ZERO",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!LineString:class",
          "docComment": "/**\n * @classdesc A LineString is a one-dimensional object representing a sequence of points and the line segments connecting them.\n *\n * @example\n *\n * new LineString(new Point(10.99, 20.02), new Point(14, 26), new Point(34, 1.2));  @alias module:geometry~LineString  @extends {Geometry}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class LineString extends "
            },
            {
              "kind": "Reference",
              "text": "Geometry",
              "canonicalReference": "cassandra-driver!Geometry:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "LineString",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!LineString:constructor(1)",
              "docComment": "/**\n * Creates a new {@link LineString} instance.\n *\n * @param points - A sequence of {@link Point} items as arguments.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(...points: "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "cassandra-driver!Point:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "cassandra-driver!Point:class"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "points",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LineString#equals:member(1)",
              "docComment": "/**\n * Returns true if the values of the linestrings are the same, otherwise it returns false.\n *\n * @param other - \n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "LineString",
                  "canonicalReference": "cassandra-driver!LineString:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LineString.fromBuffer:member(1)",
              "docComment": "/**\n * Creates a {@link LineString} instance from a <a href=\"https://en.wikipedia.org/wiki/Well-known_text\">Well-known Text (WKT)</a> representation of a line.\n *\n * @param buffer - \n *\n * @returns {LineString}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromBuffer(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "LineString",
                  "canonicalReference": "cassandra-driver!LineString:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LineString.fromString:member(1)",
              "docComment": "/**\n * Creates a {@link LineString} instance from a <a href=\"https://en.wikipedia.org/wiki/Well-known_text\">Well-known Text (WKT)</a> representation of a line.\n *\n * @param textValue - \n *\n * @returns {LineString}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(textValue: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "LineString",
                  "canonicalReference": "cassandra-driver!LineString:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "textValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LineString#toBuffer:member(1)",
              "docComment": "/**\n * Returns a <a href=\"https://en.wikipedia.org/wiki/Well-known_text#Well-known_binary\">Well-known Binary</a> (WKB) representation of this instance.\n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toBuffer(): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LineString#toJSON:member(1)",
              "docComment": "/**\n * Returns a JSON representation of this geo-spatial type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LineString#toString:member(1)",
              "docComment": "/**\n * Returns Well-known Text (WKT) representation of the geometry object.\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!loadBalancing:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$e: "
            },
            {
              "kind": "Content",
              "text": "{\n    AllowListPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "AllowListPolicy",
              "canonicalReference": "cassandra-driver!~AllowListPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DCAwareRoundRobinPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "DCAwareRoundRobinPolicy",
              "canonicalReference": "cassandra-driver!~DCAwareRoundRobinPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DefaultLoadBalancingPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "DefaultLoadBalancingPolicy",
              "canonicalReference": "cassandra-driver!~DefaultLoadBalancingPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    LoadBalancingPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "LoadBalancingPolicy",
              "canonicalReference": "cassandra-driver!~LoadBalancingPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    RoundRobinPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "RoundRobinPolicy",
              "canonicalReference": "cassandra-driver!~RoundRobinPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    TokenAwarePolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "TokenAwarePolicy",
              "canonicalReference": "cassandra-driver!~TokenAwarePolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    WhiteListPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "WhiteListPolicy",
              "canonicalReference": "cassandra-driver!~WhiteListPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "loadBalancing",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!LocalDate:class",
          "docComment": "/**\n * @class  @classdesc A date without a time-zone in the ISO-8601 calendar system, such as 2010-08-05. <p> LocalDate is an immutable object that represents a date, often viewed as year-month-day. For example, the value \"1st October 2014\" can be stored in a LocalDate. </p> <p> This class does not store or represent a time or time-zone. Instead, it is a description of the date, as used for birthdays. It cannot represent an instant on the time-line without additional information such as an offset or time-zone. </p> <p> Note that this type can represent dates in the range [-5877641-06-23; 5881580-07-17] while the ES5 date type can only represent values in the range of [-271821-04-20; 275760-09-13]. In the event that year, month, day parameters do not fall within the ES5 date range an Error will be thrown. If you wish to represent a date outside of this range, pass a single parameter indicating the days since epoch. For example, -1 represents 1969-12-31. </p>\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class LocalDate "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "LocalDate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!LocalDate:constructor(1)",
              "docComment": "/**\n * Creates a new instance of LocalDate. A date without a time-zone in the ISO-8601 calendar system, such as 2010-08-05. <p> LocalDate is an immutable object that represents a date, often viewed as year-month-day. For example, the value \"1st October 2014\" can be stored in a LocalDate. </p> <p> This class does not store or represent a time or time-zone. Instead, it is a description of the date, as used for birthdays. It cannot represent an instant on the time-line without additional information such as an offset or time-zone. </p> <p> Note that this type can represent dates in the range [-5877641-06-23; 5881580-07-17] while the ES5 date type can only represent values in the range of [-271821-04-20; 275760-09-13]. In the event that year, month, day parameters do not fall within the ES5 date range an Error will be thrown. If you wish to represent a date outside of this range, pass a single parameter indicating the days since epoch. For example, -1 represents 1969-12-31. </p>\n *\n * @param year - The year or days since epoch. If days since epoch, month and day should not be provided.\n *\n * @param month - Between 1 and 12 inclusive.\n *\n * @param day - Between 1 and the number of days in the given month of the given year.\n *\n * @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(year: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", month?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", day?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "year",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "month",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "day",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalDate#compare:member(1)",
              "docComment": "/**\n * Compares this LocalDate with the given one.\n *\n * @param other - date to compare against.  @return {number} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compare(other: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalDate",
                  "canonicalReference": "cassandra-driver!LocalDate:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "compare"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!LocalDate#date:member",
              "docComment": "/**\n * The date representation if falls within a range of an ES5 data type, otherwise an invalid date.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "date: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "date",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!LocalDate#day:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "day: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "day",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalDate#equals:member(1)",
              "docComment": "/**\n * Returns true if the value of the LocalDate instance and other are the same\n *\n * @param other - \n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalDate",
                  "canonicalReference": "cassandra-driver!LocalDate:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalDate.fromBuffer:member(1)",
              "docComment": "/**\n * Creates a new instance of LocalDate using the bytes representation.\n *\n * @param buffer - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromBuffer(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalDate",
                  "canonicalReference": "cassandra-driver!LocalDate:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalDate.fromDate:member(1)",
              "docComment": "/**\n * Creates a new instance of LocalDate using the year, month and day from the provided local date time.\n *\n * @param date - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromDate(date: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalDate",
                  "canonicalReference": "cassandra-driver!LocalDate:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "date",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromDate"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalDate.fromString:member(1)",
              "docComment": "/**\n * Creates a new instance of LocalDate using the year, month and day provided in the form: yyyy-mm-dd or days since epoch (i.e. -1 for Dec 31, 1969).\n *\n * @param value - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalDate",
                  "canonicalReference": "cassandra-driver!LocalDate:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalDate#inspect:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inspect(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inspect"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!LocalDate#month:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "month: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "month",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalDate.now:member(1)",
              "docComment": "/**\n * Creates a new instance of LocalDate using the current year, month and day from the system clock in the default time-zone.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static now(): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalDate",
                  "canonicalReference": "cassandra-driver!LocalDate:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "now"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalDate#toBuffer:member(1)",
              "docComment": "/**\n * Gets the bytes representation of the instance.\n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toBuffer(): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalDate#toJSON:member(1)",
              "docComment": "/**\n * Gets the string representation of the instance in the form: yyyy-mm-dd, valid for JSON.\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalDate#toString:member(1)",
              "docComment": "/**\n * Gets the string representation of the instance in the form: yyyy-mm-dd if the value can be parsed as a Date, otherwise days since epoch.\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalDate.utcNow:member(1)",
              "docComment": "/**\n * Creates a new instance of LocalDate using the current date from the system clock at UTC.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static utcNow(): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalDate",
                  "canonicalReference": "cassandra-driver!LocalDate:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "utcNow"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!LocalDate#year:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "year: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "year",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!LocalTime:class",
          "docComment": "/**\n * @class  @classdesc A time without a time-zone in the ISO-8601 calendar system, such as 10:30:05. <p> LocalTime is an immutable date-time object that represents a time, often viewed as hour-minute-second. Time is represented to nanosecond precision. For example, the value \"13:45.30.123456789\" can be stored in a LocalTime. </p>\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class LocalTime "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "LocalTime",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!LocalTime:constructor(1)",
              "docComment": "/**\n * Creates a new instance of LocalTime. A time without a time-zone in the ISO-8601 calendar system, such as 10:30:05. <p> LocalTime is an immutable date-time object that represents a time, often viewed as hour-minute-second. Time is represented to nanosecond precision. For example, the value \"13:45.30.123456789\" can be stored in a LocalTime. </p>\n *\n * @param totalNanoseconds - Total nanoseconds since midnight.  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(totalNanoseconds: "
                },
                {
                  "kind": "Reference",
                  "text": "Long",
                  "canonicalReference": "long!Long:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "totalNanoseconds",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalTime#compare:member(1)",
              "docComment": "/**\n * Compares this LocalTime with the given one.\n *\n * @param other - time to compare against.  @return {number} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compare(other: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalTime",
                  "canonicalReference": "cassandra-driver!LocalTime:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "compare"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalTime#equals:member(1)",
              "docComment": "/**\n * Returns true if the value of the LocalTime instance and other are the same\n *\n * @param other - \n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalTime",
                  "canonicalReference": "cassandra-driver!LocalTime:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalTime.fromBuffer:member(1)",
              "docComment": "/**\n * Creates a new instance of LocalTime from the bytes representation.\n *\n * @param value - \n *\n * @returns {LocalTime}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromBuffer(value: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalTime",
                  "canonicalReference": "cassandra-driver!LocalTime:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalTime.fromDate:member(1)",
              "docComment": "/**\n * Uses the provided local time (in milliseconds) and the nanoseconds to create a new instance of LocalTime\n *\n * @param date - Local date portion to extract the time passed since midnight.\n *\n * @param nanoseconds - A Number from 0 to 999,999, representing the nanosecond time portion.\n *\n * @returns {LocalTime}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromDate(date: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ", nanoseconds?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalTime",
                  "canonicalReference": "cassandra-driver!LocalTime:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "date",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "nanoseconds",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromDate"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalTime.fromMilliseconds:member(1)",
              "docComment": "/**\n * Uses the provided local time (in milliseconds) and the nanoseconds to create a new instance of LocalTime\n *\n * @param milliseconds - A Number from 0 to 86,399,999.\n *\n * @param nanoseconds - A Number from 0 to 999,999, representing the time nanosecond portion.\n *\n * @returns {LocalTime}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromMilliseconds(milliseconds: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", nanoseconds?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalTime",
                  "canonicalReference": "cassandra-driver!LocalTime:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "milliseconds",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "nanoseconds",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromMilliseconds"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalTime.fromString:member(1)",
              "docComment": "/**\n * Parses a string representation and returns a new LocalTime.\n *\n * @param value - \n *\n * @returns {LocalTime}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalTime",
                  "canonicalReference": "cassandra-driver!LocalTime:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalTime#getTotalNanoseconds:member(1)",
              "docComment": "/**\n * Gets the total amount of nanoseconds since midnight for this instance.\n *\n * @returns {Long}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTotalNanoseconds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Long",
                  "canonicalReference": "long!Long:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getTotalNanoseconds"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!LocalTime#hour:member",
              "docComment": "/**\n * Gets the hour component of the time represented by the current instance, a number from 0 to 23.  @type Number\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hour: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hour",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalTime#inspect:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inspect(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inspect"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!LocalTime#minute:member",
              "docComment": "/**\n * Gets the minute component of the time represented by the current instance, a number from 0 to 59.  @type Number\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minute: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minute",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!LocalTime#nanosecond:member",
              "docComment": "/**\n * Gets the nanoseconds component of the time represented by the current instance, a number from 0 to 999999999.  @type Number\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nanosecond: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nanosecond",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalTime.now:member(1)",
              "docComment": "/**\n * Uses the current local time (in milliseconds) and the nanoseconds to create a new instance of LocalTime\n *\n * @param nanoseconds - A Number from 0 to 999,999, representing the time nanosecond portion.\n *\n * @returns {LocalTime}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static now(nanoseconds?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalTime",
                  "canonicalReference": "cassandra-driver!LocalTime:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nanoseconds",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "now"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!LocalTime#second:member",
              "docComment": "/**\n * Gets the second component of the time represented by the current instance, a number from 0 to 59.  @type Number\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "second: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "second",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalTime#toBuffer:member(1)",
              "docComment": "/**\n * Returns a big-endian bytes representation of the instance\n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toBuffer(): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalTime#toJSON:member(1)",
              "docComment": "/**\n * Gets the string representation of the instance in the form: hh:MM:ss.ns\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!LocalTime#toString:member(1)",
              "docComment": "/**\n * Returns the string representation of the instance in the form of hh:MM:ss.ns\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Mapper:class",
          "docComment": "/**\n * Represents an object mapper for Apache Cassandra and DataStax Enterprise.  @alias module:mapping~Mapper\n *\n * @example\n *\n * <caption>Creating a Mapper instance with some options for the model 'User'</caption> const mappingOptions = { models: { 'User': { tables: ['users'], mappings: new UnderscoreCqlToCamelCaseMappings(), columnNames: { 'userid': 'id' } } } }; const mapper = new Mapper(client, mappingOptions);\n *\n * @example\n *\n * <caption>Creating a Mapper instance with other possible options for a model</caption> const mappingOptions = { models: { 'Video': { tables: ['videos', 'user_videos', 'latest_videos', { name: 'my_videos_view', isView: true }], mappings: new UnderscoreCqlToCamelCaseMappings(), columnNames: { 'videoid': 'id' }, keyspace: 'ks1' } } }; const mapper = new Mapper(client, mappingOptions);\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Mapper "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Mapper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!Mapper:constructor(1)",
              "docComment": "/**\n * Creates a new instance of Mapper.\n *\n * @param client - The Client instance to use to execute the queries and fetch the metadata.\n *\n * @param options - The [MappingOptions]{@link module:mapping~MappingOptions} containing the information of the models and table mappings.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(client: "
                },
                {
                  "kind": "Reference",
                  "text": "Client",
                  "canonicalReference": "cassandra-driver!Client:class"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "MappingOptions",
                  "canonicalReference": "cassandra-driver!MappingOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "client",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Mapper#batch:member(1)",
              "docComment": "/**\n * Executes a batch of queries represented in the items.\n *\n * @param items - \n *\n * @param executionOptions - An object containing the options to be used for the requests execution or a string representing the name of the execution profile.\n *\n * @param  - {String} [executionOptions.executionProfile] The name of the execution profile.\n *\n * @param  - {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without changing the result beyond the initial application. <p> The mapper uses the generated queries to determine the default value. When an UPDATE is generated with a counter column or appending/prepending to a list column, the execution is marked as not idempotent. </p> <p> Additionally, the mapper uses the safest approach for queries with lightweight transactions (Compare and Set) by considering them as non-idempotent. Lightweight transactions at client level with transparent retries can break linearizability. If that is not an issue for your application, you can manually set this field to true. </p>\n *\n * @param  - {Boolean} [executionOptions.logged=true] Determines whether the batch should be written to the batchlog.\n *\n * @param  - {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the unix epoch (00:00:00, January 1st, 1970).\n *\n * @returns {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batch(items: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModelBatchItem",
                  "canonicalReference": "cassandra-driver!ModelBatchItem:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", executionOptions: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MappingExecutionOptions",
                  "canonicalReference": "cassandra-driver!MappingExecutionOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Result",
                  "canonicalReference": "cassandra-driver!Result:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "items",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "executionOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "batch"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Mapper#forModel:member(1)",
              "docComment": "/**\n * Gets a [ModelMapper]{@link module:mapping~ModelMapper} that is able to map documents of a certain model into CQL rows.\n *\n * @param name - The name to identify the model. Note that the name is case-sensitive.\n *\n * @returns {ModelMapper} A [ModelMapper]{@link module:mapping~ModelMapper} instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forModel<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ModelMapper",
                  "canonicalReference": "cassandra-driver!ModelMapper:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forModel"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!mapping:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$3: "
            },
            {
              "kind": "Content",
              "text": "{\n    Mapper: typeof "
            },
            {
              "kind": "Reference",
              "text": "Mapper",
              "canonicalReference": "cassandra-driver!Mapper:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ModelMapper: typeof "
            },
            {
              "kind": "Reference",
              "text": "ModelMapper",
              "canonicalReference": "cassandra-driver!ModelMapper:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ModelBatchMapper: typeof "
            },
            {
              "kind": "Reference",
              "text": "ModelBatchMapper",
              "canonicalReference": "cassandra-driver!ModelBatchMapper:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ModelBatchItem: typeof "
            },
            {
              "kind": "Reference",
              "text": "ModelBatchItem",
              "canonicalReference": "cassandra-driver!ModelBatchItem:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Result: typeof "
            },
            {
              "kind": "Reference",
              "text": "Result",
              "canonicalReference": "cassandra-driver!Result:class"
            },
            {
              "kind": "Content",
              "text": ";\n    TableMappings: typeof "
            },
            {
              "kind": "Reference",
              "text": "TableMappings",
              "canonicalReference": "cassandra-driver!TableMappings:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DefaultTableMappings: typeof "
            },
            {
              "kind": "Reference",
              "text": "DefaultTableMappings",
              "canonicalReference": "cassandra-driver!DefaultTableMappings:class"
            },
            {
              "kind": "Content",
              "text": ";\n    UnderscoreCqlToCamelCaseMappings: typeof "
            },
            {
              "kind": "Reference",
              "text": "UnderscoreCqlToCamelCaseMappings",
              "canonicalReference": "cassandra-driver!UnderscoreCqlToCamelCaseMappings:class"
            },
            {
              "kind": "Content",
              "text": ";\n    q: {\n        in_: (arr: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n        gt: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n        gte: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n        lt: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n        lte: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n        notEq: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n        and: (condition1: any, condition2: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n        incr: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryAssignment",
              "canonicalReference": "cassandra-driver!~QueryAssignment:class"
            },
            {
              "kind": "Content",
              "text": ";\n        decr: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryAssignment",
              "canonicalReference": "cassandra-driver!~QueryAssignment:class"
            },
            {
              "kind": "Content",
              "text": ";\n        append: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryAssignment",
              "canonicalReference": "cassandra-driver!~QueryAssignment:class"
            },
            {
              "kind": "Content",
              "text": ";\n        prepend: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryAssignment",
              "canonicalReference": "cassandra-driver!~QueryAssignment:class"
            },
            {
              "kind": "Content",
              "text": ";\n        remove: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryAssignment",
              "canonicalReference": "cassandra-driver!~QueryAssignment:class"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "mapping",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 42
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "cassandra-driver!MappingExecutionOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type MappingExecutionOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    executionProfile?: string;\n    isIdempotent?: boolean;\n    logged?: boolean;\n    timestamp?: number | "
            },
            {
              "kind": "Reference",
              "text": "Long",
              "canonicalReference": "long!Long:class"
            },
            {
              "kind": "Content",
              "text": ";\n    fetchSize?: number;\n    pageState?: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "MappingExecutionOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "cassandra-driver!MappingOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type MappingOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    models: {\n        [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "ModelOptions",
              "canonicalReference": "cassandra-driver!ModelOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "MappingOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!metadata:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "metadata: "
            },
            {
              "kind": "Content",
              "text": "{\n    Metadata: typeof "
            },
            {
              "kind": "Reference",
              "text": "Metadata",
              "canonicalReference": "cassandra-driver!~Metadata:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "metadata",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!metrics:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$6: "
            },
            {
              "kind": "Content",
              "text": "{\n    ClientMetrics: typeof "
            },
            {
              "kind": "Reference",
              "text": "ClientMetrics",
              "canonicalReference": "cassandra-driver!ClientMetrics:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DefaultMetrics: typeof "
            },
            {
              "kind": "Reference",
              "text": "DefaultMetrics",
              "canonicalReference": "cassandra-driver!DefaultMetrics:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "metrics",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!ModelBatchItem:class",
          "docComment": "/**\n * Represents a query or a set of queries used to perform a mutation in a batch.  @alias module:mapping~ModelBatchItem\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ModelBatchItem` class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ModelBatchItem "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ModelBatchItem",
          "preserveMemberOrder": false,
          "members": [],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!ModelBatchMapper:class",
          "docComment": "/**\n * Provides utility methods to group multiple mutations on a single batch.  @alias module:mapping~ModelBatchMapper\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ModelBatchMapper` class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ModelBatchMapper "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ModelBatchMapper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ModelBatchMapper#insert:member(1)",
              "docComment": "/**\n * Gets a [ModelBatchItem]{@link module:mapping~ModelBatchItem} containing the queries for the INSERT mutation to be used in a batch execution.\n *\n * @param doc - An object containing the properties to insert.\n *\n * @param docInfo - An object containing the additional document information.\n *\n * @param  - {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the INSERT cql statements generated. If specified, it must include the columns to insert and the primary keys.\n *\n * @param  - {Number} [docInfo.ttl] Specifies an optional Time To Live (in seconds) for the inserted values.\n *\n * @param  - {Boolean} [docInfo.ifNotExists] When set, it only inserts if the row does not exist prior to the insertion. <p>Please note that using IF NOT EXISTS will incur a non negligible performance cost so this should be used sparingly.</p>\n *\n * @returns {ModelBatchItem} A [ModelBatchItem]{@link module:mapping~ModelBatchItem} instance representing a query or a set of queries to be included in a batch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insert(doc: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", docInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "InsertDocInfo",
                  "canonicalReference": "cassandra-driver!InsertDocInfo:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ModelBatchItem",
                  "canonicalReference": "cassandra-driver!ModelBatchItem:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "docInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "insert"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ModelBatchMapper#remove:member(1)",
              "docComment": "/**\n * Gets a [ModelBatchItem]{@link module:mapping~ModelBatchItem} containing the queries for the DELETE mutation to be used in a batch execution.\n *\n * @param doc - A document containing the primary keys values of the document to delete.\n *\n * @param docInfo - An object containing the additional doc information.\n *\n * @param  - {Object} [docInfo.when] A document that act as the condition that has to be met for the DELETE to occur. Use this property only in the case you want to specify a conditional clause for lightweight transactions (CAS). When the CQL query is generated, this would be used to generate the `IF` clause. <p> Please note that using IF conditions will incur a non negligible performance cost on the server-side so this should be used sparingly. </p>\n *\n * @param  - {Boolean} [docInfo.ifExists] When set, it only issues the DELETE command if the row already exists on the server. <p> Please note that using IF conditions will incur a non negligible performance cost on the server-side so this should be used sparingly. </p>\n *\n * @param  - {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the DELETE cql statement generated. If specified, it must include the columns to delete and the primary keys.\n *\n * @param  - {Boolean} [docInfo.deleteOnlyColumns] Determines that, when more document properties are specified besides the primary keys, the generated DELETE statement should be used to delete some column values but leave the row. When this is enabled and more properties are specified, a DELETE statement will have the following form: \"DELETE col1, col2 FROM table1 WHERE pk1 = ? AND pk2 = ?\"\n *\n * @returns {ModelBatchItem} A [ModelBatchItem]{@link module:mapping~ModelBatchItem} instance representing a query or a set of queries to be included in a batch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remove(doc: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", docInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "RemoveDocInfo",
                  "canonicalReference": "cassandra-driver!RemoveDocInfo:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ModelBatchItem",
                  "canonicalReference": "cassandra-driver!ModelBatchItem:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "docInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "remove"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ModelBatchMapper#update:member(1)",
              "docComment": "/**\n * Gets a [ModelBatchItem]{@link module:mapping~ModelBatchItem} containing the queries for the UPDATE mutation to be used in a batch execution.\n *\n * @param doc - An object containing the properties to update.\n *\n * @param docInfo - An object containing the additional document information.\n *\n * @param  - {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the UPDATE cql statements generated. If specified, it must include the columns to update and the primary keys.\n *\n * @param  - {Number} [docInfo.ttl] Specifies an optional Time To Live (in seconds) for the inserted values.\n *\n * @param  - {Boolean} [docInfo.ifExists] When set, it only updates if the row already exists on the server. <p> Please note that using IF conditions will incur a non negligible performance cost on the server-side so this should be used sparingly. </p>\n *\n * @param  - {Object} [docInfo.when] A document that act as the condition that has to be met for the UPDATE to occur. Use this property only in the case you want to specify a conditional clause for lightweight transactions (CAS). <p> Please note that using IF conditions will incur a non negligible performance cost on the server-side so this should be used sparingly. </p>\n *\n * @returns {ModelBatchItem} A [ModelBatchItem]{@link module:mapping~ModelBatchItem} instance representing a query or a set of queries to be included in a batch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update(doc: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", docInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateDocInfo",
                  "canonicalReference": "cassandra-driver!UpdateDocInfo:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ModelBatchItem",
                  "canonicalReference": "cassandra-driver!ModelBatchItem:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "docInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "update"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "cassandra-driver!ModelColumnOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ModelColumnOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    toModel?: (columnValue: any) => any;\n    fromModel?: (modelValue: any) => any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "ModelColumnOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!ModelMapper:class",
          "docComment": "/**\n * Represents an object mapper for a specific model.  @alias module:mapping~ModelMapper\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ModelMapper` class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ModelMapper<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "isAbstract": false,
          "name": "ModelMapper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ModelMapper#batching:member",
              "docComment": "/**\n * Gets a [ModelBatchMapper]{@link module:mapping~ModelBatchMapper} instance containing utility methods to group multiple doc mutations in a single batch.  @type {ModelBatchMapper}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batching: "
                },
                {
                  "kind": "Reference",
                  "text": "ModelBatchMapper",
                  "canonicalReference": "cassandra-driver!ModelBatchMapper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "batching",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ModelMapper#find:member(1)",
              "docComment": "/**\n * Executes a SELECT query based on the filter and returns the result as an iterable of documents.\n *\n * @param doc - An object containing the properties that map to the primary keys to filter.\n *\n * @param docInfo - An object containing the additional document information.\n *\n * @param  - {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the SELECT cql statement generated, in order to restrict the amount of columns retrieved.\n *\n * @param  - {Object<String, String>} [docInfo.orderBy] An associative array containing the column names as key and the order string (asc or desc) as value used to set the order of the results server-side.\n *\n * @param  - {Number} [docInfo.limit] Restricts the result of the query to a maximum number of rows on the server.\n *\n * @param executionOptions - An object containing the options to be used for the requests execution or a string representing the name of the execution profile.\n *\n * @param  - {String} [executionOptions.executionProfile] The name of the execution profile.\n *\n * @param  - {Number} [executionOptions.fetchSize] The amount of rows to retrieve per page.\n *\n * @param  - {Number} [executionOptions.pageState] A Buffer instance or a string token representing the paging state. <p>When provided, the query will be executed starting from a given paging state.</p>  @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n *\n * @example\n *\n * <caption>Get user's videos</caption> const result = await videoMapper.find({ userId }); for (let video of result) { console.log(video.name); }\n *\n * @example\n *\n * <caption>Get user's videos from a certain date</caption> videoMapper.find({ userId, addedDate: q.gte(date)});\n *\n * @example\n *\n * <caption>Get user's videos in reverse order</caption> videoMapper.find({ userId }, { orderBy: { addedDate: 'desc' }});\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "find(doc: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", docInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "FindDocInfo",
                  "canonicalReference": "cassandra-driver!FindDocInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ", executionOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MappingExecutionOptions",
                  "canonicalReference": "cassandra-driver!MappingExecutionOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Result",
                  "canonicalReference": "cassandra-driver!Result:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "docInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "executionOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "find"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ModelMapper#findAll:member(1)",
              "docComment": "/**\n * Executes a SELECT query without a filter and returns the result as an iterable of documents. <p> This is only recommended to be used for tables with a limited amount of results. Otherwise, breaking up the token ranges on the client side should be used. </p>\n *\n * @param docInfo - An object containing the additional document information.\n *\n * @param  - {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the SELECT cql statement generated, in order to restrict the amount of columns retrieved.\n *\n * @param  - {Object<String, String>} [docInfo.orderBy] An associative array containing the column names as key and the order string (asc or desc) as value used to set the order of the results server-side.\n *\n * @param  - {Number} [docInfo.limit] Restricts the result of the query to a maximum number of rows on the server.\n *\n * @param executionOptions - An object containing the options to be used for the requests execution or a string representing the name of the execution profile.\n *\n * @param  - {String} [executionOptions.executionProfile] The name of the execution profile.\n *\n * @param  - {Number} [executionOptions.fetchSize] The mount of rows to retrieve per page.\n *\n * @param  - {Number} [executionOptions.pageState] A Buffer instance or a string token representing the paging state. <p>When provided, the query will be executed starting from a given paging state.</p>  @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findAll(docInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "FindDocInfo",
                  "canonicalReference": "cassandra-driver!FindDocInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ", executionOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MappingExecutionOptions",
                  "canonicalReference": "cassandra-driver!MappingExecutionOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Result",
                  "canonicalReference": "cassandra-driver!Result:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "docInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "executionOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findAll"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ModelMapper#get:member(1)",
              "docComment": "/**\n * Gets the first document matching the provided filter or null when not found. <p> Note that all partition and clustering keys must be defined in order to use this method. </p>\n *\n * @param doc - The object containing the properties that map to the primary keys.\n *\n * @param docInfo - An object containing the additional document information.\n *\n * @param  - {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the SELECT cql statement generated, in order to restrict the amount of columns retrieved.\n *\n * @param executionOptions - An object containing the options to be used for the requests execution or a string representing the name of the execution profile.\n *\n * @param  - {String} [executionOptions.executionProfile] The name of the execution profile.  @return {Promise<Object>}\n *\n * @example\n *\n * <caption>Get a video by id</caption> videoMapper.get({ id })\n *\n * @example\n *\n * <caption>Get a video by id, selecting specific columns</caption> videoMapper.get({ id }, fields: ['name', 'description'])\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(doc: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", docInfo?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        fields?: string[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", executionOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MappingExecutionOptions",
                  "canonicalReference": "cassandra-driver!MappingExecutionOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<null | T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "docInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "executionOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ModelMapper#insert:member(1)",
              "docComment": "/**\n * Inserts a document. <p> When the model is mapped to multiple tables, it will insert a row in each table when all the primary keys are specified. </p>\n *\n * @param doc - An object containing the properties to insert.\n *\n * @param docInfo - An object containing the additional document information.\n *\n * @param  - {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the INSERT cql statements generated. If specified, it must include the columns to insert and the primary keys.\n *\n * @param  - {Number} [docInfo.ttl] Specifies an optional Time To Live (in seconds) for the inserted values.\n *\n * @param  - {Boolean} [docInfo.ifNotExists] When set, it only inserts if the row does not exist prior to the insertion. <p>Please note that using IF NOT EXISTS will incur a non negligible performance cost so this should be used sparingly.</p>\n *\n * @param executionOptions - An object containing the options to be used for the requests execution or a string representing the name of the execution profile.\n *\n * @param  - {String} [executionOptions.executionProfile] The name of the execution profile.\n *\n * @param  - {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without changing the result beyond the initial application. <p> By default all generated INSERT statements are considered idempotent, except in the case of lightweight transactions. Lightweight transactions at client level with transparent retries can break linearizability. If that is not an issue for your application, you can manually set this field to true. </p>\n *\n * @param  - {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the unix epoch (00:00:00, January 1st, 1970). <p>When provided, this will replace the client generated and the server side assigned timestamp.</p>  @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n *\n * @example\n *\n * <caption>Insert a video</caption> videoMapper.insert({ id, name });\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insert(doc: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", docInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "InsertDocInfo",
                  "canonicalReference": "cassandra-driver!InsertDocInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ", executionOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MappingExecutionOptions",
                  "canonicalReference": "cassandra-driver!MappingExecutionOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Result",
                  "canonicalReference": "cassandra-driver!Result:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "docInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "executionOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "insert"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ModelMapper#mapWithQuery:member(1)",
              "docComment": "/**\n * Uses the provided query and param getter function to execute a query and map the results. Gets a function that takes the document, executes the query and returns the mapped results.\n *\n * @param query - The query to execute.\n *\n * @param paramsHandler - The function to execute to extract the parameters of a document.\n *\n * @param executionOptions - When provided, the options for all executions generated with this method will use the provided options and it will not consider the executionOptions per call.\n *\n * @param  - {String} [executionOptions.executionProfile] The name of the execution profile.\n *\n * @param  - {Number} [executionOptions.fetchSize] Amount of rows to retrieve per page.\n *\n * @param  - {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without changing the result beyond the initial application.\n *\n * @param  - {Number} [executionOptions.pageState] Buffer or string token representing the paging state. <p>When provided, the query will be executed starting from a given paging state.</p>\n *\n * @param  - {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the unix epoch (00:00:00, January 1st, 1970). <p>When provided, this will replace the client generated and the server side assigned timestamp.</p>  @return {Function} Returns a function that takes the document and execution options as parameters and returns a Promise the resolves to a [Result]{@link module:mapping~Result} instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mapWithQuery(query: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", paramsHandler: "
                },
                {
                  "kind": "Content",
                  "text": "(doc: any) => any[]"
                },
                {
                  "kind": "Content",
                  "text": ", executionOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MappingExecutionOptions",
                  "canonicalReference": "cassandra-driver!MappingExecutionOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "(doc: any, executionOptions?: string | "
                },
                {
                  "kind": "Reference",
                  "text": "MappingExecutionOptions",
                  "canonicalReference": "cassandra-driver!MappingExecutionOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Result",
                  "canonicalReference": "cassandra-driver!Result:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "paramsHandler",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "executionOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mapWithQuery"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ModelMapper#name:member",
              "docComment": "/**\n * Gets the name identifier of the model.  @type {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ModelMapper#remove:member(1)",
              "docComment": "/**\n * Deletes a document.\n *\n * @param doc - A document containing the primary keys values of the document to delete.\n *\n * @param docInfo - An object containing the additional doc information.\n *\n * @param  - {Object} [docInfo.when] A document that act as the condition that has to be met for the DELETE to occur. Use this property only in the case you want to specify a conditional clause for lightweight transactions (CAS). When the CQL query is generated, this would be used to generate the `IF` clause. <p> Please note that using IF conditions will incur a non negligible performance cost on the server-side so this should be used sparingly. </p>\n *\n * @param  - {Boolean} [docInfo.ifExists] When set, it only issues the DELETE command if the row already exists on the server. <p> Please note that using IF conditions will incur a non negligible performance cost on the server-side so this should be used sparingly. </p>\n *\n * @param  - {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the DELETE cql statement generated. If specified, it must include the columns to delete and the primary keys.\n *\n * @param  - {Boolean} [docInfo.deleteOnlyColumns] Determines that, when more document properties are specified besides the primary keys, the generated DELETE statement should be used to delete some column values but leave the row. When this is enabled and more properties are specified, a DELETE statement will have the following form: \"DELETE col1, col2 FROM table1 WHERE pk1 = ? AND pk2 = ?\"\n *\n * @param executionOptions - An object containing the options to be used for the requests execution or a string representing the name of the execution profile.\n *\n * @param  - {String} [executionOptions.executionProfile] The name of the execution profile.\n *\n * @param  - {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without changing the result beyond the initial application. <p> By default all generated DELETE statements are considered idempotent, except in the case of lightweight transactions. Lightweight transactions at client level with transparent retries can break linearizability. If that is not an issue for your application, you can manually set this field to true. </p>\n *\n * @param  - {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the unix epoch (00:00:00, January 1st, 1970). <p>When provided, this will replace the client generated and the server side assigned timestamp.</p>  @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n *\n * @example\n *\n * <caption>Delete a video</caption> videoMapper.remove({ id });\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remove(doc: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", docInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "RemoveDocInfo",
                  "canonicalReference": "cassandra-driver!RemoveDocInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ", executionOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MappingExecutionOptions",
                  "canonicalReference": "cassandra-driver!MappingExecutionOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Result",
                  "canonicalReference": "cassandra-driver!Result:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "docInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "executionOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "remove"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ModelMapper#update:member(1)",
              "docComment": "/**\n * Updates a document. <p> When the model is mapped to multiple tables, it will update a row in each table when all the primary keys are specified. </p>\n *\n * @param doc - An object containing the properties to update.\n *\n * @param docInfo - An object containing the additional document information.\n *\n * @param  - {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the UPDATE cql statements generated. If specified, it must include the columns to update and the primary keys.\n *\n * @param  - {Number} [docInfo.ttl] Specifies an optional Time To Live (in seconds) for the inserted values.\n *\n * @param  - {Boolean} [docInfo.ifExists] When set, it only updates if the row already exists on the server. <p> Please note that using IF conditions will incur a non negligible performance cost on the server-side so this should be used sparingly. </p>\n *\n * @param  - {Object} [docInfo.when] A document that act as the condition that has to be met for the UPDATE to occur. Use this property only in the case you want to specify a conditional clause for lightweight transactions (CAS). <p> Please note that using IF conditions will incur a non negligible performance cost on the server-side so this should be used sparingly. </p>\n *\n * @param executionOptions - An object containing the options to be used for the requests execution or a string representing the name of the execution profile.\n *\n * @param  - {String} [executionOptions.executionProfile] The name of the execution profile.\n *\n * @param  - {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without changing the result beyond the initial application. <p> The mapper uses the generated queries to determine the default value. When an UPDATE is generated with a counter column or appending/prepending to a list column, the execution is marked as not idempotent. </p> <p> Additionally, the mapper uses the safest approach for queries with lightweight transactions (Compare and Set) by considering them as non-idempotent. Lightweight transactions at client level with transparent retries can break linearizability. If that is not an issue for your application, you can manually set this field to true. </p>\n *\n * @param  - {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the unix epoch (00:00:00, January 1st, 1970). <p>When provided, this will replace the client generated and the server side assigned timestamp.</p>  @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n *\n * @example\n *\n * <caption>Update the name of a video</caption> videoMapper.update({ id, name });\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update(doc: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", docInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateDocInfo",
                  "canonicalReference": "cassandra-driver!UpdateDocInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ", executionOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MappingExecutionOptions",
                  "canonicalReference": "cassandra-driver!MappingExecutionOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Result",
                  "canonicalReference": "cassandra-driver!Result:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "docInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "executionOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "update"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "cassandra-driver!ModelOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ModelOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    tables?: string[] | "
            },
            {
              "kind": "Reference",
              "text": "ModelTables",
              "canonicalReference": "cassandra-driver!ModelTables:interface"
            },
            {
              "kind": "Content",
              "text": "[];\n    mappings?: "
            },
            {
              "kind": "Reference",
              "text": "TableMappings",
              "canonicalReference": "cassandra-driver!TableMappings:class"
            },
            {
              "kind": "Content",
              "text": ";\n    columns?: {\n        [key: string]: string | "
            },
            {
              "kind": "Reference",
              "text": "ModelColumnOptions",
              "canonicalReference": "cassandra-driver!ModelColumnOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    keyspace?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "ModelOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "cassandra-driver!ModelTables:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface ModelTables "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "ModelTables",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ModelTables#isView:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isView: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isView",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!ModelTables#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!NoHostAvailableError:class",
          "docComment": "/**\n * Represents an error when a query cannot be performed because no host is available or could be reached by the driver.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class NoHostAvailableError extends "
            },
            {
              "kind": "Reference",
              "text": "DriverError",
              "canonicalReference": "cassandra-driver!DriverError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "NoHostAvailableError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!NoHostAvailableError:constructor(1)",
              "docComment": "/**\n * Represents an error when a query cannot be performed because no host is available or could be reached by the driver.\n *\n * @param innerErrors - An object map containing the error per host tried\n *\n * @param message -  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(innerErrors: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "innerErrors",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!NoHostAvailableError#innerErrors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "innerErrors: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "innerErrors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!NotSupportedError:class",
          "docComment": "/**\n * Represents an error that is raised when a feature is not supported in the driver or in the current Cassandra version.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class NotSupportedError extends "
            },
            {
              "kind": "Reference",
              "text": "DriverError",
              "canonicalReference": "cassandra-driver!DriverError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "NotSupportedError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!NotSupportedError:constructor(1)",
              "docComment": "/**\n * Represents an error that is raised when a feature is not supported in the driver or in the current Cassandra version.\n *\n * @param message -  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!OperationTimedOutError:class",
          "docComment": "/**\n * Represents a client-side error that is raised when the client didn't hear back from the server within {@link ClientOptions.socketOptions.readTimeout}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class OperationTimedOutError extends "
            },
            {
              "kind": "Reference",
              "text": "DriverError",
              "canonicalReference": "cassandra-driver!DriverError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "OperationTimedOutError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!OperationTimedOutError:constructor(1)",
              "docComment": "/**\n * Represents a client-side error that is raised when the client didn't hear back from the server within {@link ClientOptions.socketOptions.readTimeout}.\n *\n * @param message - The error message.\n *\n * @param host - Address of the server host that caused the operation to time out.  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", host?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "host",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!OperationTimedOutError#host:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "host?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "host",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "cassandra-driver!Options:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type Options = "
            },
            {
              "kind": "Content",
              "text": "{\n    collectResults?: boolean;\n    concurrencyLevel?: number;\n    executionProfile?: string;\n    maxErrors?: number;\n    raiseOnFirstError?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "Options",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!PlainTextAuthProvider:class",
          "docComment": "/**\n * @classdesc Provides plain text [Authenticator]{@link module:auth~Authenticator} instances to be used when connecting to a host.  @extends module:auth~AuthProvider\n *\n * @example\n *\n * var authProvider = new cassandra.auth.PlainTextAuthProvider('my_user', 'p@ssword1!'); //Set the auth provider in the clientOptions when creating the Client instance const client = new Client({ contactPoints: contactPoints, authProvider: authProvider });  @alias module:auth~PlainTextAuthProvider\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class PlainTextAuthProvider extends "
            },
            {
              "kind": "Reference",
              "text": "AuthProvider",
              "canonicalReference": "cassandra-driver!AuthProvider:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PlainTextAuthProvider",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!PlainTextAuthProvider:constructor(1)",
              "docComment": "/**\n * Creates a new instance of the Authenticator provider  @classdesc Provides plain text [Authenticator]{@link module:auth~Authenticator} instances to be used when connecting to a host.\n *\n * @param username - User name in plain text\n *\n * @param password - Password in plain text  @alias module:auth~PlainTextAuthProvider  @constructor\n *\n * @example\n *\n * var authProvider = new cassandra.auth.PlainTextAuthProvider('my_user', 'p@ssword1!'); //Set the auth provider in the clientOptions when creating the Client instance const client = new Client({ contactPoints: contactPoints, authProvider: authProvider });\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "password",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!PlainTextAuthProvider#newAuthenticator:member(1)",
              "docComment": "/**\n * Returns a new [Authenticator]{@link module:auth~Authenticator} instance to be used for plain text authentication.\n *\n * @returns {Authenticator}\n *\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newAuthenticator(): "
                },
                {
                  "kind": "Reference",
                  "text": "Authenticator",
                  "canonicalReference": "cassandra-driver!Authenticator:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "newAuthenticator"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Point:class",
          "docComment": "/**\n * @classdesc A Point is a zero-dimensional object that represents a specific (X,Y) location in a two-dimensional XY-Plane. In case of Geographic Coordinate Systems, the X coordinate is the longitude and the Y is the latitude.  @extends {Geometry}  @alias module:geometry~Point\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Point extends "
            },
            {
              "kind": "Reference",
              "text": "Geometry",
              "canonicalReference": "cassandra-driver!Geometry:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Point",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!Point:constructor(1)",
              "docComment": "/**\n * Creates a new {@link Point} instance.\n *\n * @param x - The X coordinate.\n *\n * @param y - The Y coordinate.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Point#equals:member(1)",
              "docComment": "/**\n * Returns true if the values of the point are the same, otherwise it returns false.\n *\n * @param other - \n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "cassandra-driver!Point:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Point.fromBuffer:member(1)",
              "docComment": "/**\n * Creates a {@link Point} instance from a <a href=\"https://en.wikipedia.org/wiki/Well-known_text\">Well-known Text (WKT)</a> representation of a 2D point.\n *\n * @param buffer - \n *\n * @returns {Point}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromBuffer(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "cassandra-driver!Point:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Point.fromString:member(1)",
              "docComment": "/**\n * Creates a {@link Point} instance from a <a href=\"https://en.wikipedia.org/wiki/Well-known_text\">Well-known Text (WKT)</a> representation of a 2D point.\n *\n * @param textValue - \n *\n * @returns {Point}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(textValue: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "cassandra-driver!Point:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "textValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Point#toBuffer:member(1)",
              "docComment": "/**\n * Returns a <a href=\"https://en.wikipedia.org/wiki/Well-known_text#Well-known_binary\">Well-known Binary</a> (WKB) representation of this instance.\n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toBuffer(): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Point#toJSON:member(1)",
              "docComment": "/**\n * Returns a JSON representation of this geo-spatial type.\n *\n * @returns {Object}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Point#toString:member(1)",
              "docComment": "/**\n * Returns Well-known Text (WKT) representation of the geometry object.\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!policies:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$4: "
            },
            {
              "kind": "Content",
              "text": "{\n    addressResolution: {\n        AddressTranslator: typeof "
            },
            {
              "kind": "Reference",
              "text": "AddressTranslator",
              "canonicalReference": "cassandra-driver!~AddressTranslator:class"
            },
            {
              "kind": "Content",
              "text": ";\n        EC2MultiRegionTranslator: typeof "
            },
            {
              "kind": "Reference",
              "text": "EC2MultiRegionTranslator",
              "canonicalReference": "cassandra-driver!~EC2MultiRegionTranslator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    loadBalancing: {\n        AllowListPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "AllowListPolicy",
              "canonicalReference": "cassandra-driver!~AllowListPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n        DCAwareRoundRobinPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "DCAwareRoundRobinPolicy",
              "canonicalReference": "cassandra-driver!~DCAwareRoundRobinPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n        DefaultLoadBalancingPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "DefaultLoadBalancingPolicy",
              "canonicalReference": "cassandra-driver!~DefaultLoadBalancingPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n        LoadBalancingPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "LoadBalancingPolicy",
              "canonicalReference": "cassandra-driver!~LoadBalancingPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n        RoundRobinPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "RoundRobinPolicy",
              "canonicalReference": "cassandra-driver!~RoundRobinPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n        TokenAwarePolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "TokenAwarePolicy",
              "canonicalReference": "cassandra-driver!~TokenAwarePolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n        WhiteListPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "WhiteListPolicy",
              "canonicalReference": "cassandra-driver!~WhiteListPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    reconnection: {\n        ReconnectionPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "ReconnectionPolicy",
              "canonicalReference": "cassandra-driver!~ReconnectionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ConstantReconnectionPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "ConstantReconnectionPolicy",
              "canonicalReference": "cassandra-driver!~ConstantReconnectionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ExponentialReconnectionPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "ExponentialReconnectionPolicy",
              "canonicalReference": "cassandra-driver!~ExponentialReconnectionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    retry: {\n        IdempotenceAwareRetryPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "IdempotenceAwareRetryPolicy",
              "canonicalReference": "cassandra-driver!~IdempotenceAwareRetryPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n        FallthroughRetryPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "FallthroughRetryPolicy",
              "canonicalReference": "cassandra-driver!~FallthroughRetryPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n        RetryPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "RetryPolicy",
              "canonicalReference": "cassandra-driver!~RetryPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    speculativeExecution: {\n        NoSpeculativeExecutionPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "NoSpeculativeExecutionPolicy",
              "canonicalReference": "cassandra-driver!~NoSpeculativeExecutionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n        SpeculativeExecutionPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "SpeculativeExecutionPolicy",
              "canonicalReference": "cassandra-driver!~SpeculativeExecutionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ConstantSpeculativeExecutionPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "ConstantSpeculativeExecutionPolicy",
              "canonicalReference": "cassandra-driver!~ConstantSpeculativeExecutionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    timestampGeneration: {\n        TimestampGenerator: typeof "
            },
            {
              "kind": "Reference",
              "text": "TimestampGenerator",
              "canonicalReference": "cassandra-driver!~TimestampGenerator:class"
            },
            {
              "kind": "Content",
              "text": ";\n        MonotonicTimestampGenerator: typeof "
            },
            {
              "kind": "Reference",
              "text": "MonotonicTimestampGenerator",
              "canonicalReference": "cassandra-driver!~MonotonicTimestampGenerator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    defaultAddressTranslator: () => "
            },
            {
              "kind": "Reference",
              "text": "AddressTranslator",
              "canonicalReference": "cassandra-driver!~AddressTranslator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    defaultLoadBalancingPolicy: (localDc?: string) => "
            },
            {
              "kind": "Reference",
              "text": "LoadBalancingPolicy",
              "canonicalReference": "cassandra-driver!~LoadBalancingPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    defaultRetryPolicy: () => "
            },
            {
              "kind": "Reference",
              "text": "RetryPolicy",
              "canonicalReference": "cassandra-driver!~RetryPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    defaultReconnectionPolicy: () => "
            },
            {
              "kind": "Reference",
              "text": "ReconnectionPolicy",
              "canonicalReference": "cassandra-driver!~ReconnectionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    defaultSpeculativeExecutionPolicy: () => "
            },
            {
              "kind": "Reference",
              "text": "SpeculativeExecutionPolicy",
              "canonicalReference": "cassandra-driver!~SpeculativeExecutionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    defaultTimestampGenerator: () => "
            },
            {
              "kind": "Reference",
              "text": "TimestampGenerator",
              "canonicalReference": "cassandra-driver!~TimestampGenerator:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "policies",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 54
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Polygon:class",
          "docComment": "/**\n * @classdesc Represents is a plane geometry figure that is bounded by a finite chain of straight line segments closing in a loop to form a closed chain or circuit.\n *\n * @example\n *\n * new Polygon([ new Point(30, 10), new Point(40, 40), new Point(10, 20), new Point(30, 10) ]);\n *\n * @example\n *\n * //polygon with a hole new Polygon( [ new Point(30, 10), new Point(40, 40), new Point(10, 20), new Point(30, 10) ], [ new Point(25, 20), new Point(30, 30), new Point(20, 20), new Point(25, 20) ] );  @alias module:geometry~Polygon\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Polygon extends "
            },
            {
              "kind": "Reference",
              "text": "Geometry",
              "canonicalReference": "cassandra-driver!Geometry:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Polygon",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!Polygon:constructor(1)",
              "docComment": "/**\n * Creates a new {@link Polygon} instance.\n *\n * @param ringPoints - A sequence of Array of [Point]{@link module:geometry~Point} items as arguments representing the rings of the polygon.\n *\n * @example\n *\n * new Polygon([ new Point(30, 10), new Point(40, 40), new Point(10, 20), new Point(30, 10) ]);\n *\n * @example\n *\n * //polygon with a hole new Polygon( [ new Point(30, 10), new Point(40, 40), new Point(10, 20), new Point(30, 10) ], [ new Point(25, 20), new Point(30, 30), new Point(20, 20), new Point(25, 20) ] );  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(...ringPoints: "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "cassandra-driver!Point:class"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ringPoints",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Polygon#equals:member(1)",
              "docComment": "/**\n * Returns true if the values of the polygons are the same, otherwise it returns false.\n *\n * @param other - \n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Polygon",
                  "canonicalReference": "cassandra-driver!Polygon:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Polygon.fromBuffer:member(1)",
              "docComment": "/**\n * Creates a {@link Polygon} instance from a <a href=\"https://en.wikipedia.org/wiki/Well-known_text\">Well-known Text (WKT)</a> representation of a polygon.\n *\n * @param buffer - \n *\n * @returns {Polygon}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromBuffer(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Polygon",
                  "canonicalReference": "cassandra-driver!Polygon:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Polygon.fromString:member(1)",
              "docComment": "/**\n * Creates a {@link Polygon} instance from a Well-known Text (WKT) representation.\n *\n * @param textValue - \n *\n * @returns {Polygon}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(textValue: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Polygon",
                  "canonicalReference": "cassandra-driver!Polygon:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "textValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Polygon#toBuffer:member(1)",
              "docComment": "/**\n * Returns a <a href=\"https://en.wikipedia.org/wiki/Well-known_text#Well-known_binary\">Well-known Binary</a> (WKB) representation of this instance.\n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toBuffer(): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Polygon#toJSON:member(1)",
              "docComment": "/**\n * Returns a JSON representation of this geo-spatial type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Polygon#toString:member(1)",
              "docComment": "/**\n * Returns Well-known Text (WKT) representation of the geometry object.\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "cassandra-driver!PreparedQueryInfo:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type PreparedQueryInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n    queryId?: "
            },
            {
              "kind": "Reference",
              "text": "Buffer",
              "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    preparing?: boolean;\n    query: string;\n    keyspace: string;\n    meta?: "
            },
            {
              "kind": "Reference",
              "text": "DataCollection",
              "canonicalReference": "cassandra-driver!~DataCollection:class"
            },
            {
              "kind": "Content",
              "text": ";\n} & "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter$1",
              "canonicalReference": "cassandra-driver!~EventEmitter$1"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "PreparedQueryInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "cassandra-driver!protocolVersion:enum",
          "docComment": "/**\n * Contains information for the different protocol versions supported by the driver.  @type {Object}  @property {Number} v1 Cassandra protocol v1, supported in Apache Cassandra 1.2-->2.2.  @property {Number} v2 Cassandra protocol v2, supported in Apache Cassandra 2.0-->2.2.  @property {Number} v3 Cassandra protocol v3, supported in Apache Cassandra 2.1-->3.x.  @property {Number} v4 Cassandra protocol v4, supported in Apache Cassandra 2.2-->3.x.  @property {Number} v5 Cassandra protocol v5, in beta from Apache Cassandra 3.x+. Currently not supported by the driver.  @property {Number} dseV1 DataStax Enterprise protocol v1, DSE 5.1+  @property {Number} dseV2 DataStax Enterprise protocol v2, DSE 6.0+  @property {Number} maxSupported Returns the higher protocol version that is supported by this driver.  @property {Number} minSupported Returns the lower protocol version that is supported by this driver.  @property {Function} isSupported A function that returns a boolean determining whether a given protocol version is supported.  @alias module:types~protocolVersion\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare enum protocolVersion "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "protocolVersion",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!protocolVersion.dseV1:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dseV1 = "
                },
                {
                  "kind": "Content",
                  "text": "65"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "dseV1"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!protocolVersion.dseV2:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dseV2 = "
                },
                {
                  "kind": "Content",
                  "text": "66"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "dseV2"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!protocolVersion.maxSupported:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxSupported = "
                },
                {
                  "kind": "Content",
                  "text": "66"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "maxSupported"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!protocolVersion.minSupported:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minSupported = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "minSupported"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!protocolVersion.v1:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1 = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "v1"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!protocolVersion.v2:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2 = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "v2"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!protocolVersion.v3:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v3 = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "v3"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!protocolVersion.v4:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v4 = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "v4"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!protocolVersion.v5:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v5 = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "v5"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!protocolVersion.v6:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v6 = "
                },
                {
                  "kind": "Content",
                  "text": "6"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "v6"
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "cassandra-driver!protocolVersion:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace protocolVersion "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "protocolVersion",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "cassandra-driver!protocolVersion.isSupported:function(1)",
              "docComment": "/**\n * Determines whether the protocol version is supported by this driver.\n *\n * @param version - \n *\n * @returns {Boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function isSupported(version: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "version",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "isSupported"
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!q:var",
          "docComment": "/**\n * Contains functions that represents operators in a query.  @alias module:mapping~q  @type {Object}  @property {function} in_ Represents the CQL operator \"IN\".  @property {function} gt Represents the CQL operator greater than \">\".  @property {function} gte Represents the CQL operator greater than or equals to \">=\" .  @property {function} lt Represents the CQL operator less than \"<\" .  @property {function} lte Represents the CQL operator less than or equals to \"<=\" .  @property {function} notEq Represents the CQL operator not equals to \"!=\" .  @property {function} and When applied to a property, it represents two CQL conditions on the same column separated by the logical AND operator, e.g: \"col1 >= x col < y\"  @property {function} incr Represents the CQL increment assignment used for counters, e.g: \"col = col + x\"  @property {function} decr Represents the CQL decrement assignment used for counters, e.g: \"col = col - x\"  @property {function} append Represents the CQL append assignment used for collections, e.g: \"col = col + x\"  @property {function} prepend Represents the CQL prepend assignment used for lists, e.g: \"col = x + col\"  @property {function} remove Represents the CQL remove assignment used for collections, e.g: \"col = col - x\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "q: "
            },
            {
              "kind": "Content",
              "text": "{\n    in_: (arr: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    gt: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    gte: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    lt: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    lte: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    notEq: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    and: (condition1: any, condition2: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryOperator",
              "canonicalReference": "cassandra-driver!~QueryOperator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    incr: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryAssignment",
              "canonicalReference": "cassandra-driver!~QueryAssignment:class"
            },
            {
              "kind": "Content",
              "text": ";\n    decr: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryAssignment",
              "canonicalReference": "cassandra-driver!~QueryAssignment:class"
            },
            {
              "kind": "Content",
              "text": ";\n    append: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryAssignment",
              "canonicalReference": "cassandra-driver!~QueryAssignment:class"
            },
            {
              "kind": "Content",
              "text": ";\n    prepend: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryAssignment",
              "canonicalReference": "cassandra-driver!~QueryAssignment:class"
            },
            {
              "kind": "Content",
              "text": ";\n    remove: (value: any) => "
            },
            {
              "kind": "Reference",
              "text": "QueryAssignment",
              "canonicalReference": "cassandra-driver!~QueryAssignment:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "q",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 26
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "cassandra-driver!QueryOptions:interface",
          "docComment": "/**\n * Query options  @typedef {Object} QueryOptions  @property {Boolean} [autoPage] Determines if the driver must retrieve the following result pages automatically. <p> This setting is only considered by the [Client#eachRow()]{@link Client#eachRow} method. For more information, check the [paging results documentation]{@link https://docs.datastax.com/en/developer/nodejs-driver/latest/features/paging/}. </p>  @property {Boolean} [captureStackTrace] Determines if the stack trace before the query execution should be maintained. <p> Useful for debugging purposes, it should be set to <code>false</code> under production environment as it adds an unnecessary overhead to each execution. </p> Default: false.  @property {Number} [consistency] [Consistency level]{@link module:types~consistencies}. <p> Defaults to <code>localOne</code> for Apache Cassandra and DSE deployments. For DataStax Astra, it defaults to <code>localQuorum</code>. </p>  @property {Object} [customPayload] Key-value payload to be passed to the server. On the Cassandra side, implementations of QueryHandler can use this data.  @property {String} [executeAs] The user or role name to act as when executing this statement. <p>When set, it executes as a different user/role than the one currently authenticated (a.k.a. proxy execution).</p> <p>This feature is only available in DSE 5.1+.</p>  @property {String|ExecutionProfile} [executionProfile] Name or instance of the [profile]{@link ExecutionProfile} to be used for this execution. If not set, it will the use \"default\" execution profile.  @property {Number} [fetchSize] Amount of rows to retrieve per page.  @property {Array|Array<Array>} [hints] Type hints for parameters given in the query, ordered as for the parameters. <p>For batch queries, an array of such arrays, ordered as with the queries in the batch.</p>  @property {Host} [host] The host that should handle the query. <p> Use of this option is <em>heavily discouraged</em> and should only be used in the following cases: </p> <ol> <li> Querying node-local tables, such as tables in the <code>system</code> and <code>system_views</code> keyspaces. </li> <li> Applying a series of schema changes, where it may be advantageous to execute schema changes in sequence on the same node. </li> </ol> <p> Configuring a specific host causes the configured [LoadBalancingPolicy]{@link module:policies/loadBalancing~LoadBalancingPolicy} to be completely bypassed. However, if the load balancing policy dictates that the host is at a [distance of ignored]{@link module:types~distance} or there is no active connectivity to the host, the request will fail with a [NoHostAvailableError]{@link module:errors~NoHostAvailableError}. </p>  @property {Boolean} [isIdempotent] Defines whether the query can be applied multiple times without changing the result beyond the initial application. <p> The query execution idempotence can be used at [RetryPolicy]{@link module:policies/retry~RetryPolicy} level to determine if an statement can be retried in case of request error or write timeout. </p> <p>Default: <code>false</code>.</p>  @property {String} [keyspace] Specifies the keyspace for the query. It is used for the following: <ol> <li>To indicate what keyspace the statement is applicable to (protocol V5+ only). This is useful when the query does not provide an explicit keyspace and you want to override the current {@link Client#keyspace}.</li> <li>For query routing when the query operates on a different keyspace than the current {@link Client#keyspace}.</li> </ol>  @property {Boolean} [logged] Determines if the batch should be written to the batchlog. Only valid for [Client#batch()]{@link Client#batch}, it will be ignored by other methods. Default: true.  @property {Boolean} [counter] Determines if its a counter batch. Only valid for [Client#batch()]{@link Client#batch}, it will be ignored by other methods. Default: false.  @property {Buffer|String} [pageState] Buffer or string token representing the paging state. <p>Useful for manual paging, if provided, the query will be executed starting from a given paging state.</p>  @property {Boolean} [prepare] Determines if the query must be executed as a prepared statement.  @property {Number} [readTimeout] When defined, it overrides the default read timeout (<code>socketOptions.readTimeout</code>) in milliseconds for this execution per coordinator. <p> Suitable for statements for which the coordinator may allow a longer server-side timeout, for example aggregation queries. </p> <p> A value of <code>0</code> disables client side read timeout for the execution. Default: <code>undefined</code>. </p>  @property {RetryPolicy} [retry] Retry policy for the query. <p> This property can be used to specify a different [retry policy]{@link module:policies/retry} to the one specified in the {@link ClientOptions}.policies. </p>  @property {Array} [routingIndexes] Index of the parameters that are part of the partition key to determine the routing.  @property {Buffer|Array} [routingKey] Partition key(s) to determine which coordinator should be used for the query.  @property {Array} [routingNames] Array of the parameters names that are part of the partition key to determine the routing. Only valid for non-prepared requests, it's recommended that you use the prepare flag instead.  @property {Number} [serialConsistency] Serial consistency is the consistency level for the serial phase of conditional updates. This option will be ignored for anything else that a conditional update/insert.  @property {Number|Long} [timestamp] The default timestamp for the query in microseconds from the unix epoch (00:00:00, January 1st, 1970). <p>If provided, this will replace the server side assigned timestamp as default timestamp.</p> <p>Use [generateTimestamp()]{@link module:types~generateTimestamp} utility method to generate a valid timestamp based on a Date and microseconds parts.</p>  @property {Boolean} [traceQuery] Enable query tracing for the execution. Use query tracing to diagnose performance problems related to query executions. Default: false. <p>To retrieve trace, you can call [Metadata.getTrace()]{@link module:metadata~Metadata#getTrace} method.</p>  @property {Object} [graphOptions] Default options for graph query executions. <p> These options are meant to provide defaults for all graph query executions. Consider using [execution profiles]{@link ExecutionProfile} if you plan to reuse different set of options across different query executions. </p>  @property {String} [graphOptions.language] The graph language to use in graph queries. Default: <code>'gremlin-groovy'</code>.  @property {String} [graphOptions.name] The graph name to be used in all graph queries. <p> This property is required but there is no default value for it. This value can be overridden at query level. </p>  @property {Number} [graphOptions.readConsistency] Overrides the [consistency level]{@link module:types~consistencies} defined in the query options for graph read queries.  @property {Number} [graphOptions.readTimeout] Overrides the default per-host read timeout (in milliseconds) for all graph queries. Default: <code>0</code>. <p> Use <code>null</code> to reset the value and use the default on <code>socketOptions.readTimeout</code> . </p>  @property {String} [graphOptions.source] The graph traversal source name to use in graph queries. Default: <code>'g'</code>.  @property {Number} [graphOptions.writeConsistency] Overrides the [consistency level]{@link module:types~consistencies} defined in the query options for graph write queries.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface QueryOptions "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "QueryOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#autoPage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autoPage?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "autoPage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#captureStackTrace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "captureStackTrace?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "captureStackTrace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#consistency:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "consistency?: "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "consistency",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#counter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "counter?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "counter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#customPayload:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "customPayload?: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "customPayload",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#executeAs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "executeAs?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "executeAs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#executionProfile:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "executionProfile?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionProfile",
                  "canonicalReference": "cassandra-driver!ExecutionProfile:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "executionProfile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#fetchSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fetchSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fetchSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#graphOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "graphOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        language?: string;\n        name?: string;\n        readConsistency?: number;\n        readTimeout?: number;\n        source?: string;\n        writeConsistency?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "graphOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#hints:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hints?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string> | "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hints",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#host:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "host?: "
                },
                {
                  "kind": "Reference",
                  "text": "Host",
                  "canonicalReference": "cassandra-driver!~Host:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "host",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#isIdempotent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIdempotent?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isIdempotent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#keyspace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyspace?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keyspace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#logged:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logged?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#pageState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageState?: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pageState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#prepare:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prepare?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prepare",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#readTimeout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readTimeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readTimeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#retry:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retry?: "
                },
                {
                  "kind": "Reference",
                  "text": "RetryPolicy",
                  "canonicalReference": "cassandra-driver!~RetryPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "retry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#routingIndexes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "routingIndexes?: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "routingIndexes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#routingKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "routingKey?: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "routingKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#routingNames:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "routingNames?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "routingNames",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#serialConsistency:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialConsistency?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serialConsistency",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#timestamp:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timestamp?: "
                },
                {
                  "kind": "Content",
                  "text": "number | "
                },
                {
                  "kind": "Reference",
                  "text": "Long",
                  "canonicalReference": "long!Long:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "timestamp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "cassandra-driver!QueryOptions#traceQuery:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "traceQuery?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "traceQuery",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!reconnection:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$b: "
            },
            {
              "kind": "Content",
              "text": "{\n    ReconnectionPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "ReconnectionPolicy",
              "canonicalReference": "cassandra-driver!~ReconnectionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ConstantReconnectionPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "ConstantReconnectionPolicy",
              "canonicalReference": "cassandra-driver!~ConstantReconnectionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ExponentialReconnectionPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "ExponentialReconnectionPolicy",
              "canonicalReference": "cassandra-driver!~ExponentialReconnectionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "reconnection",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "cassandra-driver!RemoveDocInfo:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type RemoveDocInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n    fields?: string[];\n    ttl?: number;\n    ifExists?: boolean;\n    when?: {\n        [key: string]: any;\n    };\n    deleteOnlyColumns?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "RemoveDocInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!RequestLogger:class",
          "docComment": "/**\n * A request tracker that logs the requests executed through the session, according to a set of configurable options.  @implements {module:tracker~RequestTracker}  @alias module:tracker~RequestLogger\n *\n * @example\n *\n * <caption>Logging slow queries</caption> const requestLogger = new RequestLogger({ slowThreshold: 1000 }); requestLogger.emitter.on('show', message => console.log(message)); // Add the requestLogger to the client options const client = new Client({ contactPoints, requestTracker: requestLogger });\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class RequestLogger extends "
            },
            {
              "kind": "Reference",
              "text": "RequestTracker",
              "canonicalReference": "cassandra-driver!RequestTracker:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "RequestLogger",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!RequestLogger:constructor(1)",
              "docComment": "/**\n * Creates a new instance of {@link RequestLogger}.\n *\n * @param options - \n *\n * @param  - {Number} [options.slowThreshold] The threshold in milliseconds beyond which queries are considered 'slow' and logged as such by the driver.\n *\n * @param  - {Number} [options.requestSizeThreshold] The threshold in bytes beyond which requests are considered 'large' and logged as such by the driver.\n *\n * @param  - {Boolean} [options.logNormalRequests] Determines whether it should emit 'normal' events for every EXECUTE, QUERY and BATCH request executed successfully, useful only for debugging. This option can be modified after the client is connected using the property {@link RequestLogger#logNormalRequests}.\n *\n * @param  - {Boolean} [options.logErroredRequests] Determines whether it should emit 'failure' events for every EXECUTE, QUERY and BATCH request execution that resulted in an error. This option can be modified after the client is connected using the property {@link RequestLogger#logErroredRequests}.\n *\n * @param  - {Number} [options.messageMaxQueryLength] The maximum amount of characters that are logged from the query portion of the message. Defaults to 500.\n *\n * @param  - {Number} [options.messageMaxParameterValueLength] The maximum amount of characters of each query parameter value that will be included in the message. Defaults to 50.\n *\n * @param  - {Number} [options.messageMaxErrorStackTraceLength] The maximum amount of characters of the stack trace that will be included in the message. Defaults to 200.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        slowThreshold?: number;\n        requestSizeThreshold?: number;\n        logNormalRequests?: boolean;\n        logErroredRequests?: boolean;\n        messageMaxQueryLength?: number;\n        messageMaxParameterValueLength?: number;\n        messageMaxErrorStackTraceLength?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!RequestLogger#onError:member(1)",
              "docComment": "/**\n * Logs message if request execution was too large and/or encountered an error.\n *\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onError(host: "
                },
                {
                  "kind": "Reference",
                  "text": "Host",
                  "canonicalReference": "cassandra-driver!~Host:class"
                },
                {
                  "kind": "Content",
                  "text": ", query: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        query: string;\n        params?: any;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ", parameters: "
                },
                {
                  "kind": "Content",
                  "text": "any[] | {\n        [p: string]: any;\n    } | null"
                },
                {
                  "kind": "Content",
                  "text": ", executionOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionOptions",
                  "canonicalReference": "cassandra-driver!ExecutionOptions:class"
                },
                {
                  "kind": "Content",
                  "text": ", requestLength: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", err: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ", latency: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "host",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parameters",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "executionOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "requestLength",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "err",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "latency",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!RequestLogger#onSuccess:member(1)",
              "docComment": "/**\n * Logs message if request execution was deemed too slow, large or if normal requests are logged.\n *\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSuccess(host: "
                },
                {
                  "kind": "Reference",
                  "text": "Host",
                  "canonicalReference": "cassandra-driver!~Host:class"
                },
                {
                  "kind": "Content",
                  "text": ", query: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        query: string;\n        params?: any;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ", parameters: "
                },
                {
                  "kind": "Content",
                  "text": "any[] | {\n        [p: string]: any;\n    } | null"
                },
                {
                  "kind": "Content",
                  "text": ", executionOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionOptions",
                  "canonicalReference": "cassandra-driver!ExecutionOptions:class"
                },
                {
                  "kind": "Content",
                  "text": ", requestLength: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", responseLength: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", latency: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "host",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parameters",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "executionOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "requestLength",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "responseLength",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "latency",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onSuccess"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!RequestTracker:class",
          "docComment": "/**\n * Tracks request execution for a {@link Client}. <p> A {@link RequestTracker} can be configured in the client options. The <code>Client</code> will execute {@link RequestTracker#onSuccess} or {@link RequestTracker#onError} for every query or batch executed (QUERY, EXECUTE and BATCH requests). </p>  @interface  @alias module:tracker~RequestTracker\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class RequestTracker "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "RequestTracker",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!RequestTracker#onError:member(1)",
              "docComment": "/**\n * Invoked each time a query or batch request fails.\n *\n * @param host - The node that acted as coordinator of the request.\n *\n * @param query - In the case of prepared or unprepared query executions, the provided query string. For batch requests, an Array containing the queries and parameters provided.\n *\n * @param parameters - In the case of prepared or unprepared query executions, the provided parameters.\n *\n * @param executionOptions - The information related to the execution of the request.\n *\n * @param requestLength - Length of the body of the request. When the failure occurred before the request was written to the wire, the length will be <code>0</code>.\n *\n * @param err - The error that caused that caused the request to fail.\n *\n * @param latency - An array containing [seconds, nanoseconds] tuple, where nanoseconds is the remaining part of the real time that can't be represented in second precision (see <code>process.hrtime()</code>).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onError?(host: "
                },
                {
                  "kind": "Reference",
                  "text": "Host",
                  "canonicalReference": "cassandra-driver!~Host:class"
                },
                {
                  "kind": "Content",
                  "text": ", query: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        query: string;\n        params?: any;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ", parameters: "
                },
                {
                  "kind": "Content",
                  "text": "any[] | {\n        [key: string]: any;\n    } | null"
                },
                {
                  "kind": "Content",
                  "text": ", executionOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionOptions",
                  "canonicalReference": "cassandra-driver!ExecutionOptions:class"
                },
                {
                  "kind": "Content",
                  "text": ", requestLength: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", err: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ", latency: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "host",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parameters",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "executionOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "requestLength",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "err",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "latency",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                }
              ],
              "isOptional": true,
              "isAbstract": false,
              "name": "onError"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!RequestTracker#onSuccess:member(1)",
              "docComment": "/**\n * Invoked each time a query or batch request succeeds.\n *\n * @param host - The node that acted as coordinator of the request.\n *\n * @param query - In the case of prepared or unprepared query executions, the provided query string. For batch requests, an Array containing the queries and parameters provided.\n *\n * @param parameters - In the case of prepared or unprepared query executions, the provided parameters.\n *\n * @param executionOptions - The information related to the execution of the request.\n *\n * @param requestLength - Length of the body of the request.\n *\n * @param responseLength - Length of the body of the response.\n *\n * @param latency - An array containing [seconds, nanoseconds] tuple, where nanoseconds is the remaining part of the real time that can't be represented in second precision (see <code>process.hrtime()</code>).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSuccess?(host: "
                },
                {
                  "kind": "Reference",
                  "text": "Host",
                  "canonicalReference": "cassandra-driver!~Host:class"
                },
                {
                  "kind": "Content",
                  "text": ", query: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        query: string;\n        params?: any;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ", parameters: "
                },
                {
                  "kind": "Content",
                  "text": "any[] | {\n        [key: string]: any;\n    } | null"
                },
                {
                  "kind": "Content",
                  "text": ", executionOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionOptions",
                  "canonicalReference": "cassandra-driver!ExecutionOptions:class"
                },
                {
                  "kind": "Content",
                  "text": ", requestLength: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", responseLength: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", latency: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "host",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parameters",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "executionOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "requestLength",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "responseLength",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "latency",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                }
              ],
              "isOptional": true,
              "isAbstract": false,
              "name": "onSuccess"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!RequestTracker#shutdown:member(1)",
              "docComment": "/**\n * Invoked when the Client is being shutdown.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shutdown?(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": true,
              "isAbstract": false,
              "name": "shutdown"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!ResponseError:class",
          "docComment": "/**\n * Represents an error message from the server\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ResponseError extends "
            },
            {
              "kind": "Reference",
              "text": "DriverError",
              "canonicalReference": "cassandra-driver!DriverError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ResponseError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!ResponseError:constructor(1)",
              "docComment": "/**\n * Represents an error message from the server\n *\n * @param code - Cassandra exception code\n *\n * @param message -  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(code: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "code",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#alive:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alive?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "alive",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#argTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "argTypes?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "argTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#blockFor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blockFor?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "blockFor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#code:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#consistencies:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "consistencies?: "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "consistencies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#failures:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "failures?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "failures",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#functionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "functionName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "functionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#isDataPresent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDataPresent?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isDataPresent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#keyspace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyspace?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keyspace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#queryId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "queryId?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "queryId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#reasons:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reasons?: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "reasons",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#received:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "received?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "received",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#required:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "required?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "required",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#table:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "table?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "table",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResponseError#writeType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeType?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "writeType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "cassandra-driver!responseErrorCodes:enum",
          "docComment": "/**\n * Server error codes returned by Cassandra  @type {Object}  @property {Number} serverError Something unexpected happened.  @property {Number} protocolError Some client message triggered a protocol violation.  @property {Number} badCredentials Authentication was required and failed.  @property {Number} unavailableException Raised when coordinator knows there is not enough replicas alive to perform a query with the requested consistency level.  @property {Number} overloaded The request cannot be processed because the coordinator is overloaded.  @property {Number} isBootstrapping The request was a read request but the coordinator node is bootstrapping.  @property {Number} truncateError Error encountered during a truncate request.  @property {Number} writeTimeout Timeout encountered on write query on coordinator waiting for response(s) from replicas.  @property {Number} readTimeout Timeout encountered on read query on coordinator waitign for response(s) from replicas.  @property {Number} readFailure A non-timeout error encountered during a read request.  @property {Number} functionFailure A (user defined) function encountered during execution.  @property {Number} writeFailure A non-timeout error encountered during a write request.  @property {Number} syntaxError The submitted query has a syntax error.  @property {Number} unauthorized The logged user doesn't have the right to perform the query.  @property {Number} invalid The query is syntactically correct but invalid.  @property {Number} configError The query is invalid because of some configuration issue.  @property {Number} alreadyExists The query attempted to create a schema element (i.e. keyspace, table) that already exists.  @property {Number} unprepared Can be thrown while a prepared statement tries to be executed if the provided statement is not known by the coordinator.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare enum responseErrorCodes "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "responseErrorCodes",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.alreadyExists:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alreadyExists = "
                },
                {
                  "kind": "Content",
                  "text": "9216"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "alreadyExists"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.badCredentials:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "badCredentials = "
                },
                {
                  "kind": "Content",
                  "text": "256"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "badCredentials"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.clientWriteFailure:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientWriteFailure = "
                },
                {
                  "kind": "Content",
                  "text": "32768"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "clientWriteFailure"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.configError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "configError = "
                },
                {
                  "kind": "Content",
                  "text": "8960"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "configError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.functionFailure:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "functionFailure = "
                },
                {
                  "kind": "Content",
                  "text": "5120"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "functionFailure"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.invalid:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "invalid = "
                },
                {
                  "kind": "Content",
                  "text": "8704"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "invalid"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.isBootstrapping:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isBootstrapping = "
                },
                {
                  "kind": "Content",
                  "text": "4098"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "isBootstrapping"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.overloaded:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overloaded = "
                },
                {
                  "kind": "Content",
                  "text": "4097"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "overloaded"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.protocolError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protocolError = "
                },
                {
                  "kind": "Content",
                  "text": "10"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "protocolError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.readFailure:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readFailure = "
                },
                {
                  "kind": "Content",
                  "text": "4864"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "readFailure"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.readTimeout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readTimeout = "
                },
                {
                  "kind": "Content",
                  "text": "4608"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "readTimeout"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.serverError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverError = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "serverError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.syntaxError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "syntaxError = "
                },
                {
                  "kind": "Content",
                  "text": "8192"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "syntaxError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.truncateError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "truncateError = "
                },
                {
                  "kind": "Content",
                  "text": "4099"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "truncateError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.unauthorized:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unauthorized = "
                },
                {
                  "kind": "Content",
                  "text": "8448"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "unauthorized"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.unavailableException:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unavailableException = "
                },
                {
                  "kind": "Content",
                  "text": "4096"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "unavailableException"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.unprepared:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unprepared = "
                },
                {
                  "kind": "Content",
                  "text": "9472"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "unprepared"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.writeFailure:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeFailure = "
                },
                {
                  "kind": "Content",
                  "text": "5376"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "writeFailure"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "cassandra-driver!responseErrorCodes.writeTimeout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeTimeout = "
                },
                {
                  "kind": "Content",
                  "text": "4352"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "writeTimeout"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Result:class",
          "docComment": "/**\n * Represents the result of an execution as an iterable of objects in the Mapper.  @alias module:mapping~Result\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `Result` class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Result<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> implements "
            },
            {
              "kind": "Reference",
              "text": "IterableIterator",
              "canonicalReference": "!IterableIterator:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "isAbstract": false,
          "name": "Result",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Result#[inspectMethod]:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "inspectMethod",
                  "canonicalReference": "cassandra-driver!~inspectMethod:var"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Content",
                  "text": "T[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "[inspectMethod]"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Result#[Symbol.iterator]:member(1)",
              "docComment": "/**\n * Returns a new Iterator object that contains the document values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Result#first:member(1)",
              "docComment": "/**\n * Gets the first document in this result or null when the result is empty.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "first(): "
                },
                {
                  "kind": "Content",
                  "text": "T | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "first"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Result#forEach:member(1)",
              "docComment": "/**\n * Executes a provided function once per result element.\n *\n * @param callback - Function to execute for each element, taking two arguments: currentValue and index.\n *\n * @param thisArg - Value to use as <code>this</code> when executing callback.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forEach(callback: "
                },
                {
                  "kind": "Content",
                  "text": "(currentValue: T, index: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forEach"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Result#next:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        done: boolean;\n        value: T;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "next"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Result#toArray:member(1)",
              "docComment": "/**\n * Converts the current instance to an Array of documents.  @return {Array<T>}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toArray(): "
                },
                {
                  "kind": "Content",
                  "text": "T[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toArray"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Result#wasApplied:member(1)",
              "docComment": "/**\n * When this instance is the result of a conditional update query, it returns whether it was successful. Otherwise, it returns <code>true</code>. <p> For consistency, this method always returns <code>true</code> for non-conditional queries (although there is no reason to call the method in that case). This is also the case for conditional DDL statements (CREATE KEYSPACE... IF NOT EXISTS, CREATE TABLE... IF NOT EXISTS), for which the server doesn't return information whether it was applied or not. </p>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wasApplied(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "wasApplied"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!ResultSet:class",
          "docComment": "/**\n * @class  @classdesc Represents the result of a query.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ResultSet` class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ResultSet implements "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Row",
              "canonicalReference": "cassandra-driver!Row:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "AsyncIterable",
              "canonicalReference": "!AsyncIterable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Row",
              "canonicalReference": "cassandra-driver!Row:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ResultSet",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ResultSet#[Symbol.asyncIterator]:member(1)",
              "docComment": "/**\n * Gets the async iterator function. <p> Retrieves the async iterator representing the entire query result, the driver will fetch the following result pages. </p> <p>Use the async iterator when the query result might contain more rows than the <code>fetchSize</code>.</p> <p> Note that using the async iterator will not affect the internal state of the <code>ResultSet</code> instance. You should avoid using both <code>rows</code> property that contains the row instances of the first page of results, and the async iterator, that will yield all the rows in the result regardless on the number of pages. </p> <p>Multiple concurrent async iterations are not supported.</p>  @alias module:types~ResultSet#@@asyncIterator\n *\n * @returns {AsyncIterator<Row>}\n *\n * @example\n *\n * <caption>Using for await...of statement</caption> const query = 'SELECT user_id, post_id, content FROM timeline WHERE user_id = ?'; const result = await client.execute(query, [ id ], { prepare: true }); for await (const row of result) { console.log(row['email']); }\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.asyncIterator",
                  "canonicalReference": "!SymbolConstructor#asyncIterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "AsyncIterator",
                  "canonicalReference": "!AsyncIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Row",
                  "canonicalReference": "cassandra-driver!Row:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "[Symbol.asyncIterator]"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ResultSet#[Symbol.iterator]:member(1)",
              "docComment": "/**\n * Gets the iterator function. <p> Retrieves the iterator of the underlying fetched rows, without causing the driver to fetch the following result pages. For more information on result paging, [visit the documentation]{@link http://docs.datastax.com/en/developer/nodejs-driver/latest/features/paging/}. </p>  @alias module:types~ResultSet#@@iterator\n *\n * @returns {Iterator.<Row>}\n *\n * @example\n *\n * <caption>Using for...of statement</caption> const query = 'SELECT user_id, post_id, content FROM timeline WHERE user_id = ?'; const result = await client.execute(query, [ id ], { prepare: true }); for (const row of result) { console.log(row['email']); }\n *\n * @see\n *\n * {@link module:types~ResultSet#@@asyncIterator}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "Iterator",
                  "canonicalReference": "!Iterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Row",
                  "canonicalReference": "cassandra-driver!Row:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResultSet#columns:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columns: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        name: string;\n        type: "
                },
                {
                  "kind": "Reference",
                  "text": "DataTypeInfo",
                  "canonicalReference": "cassandra-driver!~DataTypeInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "columns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ResultSet#first:member(1)",
              "docComment": "/**\n * Returns the first row or null if the result rows are empty.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "first(): "
                },
                {
                  "kind": "Reference",
                  "text": "Row",
                  "canonicalReference": "cassandra-driver!Row:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "first"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ResultSet#getColumns:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getColumns(): "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        name: string;\n        type: "
                },
                {
                  "kind": "Reference",
                  "text": "DataTypeInfo",
                  "canonicalReference": "cassandra-driver!~DataTypeInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getColumns"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ResultSet#getPageState:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPageState(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPageState"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResultSet#info:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "info: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        queriedHost: string;\n        triedHosts: {\n            [key: string]: any;\n        };\n        speculativeExecutions: number;\n        achievedConsistency: "
                },
                {
                  "kind": "Reference",
                  "text": "consistencies",
                  "canonicalReference": "cassandra-driver!consistencies:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        traceId: "
                },
                {
                  "kind": "Reference",
                  "text": "Uuid",
                  "canonicalReference": "cassandra-driver!Uuid:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        warnings: string[];\n        customPayload: any;\n        isSchemaInAgreement: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "info",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ResultSet#isPaged:member(1)",
              "docComment": "/**\n * Determines whether there are more pages of results. If so, the driver will initially retrieve and contain only the first page of results. To obtain all the rows, use the [AsyncIterator]{@linkcode module:types~ResultSet#@@asyncIterator}.\n *\n * @returns {boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isPaged(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isPaged"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResultSet#nextPage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nextPage: "
                },
                {
                  "kind": "Content",
                  "text": "(() => void) | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nextPage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResultSet#pageState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageState: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pageState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResultSet#rowLength:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rowLength: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rowLength",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResultSet#rows:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rows: "
                },
                {
                  "kind": "Reference",
                  "text": "Row",
                  "canonicalReference": "cassandra-driver!Row:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rows",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ResultSet#wasApplied:member(1)",
              "docComment": "/**\n * When this instance is the result of a conditional update query, it returns whether it was successful. Otherwise, it returns <code>true</code>. <p> For consistency, this method always returns <code>true</code> for non-conditional queries (although there is no reason to call the method in that case). This is also the case for conditional DDL statements (CREATE KEYSPACE... IF NOT EXISTS, CREATE TABLE... IF NOT EXISTS), for which the server doesn't return information whether it was applied or not. </p>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wasApplied(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "wasApplied"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!ResultSetGroup:class",
          "docComment": "/**\n * Represents results from different related executions.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ResultSetGroup` class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ResultSetGroup "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ResultSetGroup",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResultSetGroup#errors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errors: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResultSetGroup#resultItems:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resultItems: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resultItems",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResultSetGroup#totalExecuted:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "totalExecuted: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "totalExecuted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!ResultStream:class",
          "docComment": "/**\n * Readable stream using to yield data from a result or a field\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ResultStream` class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ResultStream extends "
            },
            {
              "kind": "Reference",
              "text": "Readable",
              "canonicalReference": "!\"\\\"stream\\\"\".internal.Readable:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ResultStream",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!ResultStream#add:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(chunk: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "chunk",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResultStream#buffer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buffer: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "buffer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!ResultStream#paused:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "paused: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "paused",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!retry:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$d: "
            },
            {
              "kind": "Content",
              "text": "{\n    IdempotenceAwareRetryPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "IdempotenceAwareRetryPolicy",
              "canonicalReference": "cassandra-driver!~IdempotenceAwareRetryPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    FallthroughRetryPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "FallthroughRetryPolicy",
              "canonicalReference": "cassandra-driver!~FallthroughRetryPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    RetryPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "RetryPolicy",
              "canonicalReference": "cassandra-driver!~RetryPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "retry",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Row:class",
          "docComment": "/**\n * Represents a result row\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `Row` class.\n *\n * @param columns -  @constructor\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Row "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Row",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "cassandra-driver!Row:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Row#forEach:member(1)",
              "docComment": "/**\n * Executes the callback for each field in the row, containing the value as first parameter followed by the columnName\n *\n * @param callback - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forEach(callback: "
                },
                {
                  "kind": "Content",
                  "text": "(val: any, key: string) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forEach"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Row#get:member(1)",
              "docComment": "/**\n * Returns the cell value.\n *\n * @param columnName - Name or index of the column\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(columnName: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "columnName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Row#keys:member(1)",
              "docComment": "/**\n * Returns an array of the column names of the row\n *\n * @returns {Array}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keys(): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "keys"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Row#values:member(1)",
              "docComment": "/**\n * Returns an array of the values of the row\n *\n * @returns {Array}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "values(): "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "values"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!speculativeExecution:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$9: "
            },
            {
              "kind": "Content",
              "text": "{\n    NoSpeculativeExecutionPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "NoSpeculativeExecutionPolicy",
              "canonicalReference": "cassandra-driver!~NoSpeculativeExecutionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    SpeculativeExecutionPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "SpeculativeExecutionPolicy",
              "canonicalReference": "cassandra-driver!~SpeculativeExecutionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ConstantSpeculativeExecutionPolicy: typeof "
            },
            {
              "kind": "Reference",
              "text": "ConstantSpeculativeExecutionPolicy",
              "canonicalReference": "cassandra-driver!~ConstantSpeculativeExecutionPolicy:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "speculativeExecution",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!TableMappings:class",
          "docComment": "/**\n * Contains a set of methods to represent a row into a document and a document into a row.  @alias module:mapping~TableMappings  @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class TableMappings "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "TableMappings",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TableMappings#getColumnName:member(1)",
              "docComment": "/**\n * Gets the name of the column based on the document property name.\n *\n * @param propName - The name of the property.\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getColumnName(propName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "propName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getColumnName"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TableMappings#getPropertyName:member(1)",
              "docComment": "/**\n * Gets the name of the document property based on the column name.\n *\n * @param columnName - The name of the column.\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPropertyName(columnName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "columnName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPropertyName"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TableMappings#newObjectInstance:member(1)",
              "docComment": "/**\n * Method that is called by the mapper to create the instance of the document.  @return {Object}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newObjectInstance(): "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "newObjectInstance"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!TimeoutError:class",
          "docComment": "/**\n * @private\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class TimeoutError extends "
            },
            {
              "kind": "Reference",
              "text": "_default$g.DriverError",
              "canonicalReference": "cassandra-driver!~__type#DriverError"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "TimeoutError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!TimeoutError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `TimeoutError` class\n *\n * @param message - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!timestampGeneration:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$8: "
            },
            {
              "kind": "Content",
              "text": "{\n    TimestampGenerator: typeof "
            },
            {
              "kind": "Reference",
              "text": "TimestampGenerator",
              "canonicalReference": "cassandra-driver!~TimestampGenerator:class"
            },
            {
              "kind": "Content",
              "text": ";\n    MonotonicTimestampGenerator: typeof "
            },
            {
              "kind": "Reference",
              "text": "MonotonicTimestampGenerator",
              "canonicalReference": "cassandra-driver!~MonotonicTimestampGenerator:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "timestampGeneration",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!TimeUuid:class",
          "docComment": "/**\n * If any of the arguments is not provided, it will be randomly generated, except for the date that will use the current date. <p> Note that when nodeId and/or clockId portions are not provided, the constructor will generate them using <code>crypto.randomBytes()</code>. As it's possible that <code>crypto.randomBytes()</code> might block, it's recommended that you use the callback-based version of the static methods <code>fromDate()</code> or <code>now()</code> in that case. </p>  @class  @classdesc Represents an immutable version 1 universally unique identifier (UUID). A UUID represents a 128-bit value. <p>Usage: <code>TimeUuid.now()</code></p>  @extends module:types~Uuid\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class TimeUuid extends "
            },
            {
              "kind": "Reference",
              "text": "Uuid",
              "canonicalReference": "cassandra-driver!Uuid:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "TimeUuid",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!TimeUuid:constructor(1)",
              "docComment": "/**\n * Creates a new instance of Uuid based on the parameters provided according to rfc4122. If any of the arguments is not provided, it will be randomly generated, except for the date that will use the current date. <p> Note that when nodeId and/or clockId portions are not provided, the constructor will generate them using <code>crypto.randomBytes()</code>. As it's possible that <code>crypto.randomBytes()</code> might block, it's recommended that you use the callback-based version of the static methods <code>fromDate()</code> or <code>now()</code> in that case. </p> This class represents an immutable version 1 universally unique identifier (UUID). A UUID represents a 128-bit value. <p>Usage: <code>TimeUuid.now()</code></p>\n *\n * @param value - The datetime for the instance, if not provided, it will use the current Date.\n *\n * @param ticks - A number from 0 to 10000 representing the 100-nanoseconds units for this instance to fill in the information not available in the Date, as Ecmascript Dates have only milliseconds precision.\n *\n * @param nodeId - A 6-length Buffer or string of 6 ascii characters representing the node identifier, ie: 'host01'.\n *\n * @param clockId - A 2-length Buffer or string of 6 ascii characters representing the clock identifier.  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(value: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", ticks?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", nodeId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", clockId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "ticks",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "nodeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "clockId",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid.fromDate:member(1)",
              "docComment": "/**\n * Generates a TimeUuid instance based on the Date provided using random node and clock values.\n *\n * @param date - Date to generate the v1 uuid.\n *\n * @param ticks - A number from 0 to 10000 representing the 100-nanoseconds units for this instance to fill in the information not available in the Date, as Ecmascript Dates have only milliseconds precision.\n *\n * @param nodeId - A 6-length Buffer or string of 6 ascii characters representing the node identifier, ie: 'host01'. If not provided, a random nodeId will be generated.\n *\n * @param clockId - A 2-length Buffer or string of 6 ascii characters representing the clock identifier. If not provided a random clockId will be generated.\n *\n * @param callback - An optional callback to be invoked with the error as first parameter and the created <code>TimeUuid</code> as second parameter. When a callback is provided, the random portions of the <code>TimeUuid</code> instance are created asynchronously. <p> When nodeId and/or clockId portions are not provided, this method will generate them using <code>crypto.randomBytes()</code>. As it's possible that <code>crypto.randomBytes()</code> might block, it's recommended that you use the callback-based version of this method in that case. </p>\n *\n * @example\n *\n * <caption>Generate a TimeUuid from a ECMAScript Date</caption> const timeuuid = TimeUuid.fromDate(new Date());\n *\n * @example\n *\n * <caption>Generate a TimeUuid from a Date with ticks portion</caption> const timeuuid = TimeUuid.fromDate(new Date(), 1203);\n *\n * @example\n *\n * <caption>Generate a TimeUuid from a Date without any random portion</caption> const timeuuid = TimeUuid.fromDate(new Date(), 1203, 'host01', '02');\n *\n * @example\n *\n * <caption>Generate a TimeUuid from a Date with random node and clock identifiers</caption> TimeUuid.fromDate(new Date(), 1203, function (err, timeuuid) { // do something with the generated timeuuid });\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromDate(date: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ", ticks?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", nodeId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", clockId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TimeUuid",
                  "canonicalReference": "cassandra-driver!TimeUuid:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "date",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "ticks",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "nodeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "clockId",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromDate"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid.fromDate:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromDate(date: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ", ticks: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", nodeId: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", clockId: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TimeUuid",
                  "canonicalReference": "cassandra-driver!TimeUuid:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "date",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "ticks",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "nodeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "clockId",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromDate"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid.fromString:member(1)",
              "docComment": "/**\n * Parses a string representation of a TimeUuid\n *\n * @param value - \n *\n * @returns {TimeUuid}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TimeUuid",
                  "canonicalReference": "cassandra-driver!TimeUuid:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid#getClockId:member(1)",
              "docComment": "/**\n * Returns the clock id this instance, with the variant applied (first 2 msb being 1 and 0).\n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClockId(): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getClockId"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid#getDate:member(1)",
              "docComment": "/**\n * Gets the Date representation of this instance.\n *\n * @returns {Date}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDate(): "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDate"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid#getDatePrecision:member(1)",
              "docComment": "/**\n * Gets the Date and 100-nanoseconds units representation of this instance.\n *\n * @returns {{date: Date, ticks: Number}}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDatePrecision(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        date: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ticks: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDatePrecision"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid#getNodeId:member(1)",
              "docComment": "/**\n * Returns the node id this instance\n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNodeId(): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNodeId"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid#getNodeIdString:member(1)",
              "docComment": "/**\n * Returns the node id this instance as an ascii string\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNodeIdString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNodeIdString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid.max:member(1)",
              "docComment": "/**\n * Returns the biggest possible type 1 uuid with the provided Date.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static max(date: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ", ticks?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TimeUuid",
                  "canonicalReference": "cassandra-driver!TimeUuid:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "date",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "ticks",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "max"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid.min:member(1)",
              "docComment": "/**\n * Returns the smaller possible type 1 uuid with the provided Date.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static min(date: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ", ticks?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TimeUuid",
                  "canonicalReference": "cassandra-driver!TimeUuid:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "date",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "ticks",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "min"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid.now:member(1)",
              "docComment": "/**\n * Generates a TimeUuid instance based on the current date using random node and clock values.\n *\n * @param nodeId - A 6-length Buffer or string of 6 ascii characters representing the node identifier, ie: 'host01'. If not provided, a random nodeId will be generated.\n *\n * @param clockId - A 2-length Buffer or string of 6 ascii characters representing the clock identifier. If not provided a random clockId will be generated.\n *\n * @param callback - An optional callback to be invoked with the error as first parameter and the created <code>TimeUuid</code> as second parameter. When a callback is provided, the random portions of the <code>TimeUuid</code> instance are created asynchronously. <p> When nodeId and/or clockId portions are not provided, this method will generate them using <code>crypto.randomBytes()</code>. As it's possible that <code>crypto.randomBytes()</code> might block, it's recommended that you use the callback-based version of this method in that case. </p>\n *\n * @example\n *\n * <caption>Generate a TimeUuid from a Date without any random portion</caption> const timeuuid = TimeUuid.now('host01', '02');\n *\n * @example\n *\n * <caption>Generate a TimeUuid with random node and clock identifiers</caption> TimeUuid.now(function (err, timeuuid) { // do something with the generated timeuuid });\n *\n * @example\n *\n * <caption>Generate a TimeUuid based on the current date (might block)</caption> const timeuuid = TimeUuid.now();\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static now(): "
                },
                {
                  "kind": "Reference",
                  "text": "TimeUuid",
                  "canonicalReference": "cassandra-driver!TimeUuid:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "now"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid.now:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static now(nodeId: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", clockId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TimeUuid",
                  "canonicalReference": "cassandra-driver!TimeUuid:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "nodeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "clockId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "now"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!TimeUuid.now:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static now(nodeId: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", clockId: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TimeUuid",
                  "canonicalReference": "cassandra-driver!TimeUuid:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "nodeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "clockId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "now"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "cassandra-driver!timeuuid:function(1)",
          "docComment": "/**\n * <p><strong>Backward compatibility only, use [TimeUuid]{@link module:types~TimeUuid} instead</strong>.</p> Generates and returns a RFC4122 v1 (timestamp based) UUID in a string representation.\n *\n * @deprecated\n *\n * Use [TimeUuid]{@link module:types~TimeUuid} instead\n *\n * @param options - \n *\n * @param buffer - \n *\n * @param offset - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function timeuuid(options: "
            },
            {
              "kind": "Content",
              "text": "{\n    msecs: any;\n    node: any;\n    clockseq: any;\n    nsecs: any;\n}"
            },
            {
              "kind": "Content",
              "text": ", buffer: "
            },
            {
              "kind": "Reference",
              "text": "Buffer",
              "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
            },
            {
              "kind": "Content",
              "text": ", offset: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "Buffer",
              "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "buffer",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "offset",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "timeuuid"
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!token:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "token: "
            },
            {
              "kind": "Content",
              "text": "{\n    Token: typeof "
            },
            {
              "kind": "Reference",
              "text": "Token",
              "canonicalReference": "cassandra-driver!~Token:class"
            },
            {
              "kind": "Content",
              "text": ";\n    TokenRange: typeof "
            },
            {
              "kind": "Reference",
              "text": "TokenRange",
              "canonicalReference": "cassandra-driver!~TokenRange:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "token",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!tracker:var",
          "docComment": "/**\n * Tracker module.  @module tracker\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$7: "
            },
            {
              "kind": "Content",
              "text": "{\n    RequestTracker: typeof "
            },
            {
              "kind": "Reference",
              "text": "RequestTracker",
              "canonicalReference": "cassandra-driver!RequestTracker:class"
            },
            {
              "kind": "Content",
              "text": ";\n    RequestLogger: typeof "
            },
            {
              "kind": "Reference",
              "text": "RequestLogger",
              "canonicalReference": "cassandra-driver!RequestLogger:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "tracker",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Tuple:class",
          "docComment": "/**\n * @class  @classdesc A tuple is a sequence of immutable objects. Tuples are sequences, just like [Arrays]{@link Array}. The only difference is that tuples can't be changed. <p> As tuples can be used as a Map keys, the {@link Tuple#toString toString()} method calls toString of each element, to try to get a unique string key. </p>\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Tuple "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Tuple",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!Tuple:constructor(1)",
              "docComment": "/**\n * Creates a new sequence of immutable objects with the parameters provided. A tuple is a sequence of immutable objects. Tuples are sequences, just like [Arrays]{@link Array}. The only difference is that tuples can't be changed. <p> As tuples can be used as a Map keys, the {@link Tuple#toString toString()} method calls toString of each element, to try to get a unique string key. </p>\n *\n * @param args - The sequence elements as arguments.  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(...args: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Tuple#elements:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "elements: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "elements",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Tuple.fromArray:member(1)",
              "docComment": "/**\n * Creates a new instance of a tuple based on the Array\n *\n * @param elements - \n *\n * @returns {Tuple}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromArray(elements: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Tuple",
                  "canonicalReference": "cassandra-driver!Tuple:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "elements",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromArray"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Tuple#get:member(1)",
              "docComment": "/**\n * Returns the value located at the index.\n *\n * @param index - Element index\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "get"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Tuple#length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Tuple#toJSON:member(1)",
              "docComment": "/**\n * Returns the Array representation of the sequence.\n *\n * @returns {Array}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Tuple#toString:member(1)",
              "docComment": "/**\n * Returns the string representation of the sequence surrounded by parenthesis, ie: (1, 2). <p> The returned value attempts to be a unique string representation of its values. </p>\n *\n * @returns {string}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Tuple#values:member(1)",
              "docComment": "/**\n * Gets the elements as an array\n *\n * @returns {Array}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "values(): "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "values"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!types:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default$c: "
            },
            {
              "kind": "Content",
              "text": "{\n    opcodes: {\n        error: number;\n        startup: number;\n        ready: number;\n        authenticate: number;\n        credentials: number;\n        options: number;\n        supported: number;\n        query: number;\n        result: number;\n        prepare: number;\n        execute: number;\n        register: number;\n        event: number;\n        batch: number;\n        authChallenge: number;\n        authResponse: number;\n        authSuccess: number;\n        cancel: number;\n        isInRange: (code: any) => boolean;\n    };\n    consistencies: typeof "
            },
            {
              "kind": "Reference",
              "text": "consistencies",
              "canonicalReference": "cassandra-driver!consistencies:enum"
            },
            {
              "kind": "Content",
              "text": ";\n    consistencyToString: {};\n    dataTypes: typeof "
            },
            {
              "kind": "Reference",
              "text": "dataTypes",
              "canonicalReference": "cassandra-driver!dataTypes:enum"
            },
            {
              "kind": "Content",
              "text": ";\n    getDataTypeNameByCode: typeof "
            },
            {
              "kind": "Reference",
              "text": "getDataTypeNameByCode",
              "canonicalReference": "cassandra-driver!getDataTypeNameByCode:function"
            },
            {
              "kind": "Content",
              "text": ";\n    distance: typeof "
            },
            {
              "kind": "Reference",
              "text": "distance",
              "canonicalReference": "cassandra-driver!distance:enum"
            },
            {
              "kind": "Content",
              "text": ";\n    frameFlags: {\n        compression: number;\n        tracing: number;\n        customPayload: number;\n        warning: number;\n    };\n    protocolEvents: {\n        topologyChange: string;\n        statusChange: string;\n        schemaChange: string;\n    };\n    protocolVersion: typeof "
            },
            {
              "kind": "Reference",
              "text": "protocolVersion",
              "canonicalReference": "cassandra-driver!protocolVersion:enum"
            },
            {
              "kind": "Content",
              "text": ";\n    responseErrorCodes: typeof "
            },
            {
              "kind": "Reference",
              "text": "responseErrorCodes",
              "canonicalReference": "cassandra-driver!responseErrorCodes:enum"
            },
            {
              "kind": "Content",
              "text": ";\n    resultKind: {\n        voidResult: number;\n        rows: number;\n        setKeyspace: number;\n        prepared: number;\n        schemaChange: number;\n    };\n    timeuuid: typeof "
            },
            {
              "kind": "Reference",
              "text": "timeuuid",
              "canonicalReference": "cassandra-driver!timeuuid:function"
            },
            {
              "kind": "Content",
              "text": ";\n    uuid: typeof "
            },
            {
              "kind": "Reference",
              "text": "uuid",
              "canonicalReference": "cassandra-driver!uuid:function"
            },
            {
              "kind": "Content",
              "text": ";\n    BigDecimal: typeof "
            },
            {
              "kind": "Reference",
              "text": "BigDecimal",
              "canonicalReference": "cassandra-driver!BigDecimal:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Duration: typeof "
            },
            {
              "kind": "Reference",
              "text": "Duration",
              "canonicalReference": "cassandra-driver!Duration:class"
            },
            {
              "kind": "Content",
              "text": ";\n    FrameHeader: typeof "
            },
            {
              "kind": "Reference",
              "text": "FrameHeader",
              "canonicalReference": "cassandra-driver!FrameHeader:class"
            },
            {
              "kind": "Content",
              "text": ";\n    InetAddress: typeof "
            },
            {
              "kind": "Reference",
              "text": "InetAddress",
              "canonicalReference": "cassandra-driver!InetAddress:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Integer: typeof "
            },
            {
              "kind": "Reference",
              "text": "Integer",
              "canonicalReference": "cassandra-driver!Integer:class"
            },
            {
              "kind": "Content",
              "text": ";\n    LocalDate: typeof "
            },
            {
              "kind": "Reference",
              "text": "LocalDate",
              "canonicalReference": "cassandra-driver!LocalDate:class"
            },
            {
              "kind": "Content",
              "text": ";\n    LocalTime: typeof "
            },
            {
              "kind": "Reference",
              "text": "LocalTime",
              "canonicalReference": "cassandra-driver!LocalTime:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Long: typeof "
            },
            {
              "kind": "Reference",
              "text": "Long",
              "canonicalReference": "long!Long:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ResultSet: typeof "
            },
            {
              "kind": "Reference",
              "text": "ResultSet",
              "canonicalReference": "cassandra-driver!ResultSet:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ResultStream: typeof "
            },
            {
              "kind": "Reference",
              "text": "ResultStream",
              "canonicalReference": "cassandra-driver!ResultStream:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Row: typeof "
            },
            {
              "kind": "Reference",
              "text": "Row",
              "canonicalReference": "cassandra-driver!Row:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DriverError: typeof "
            },
            {
              "kind": "Reference",
              "text": "DriverError",
              "canonicalReference": "cassandra-driver!DriverError:class"
            },
            {
              "kind": "Content",
              "text": ";\n    TimeoutError: typeof "
            },
            {
              "kind": "Reference",
              "text": "TimeoutError",
              "canonicalReference": "cassandra-driver!TimeoutError:class"
            },
            {
              "kind": "Content",
              "text": ";\n    TimeUuid: typeof "
            },
            {
              "kind": "Reference",
              "text": "TimeUuid",
              "canonicalReference": "cassandra-driver!TimeUuid:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Tuple: typeof "
            },
            {
              "kind": "Reference",
              "text": "Tuple",
              "canonicalReference": "cassandra-driver!Tuple:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Uuid: typeof "
            },
            {
              "kind": "Reference",
              "text": "Uuid",
              "canonicalReference": "cassandra-driver!Uuid:class"
            },
            {
              "kind": "Content",
              "text": ";\n    unset: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n        readonly unset: true;\n    }>;\n    generateTimestamp: typeof "
            },
            {
              "kind": "Reference",
              "text": "generateTimestamp",
              "canonicalReference": "cassandra-driver!generateTimestamp:function"
            },
            {
              "kind": "Content",
              "text": ";\n    Vector: typeof "
            },
            {
              "kind": "Reference",
              "text": "Vector",
              "canonicalReference": "cassandra-driver!Vector:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "types",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 56
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!UnderscoreCqlToCamelCaseMappings:class",
          "docComment": "/**\n * A [TableMappings]{@link module:mapping~TableMappings} implementation that converts CQL column names in all-lowercase identifiers with underscores (snake case) to camel case (initial lowercase letter) property names. <p> The conversion is performed without any checks for the source format, you should make sure that the source format is snake case for CQL identifiers and camel case for properties. </p>  @alias module:mapping~UnderscoreCqlToCamelCaseMappings  @implements {module:mapping~TableMappings}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class UnderscoreCqlToCamelCaseMappings extends "
            },
            {
              "kind": "Reference",
              "text": "TableMappings",
              "canonicalReference": "cassandra-driver!TableMappings:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "UnderscoreCqlToCamelCaseMappings",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!UnderscoreCqlToCamelCaseMappings:constructor(1)",
              "docComment": "/**\n * Creates a new instance of {@link UnderscoreCqlToCamelCaseMappings}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!UnderscoreCqlToCamelCaseMappings#getColumnName:member(1)",
              "docComment": "/**\n * Converts a property name in camel case to snake case.\n *\n * @param propName - Name of the property to convert to snake case.  @return {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getColumnName(propName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "propName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getColumnName"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!UnderscoreCqlToCamelCaseMappings#getPropertyName:member(1)",
              "docComment": "/**\n * Converts a column name in snake case to camel case.\n *\n * @param columnName - The column name to convert to camel case.  @return {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPropertyName(columnName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "columnName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPropertyName"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!unset:var",
          "docComment": "/**\n * Unset representation. <p> Use this field if you want to set a parameter to <code>unset</code>. Valid for Cassandra 2.2 and above. </p>\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "unset: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly unset: true;\n}>"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "unset",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "cassandra-driver!UpdateDocInfo:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type UpdateDocInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n    fields?: string[];\n    ttl?: number;\n    ifExists?: boolean;\n    when?: {\n        [key: string]: any;\n    };\n    orderBy?: {\n        [key: string]: string;\n    };\n    limit?: number;\n    deleteOnlyColumns?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "name": "UpdateDocInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Uuid:class",
          "docComment": "/**\n * @class  @classdesc Represents an immutable universally unique identifier (UUID). A UUID represents a 128-bit value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Uuid "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Uuid",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!Uuid:constructor(1)",
              "docComment": "/**\n * Creates a new instance of Uuid based on a Buffer Represents an immutable universally unique identifier (UUID). A UUID represents a 128-bit value.\n *\n * @param buffer - The 16-length buffer.  @constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Uuid#equals:member(1)",
              "docComment": "/**\n * Compares this object to the specified object. The result is true if and only if the argument is not null, is a UUID object, and contains the same value, bit for bit, as this UUID.\n *\n * @param other - The other value to test for equality.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Uuid",
                  "canonicalReference": "cassandra-driver!Uuid:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Uuid.fromString:member(1)",
              "docComment": "/**\n * Parses a string representation of a Uuid\n *\n * @param value - \n *\n * @returns {Uuid}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Uuid",
                  "canonicalReference": "cassandra-driver!Uuid:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Uuid#getBuffer:member(1)",
              "docComment": "/**\n * Gets the bytes representation of a Uuid\n *\n * @returns {Buffer}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBuffer(): "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Uuid#inspect:member(1)",
              "docComment": "/**\n * Provide the name of the constructor and the string representation\n *\n * @returns {string}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inspect(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inspect"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Uuid.random:member(1)",
              "docComment": "/**\n * Creates a new random (version 4) Uuid.\n *\n * @param callback - Optional callback to be invoked with the error as first parameter and the created Uuid as second parameter.\n *\n * @returns {Uuid}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static random(): "
                },
                {
                  "kind": "Reference",
                  "text": "Uuid",
                  "canonicalReference": "cassandra-driver!Uuid:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "random"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Uuid.random:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static random(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueCallback",
                  "canonicalReference": "cassandra-driver!~ValueCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Uuid",
                  "canonicalReference": "cassandra-driver!Uuid:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "random"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Uuid#toJSON:member(1)",
              "docComment": "/**\n * Returns the string representation. Method used by the native JSON.stringify() to serialize this instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Uuid#toString:member(1)",
              "docComment": "/**\n * Returns a string representation of the value of this Uuid instance. 32 hex separated by hyphens, in the form of 00000000-0000-0000-0000-000000000000.\n *\n * @returns {String}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "cassandra-driver!uuid:function(1)",
          "docComment": "/**\n * <p><strong>Backward compatibility only, use [Uuid]{@link module:types~Uuid} class instead</strong>.</p> Generate and return a RFC4122 v4 UUID in a string representation.\n *\n * @deprecated\n *\n * Use [Uuid]{@link module:types~Uuid} class instead\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function uuid(options: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", buffer: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", offset: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "buffer",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "offset",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "uuid"
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!Vector:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Vector "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Vector",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Vector#[Symbol.iterator]:member(1)",
              "docComment": "/**\n * @returns {IterableIterator<any>} an iterator over the elements of the vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Vector.[Symbol.species]:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get ["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.species",
                  "canonicalReference": "!SymbolConstructor#species"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "Vector",
                  "canonicalReference": "cassandra-driver!Vector:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "[Symbol.species]",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!Vector:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Vector` class\n *\n * @param elements - \n *\n * @param subtype - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(elements: "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", subtype?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "elements",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "subtype",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Vector#at:member(1)",
              "docComment": "/**\n * @param index - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "at(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "at"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Vector#elements:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "elements: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "elements",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Vector#forEach:member(1)",
              "docComment": "/**\n * @param callback - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forEach(callback: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any, index: number, array: any[]) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forEach"
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Vector#getSubtype:member(1)",
              "docComment": "/**\n * @returns {string | null} get the subtype string, e.g., \"float\", but it's optional so it can return null\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSubtype(): "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSubtype"
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Vector#length:member",
              "docComment": "/**\n * Returns the number of the elements.  @type Number\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cassandra-driver!Vector#subtype:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subtype: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "subtype",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "cassandra-driver!Vector#toString:member(1)",
              "docComment": "/**\n * Returns the string representation of the vector.\n *\n * @returns {string}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "cassandra-driver!version:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "version: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "version",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "cassandra-driver!VIntOutOfRangeException:class",
          "docComment": "/**\n * Represents a run-time exception when attempting to decode a vint and the JavaScript Number doesn't have enough space to fit the value that was decoded\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class VIntOutOfRangeException extends "
            },
            {
              "kind": "Reference",
              "text": "DriverError",
              "canonicalReference": "cassandra-driver!DriverError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "out/cassandra-rollup.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "VIntOutOfRangeException",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cassandra-driver!VIntOutOfRangeException:constructor(1)",
              "docComment": "/**\n * Represents a run-time exception when attempting to decode a vint and the JavaScript Number doesn't have enough space to fit the value that was decoded\n *\n * @param long - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(long: "
                },
                {
                  "kind": "Reference",
                  "text": "Long",
                  "canonicalReference": "long!Long:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "long",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
